data A = B { field :: Int }

data A = B { field :: Int, field2 :: Char }

data A = B { field :: Int, field2 :: Char, field3 :: String }

data A = B { field :: Int,
  field2 :: Char, field3 :: String } deriving Show

data A = B { field :: Int,
  field2 :: Char,
  field3 :: String } deriving Show

data A = B { field :: Int
  , field2 :: Char
  , field3 :: String } deriving (Show, Eq)

data A = B { field :: Int
  , field2 :: Char
  , field3 :: String } deriving (Show, Eq)

data A = B { field :: Int -- ^ Field 1
   }

data A = B { field :: Int, -- ^ Field 1
  field2 :: Char,  -- ^ field 2
  field3 :: String } deriving Show
