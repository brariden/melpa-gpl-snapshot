["return",{"cursor":{"line":1,"col":0},"marker":false}]
["return",{"result":true}]
["return",{"cursor":{"line":1,"col":0},"marker":false}]
["return",{"cursor":{"line":3,"col":0},"marker":false}]
["return",{"cursor":{"line":3,"col":0},"marker":false}]
["return",[["File \"fieldslib_01.ml\", line 2, characters 5-37","type nonrec t = { x : int; y : float ref; }"],["File \"fieldslib_01.ml\", line 2, characters 42-48","val x : t -> int"],["File \"fieldslib_01.ml\", line 2, characters 42-48","val y : t -> float ref"],["File \"_none_\", line 1","module Fields :\n  sig\n    val names : string list\n    val x :\n      ([? `Read | `Set_and_create ], t, int) Fieldslib.Field.t_with_perm\n    val y :\n      ([? `Read | `Set_and_create ], t, float ref)\n      Fieldslib.Field.t_with_perm\n    val make_creator :\n      x:(([? `Read | `Set_and_create ], t, int) Fieldslib.Field.t_with_perm ->\n         'a -> ('b -> int) * 'c) ->\n      y:(([? `Read | `Set_and_create ], t, float ref)\n         Fieldslib.Field.t_with_perm -> 'c -> ('b -> float ref) * 'd) ->\n      'a -> ('b -> t) * 'd\n    val create : x:int -> y:float ref -> t\n    val iter :\n      x:(([? `Read | `Set_and_create ], t, int) Fieldslib.Field.t_with_perm ->\n         unit) ->\n      y:(([? `Read | `Set_and_create ], t, float ref)\n         Fieldslib.Field.t_with_perm -> unit) ->\n      unit\n    val map :\n      x:(([? `Read | `Set_and_create ], t, int) Fieldslib.Field.t_with_perm ->\n         int) ->\n      y:(([? `Read | `Set_and_create ], t, float ref)\n         Fieldslib.Field.t_with_perm -> float ref) ->\n      t\n    val fold :\n      init:'a ->\n      x:('a ->\n         ([? `Read | `Set_and_create ], t, int) Fieldslib.Field.t_with_perm ->\n         'b) ->\n      y:('b ->\n         ([? `Read | `Set_and_create ], t, float ref)\n         Fieldslib.Field.t_with_perm -> 'c) ->\n      'c\n    val map_poly :\n      ([? `Read | `Set_and_create ], t, 'a) Fieldslib.Field.user -> 'a list\n    val for_all :\n      x:(([? `Read | `Set_and_create ], t, int) Fieldslib.Field.t_with_perm ->\n         bool) ->\n      y:(([? `Read | `Set_and_create ], t, float ref)\n         Fieldslib.Field.t_with_perm -> bool) ->\n      bool\n    val exists :\n      x:(([? `Read | `Set_and_create ], t, int) Fieldslib.Field.t_with_perm ->\n         bool) ->\n      y:(([? `Read | `Set_and_create ], t, float ref)\n         Fieldslib.Field.t_with_perm -> bool) ->\n      bool\n    val to_list :\n      x:(([? `Read | `Set_and_create ], t, int) Fieldslib.Field.t_with_perm ->\n         'a) ->\n      y:(([? `Read | `Set_and_create ], t, float ref)\n         Fieldslib.Field.t_with_perm -> 'a) ->\n      'a list\n    module Direct :\n      sig\n        val iter :\n          t ->\n          x:(([? `Read | `Set_and_create ], t, int)\n             Fieldslib.Field.t_with_perm -> t -> int -> unit) ->\n          y:(([? `Read | `Set_and_create ], t, float ref)\n             Fieldslib.Field.t_with_perm -> t -> float ref -> unit) ->\n          unit\n        val fold :\n          t ->\n          init:'a ->\n          x:('a ->\n             ([? `Read | `Set_and_create ], t, int)\n             Fieldslib.Field.t_with_perm -> t -> int -> 'b) ->\n          y:('b ->\n             ([? `Read | `Set_and_create ], t, float ref)\n             Fieldslib.Field.t_with_perm -> t -> float ref -> 'c) ->\n          'c\n      end\n  end"]]]
