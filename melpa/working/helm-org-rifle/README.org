#+PROPERTY: LOGGING nil

* helm-org-rifle

[[https://melpa.org/#/helm-org-rifle][file:https://melpa.org/packages/helm-org-rifle-badge.svg]] [[https://stable.melpa.org/#/helm-org-rifle][file:https://stable.melpa.org/packages/helm-org-rifle-badge.svg]]

This is my rifle.  There are many like it, but this one is mine.  My rifle is my best friend. It is my life.  I must master it as I must master my life.

What does my rifle do?  It searches rapidly through my Org files, quickly bringing me the information I need to defeat the enemy.

This package is a continuation of the fantastic [[https://github.com/alphapapa/org-search-goto][org-search-goto/org-search-goto-ml]] packages, now with Helm support. It searches both headings and contents of entries in Org buffers, and it displays entries that match all search terms, whether the terms appear in the heading, the contents, or both.  Matching portions of entries' contents are displayed with surrounding context and grouped by buffer to make it easy to acquire your target.

Entries are fontified by default to match the appearance of an Org buffer, and optionally the entire path can be displayed for each entry, rather than just its own heading.

** Screenshots

An animation is worth...a million words?

[[screencast.gif]]

With =helm-org-rifle-show-path= set to =t=, the whole path to each heading is shown:

[[screenshot-path.png]]

*Note:* I'm using =solarized-theme=, and these =org-level= face styles are just what I use, not part of this package.  If you install this, they will be fontified according to your own theme and faces.

* Installation

** MELPA

If you installed from MELPA, your rifle is ready.  Just run one of the [[*Usage][commands]] below.

** Manual

Install [[https://github.com/emacs-helm/helm][Helm]], [[https://github.com/magnars/dash.el][dash.el]], [[https://github.com/rejeep/f.el][f.el]], and [[https://github.com/magnars/s.el][s.el]].  Then require this package in your init file:

#+BEGIN_SRC elisp
(require 'helm-org-rifle)
#+END_SRC

* Usage

Run one of the rifle commands, type some words, and results will be displayed, grouped by buffer.  Hit =RET= to show the selected entry, or =<C-return>= to show it in an indirect buffer.

*Commands:*
+ =helm-org-rifle=: Shows results from all open Org buffers
+ =helm-org-rifle-current-buffer=: Shows results from current buffer
+ =helm-org-rifle-directories=: Shows results from selected directories; with prefix, recursively.
+ =helm-org-rifle-files=: Shows results from selected files.

** Tips

+ Show results from certain buffers by typing the name of the buffer (usually the filename).
+ Show headings with certain todo keywords by typing the keyword, e.g. =TODO= or =DONE=.
+ Show headings with certain priorities by typing, e.g. =#A= or =[#A]=.
+ Show headings with certain tags by searching for, e.g. =:tag1:=.
+ Exclude results with a =!=, e.g. =pepperoni !anchovies=.
+ Show entries in an indirect buffer by selecting that action from the Helm actions list, or by pressing =<C-return>=.
+ You can customize the =helm-org-rifle= group if you like.

* Changelog

** 1.3-pre

+ Nothing new yet.  D:

** 1.2.0

+ New commands =helm-org-rifle-files= and =helm-org-rifle-directories= to search through files that may or may not already be open.
    - New option =helm-org-rifle-directories-filename-regexp= to control what files are searched with =helm-org-rifle-directories= (e.g. including =.org_archive= files).
    - New option =helm-org-rifle-close-unopened-file-buffers= to control whether new buffers opened for searching remain open.  Leaving them open will make subsequent searches faster, but most users will probably prefer to not have their buffer list cluttered, so this is enabled by default.
    - New option =helm-org-rifle-directories-recursive= to control whether =helm-org-rifle-directories= recursively scans subdirectories, enabled by default.  When =helm-org-rifle-directories= is called with a prefix, this option is inverted.
    - Add dependency on [[https://github.com/rejeep/f.el][f.el]].
+ When =helm-org-rifle-show-path= is enabled, replace Org links in headings with their descriptions.  This prevents =org-format-outline-path= from truncating the links, making them useless for reading.
+ Show results in the order they appear in the Org file (they were shown in reverse order).

** 1.1.1

+ Fix =helm-org-rifle-show-path=.  A bug caused no results to be displayed for entries below the top level.

** 1.1

+ Restore context display.  This was accidentally broken when adding the negation feature, before the tagging of 1.0.0, so it's like a new feature.
+ Turn on the =show-tags= feature and remove the option to disable it.  It fixes a bug, and I don't think anyone would want to turn it off anyway.  It was off by default before, which might mean that users who didn't turn it on were getting incorrect results by default.  Oops.
+ Bind =<C-return>= to open entries in indirect buffers with =org-tree-to-indirect-buffer=.  This is super-duper handy, and seems to be an under-appreciated Org feature.  Try indirect buffers, today!
+ Add option to customize the ellipses and use comment face by default.
+ Use =dash.el= for some things.
+ Set =helm-input-idle-delay= to prevent flickering as the user types, customizable through =helm-org-rifle-input-idle-delay=.

** 1.0.1

+ Handle Org in-buffer settings (#5).  Thanks to @jonmoore.

* Credits

+ This package is inspired by =org-search-goto-ml= by [[https://lists.gnu.org/archive/html/emacs-orgmode/2011-12/msg00515.html][Tom]].  Its unofficial-official home is [[https://www.emacswiki.org/emacs/org-search-goto-ml.el][on EmacsWiki]], but I've mirrored it [[https://github.com/alphapapa/org-search-goto][on GitHub]] with some small fixes. It's a really great package, and the only thing that could make it better is to make it work with Helm.  To avoid confusion, this package has a completely different name.
+ Thanks to Thierry Volpiatto for doing such an amazing job with Helm.  Without him, this would not be possible. 
+ Thanks to [[https://www.reddit.com/user/washy99999][Jack, aka /u/washy99999]] for great feedback and suggestions.

* Development

I can't recommend [[https://github.com/tj64/outorg][Outorg]] enough.  If you edit source code and use Emacs, check it out!

** Bugs

None at the moment.  Bug reporter z...I mean, bug zapper, standing by...

** Ideas

*** MAYBE Sorting by timestamps

It would be nifty to optionally sort result nodes by timestamps appearing in them.  It might not be too slow...

*** MAYBE Timestamp searching

It would be interesting to be able to search for timestamps, e.g. for nodes timestamped on a certain day, or within a certain date range.  Might be a bit slow, because it would require comparing every timestamp in every result, but if it's what you need, then it would probably be usable and worth it.

*** MAYBE git grep support

By setting a custom =xfuncname= for a git repo containing org files (see =man 5 gitattributes=), git diff will display the org heading as the hunk header in its output.  Then running =git grep -W= shows *entire org entries* that match.  /And/ =git grep= has *boolean operators*.  And =git grep= is very fast.  Plug these into an async Helm source and boom, lightning-fast searching of org files, even if they aren't open in an Emacs buffer.  Well, as long as the files are in a git repo--but you /are/ storing your org files in a git repo, aren't you?  =)

*** UNDERWAY Non-substring matching

Currently matches are made against substrings, like most other commands in Helm.  However, this might not always lead to the best results.  For example, if someone were searching for "Sol", referring to the sun, he probably wouldn't want to match "solution" or "solvent" or "soliloquy".  But if someone were trying to dig up a note he made a while back about apple pie, did he write about "an apple pie" or "some apple pies"?  Dessert hangs in the balance!

To solve this, matches could be made against word, punctuation, or symbol boundaries.  However, this is less "Helm-like," and it might not be what most users expect.  So it would be good to make this a configurable default.  A prefix could override the default, and/or it could be toggleable from within a Helm session.

*** TODO Collapse overlapping context strings

Right now, if more than one term appears in the same range, parts of that range will show up more than once in the context.  Not a big deal, but should be fixable.

*** MAYBE Further profiling

=helm-org-rifle-get-candidates-in-buffer= might be able to be optimized more with =elp=.  But the "low-hanging fruit" is probably gone, and performance seems good.

*** MAYBE Regexp matching

It would be nice to have a regexp mode...maybe.

*** MAYBE Match limit

=org-search-goto= had a match limit.  I removed it to simplify things, but it might still be useful, depending on how big one's org files are.  However, performance seems good now, so this probably isn't needed.

* License

GPLv3
