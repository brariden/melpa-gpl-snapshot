#+TITLE: Emacs Grails Projectile Mode

[[https://github.com/yveszoundi/grails-projectile-mode/blob/master/LICENSE][file:http://img.shields.io/badge/license-GNU%20GPLv3-blue.svg]] [[http://stable.melpa.org/#/grails-projectile-mode][file:http://stable.melpa.org/packages/grails-projectile-mode-badge.svg]]  [[http://melpa.org/#/grails-projectile-mode][file:http://melpa.org/packages/grails-projectile-mode-badge.svg]]

This project provides useful [[http://grails.org][Grails]] support for Emacs in terms of navigation and commands execution.

* Table of contents							:TOC:
 - [[#screenshot][Screenshot]]
 - [[#keybindings-discovery-support][Keybindings discovery support]]
 - [[#grails-code-completion-information][Grails Code completion information]]
 - [[#dependencies-installation][Dependencies installation]]
     - [[#set-up][Set-up]]
     - [[#projectile][Projectile]]
     - [[#groovy-mode][Groovy mode]]
 - [[#commands][Commands]]
     - [[#minor-mode-prefix][Minor mode prefix]]
     - [[#interactive-commands][Interactive commands]]

* Screenshot

Below is a screenshot of =grails-projectile-mode= in action.
The menu is displayed via [[https://github.com/kai2nenobu/guide-key][guide-key]] with the flag =guide-key/recursive-key-sequence-flag=.

[[./images/screenshot.gif]]

* discover.el support
In order to improve usability, support has been added for [[https://github.com/mickeynp/discover.el][discover.el]] when available.
This makes it easier to use commands without resorting that much to muscle memory.

You can install =discover.el= via the =package.el=, =el-get=, =Cask= or whatever other package manager
you may be using. When =discover.el= is found in the Emacs =load-path=, support for it will be enabled
automatically. To use the default keybindings =grails-projectile-keymap-prefix= value, followed by the =d=
character (=C-c ; d= is the original value), add this to your =init file=.

: (require 'grails-projectile-discover)
: (grails-projectile-discover-setup-keybindings)

Below is a screenshot of this feature.

[[./images/discover.png]]

* Grails Code completion information

- Eclim [[https://github.com/ervandew/eclim/issues/25][now supports Groovy]] , you'll need the [[http://eclim.org/install.html][latest Eclim]] for that.
- I have a [[https://github.com/yveszoundi/emacs-eclim][modified version of emacs-eclim]] to hook groovy code completion.

[[./images/completion.gif]]

* Typical workflow
I use =Eclim= as it's convenient in terms of code completion for both Java and Groovy projects.

- Create a new application via =M-x grails-projectile-wizard-new-app= or =M-x grails-projectile-wizard-new-plugin=.
- Import the project in Eclipse via =M-x eclim-project-import=.
- Refresh dependencies just in case =M-x grails-projectile-refresh-dependencies=.
- Use the main =grails-projectile= commands to compile, clean or run the application.
- Use =eclim= commands for content assist among other things with =company-mode= or =autocomplete-mode=.

* Dependencies installation

** Package.el
It is recommended to use the [[http://www.emacswiki.org/emacs/ELPA][package system]] to install dependencies.
You'll likely want to start with =groovy-mode=.

** El-get
Add the following to your el-get-sources or user recipes

: (:name grails-projectile-mode
:  :website "https://github.com/yveszoundi/grails-projectile-mode/"
:  :description "Grails support for Projectile."
:  :type github
:  :pkgname "yveszoundi/grails-projectile-mode")

** Cask
Add the following entry to your =Cask= file within your =.emacs.d= folder.

=(depends-on "grails-projectile-mode")=

** Set-up
After installation, enable this minor mode with the code below:

: (require 'grails-projectile-mode)
: (grails-projectile-global-mode t)

If you use =discover.el= and want to integrate with it also add
the following to your setup.

: (require 'grails-projectile-discover)
: (grails-projectile-discover-setup-keybindings)

** Projectile
[[https://github.com/bbatsov/projectile/][Projectile]] is a nice way to manage projects in Emacs.
=M-x package-install projectile [RET]=

** Groovy mode
[[https://github.com/Groovy-Emacs-Modes/groovy-emacs-modes][Groovy-mode]] brings you Groovy syntax highlighting.
=M-x package-install groovy-mode [RET]=

* Commands
** Minor mode prefix
The default key prefix is =C-c ;=. This can be changed by
customizing the =grails-projectile-keymap-prefix= variable.

** Interactive commands

Below is the list of available interactive commands.
If you have =(grails-projectile-discover-setup-keybindings)= in your =init-file=,
you get the additional =C-c ; d= binding that will display a popup of available commands.

| KeyBinding | Description                         |
|------------+-------------------------------------|
| C-c ; r d  | Refresh dependencies                |
| C-c ; c p  | Compile project                     |
| C-c ; c l  | Clean                               |
| C-c ; e    | Arbitrary Grails command            |
| C-c ; i w  | Integrate with other tools          |
| C-c ; g a  | Generate all artifacts for a domain |
| C-c ; g c  | Generate controller                 |
| C-c ; g v  | Generate views                      |
| C-c ; b a  | Browse api docs                     |
| C-c ; b g  | Browse latest guide                 |
| C-c ; b w  | Browse wiki docs                    |
| C-c ; c d  | Create domain                       |
| C-c ; c t  | Create taglib                       |
| C-c ; c s  | Create service                      |
| C-c ; c c  | Create controller                   |
| C-c ; f d  | Find domain for file                |
| C-c ; f t  | Find test for file                  |
| C-c ; f s  | Find service for file               |
| C-c ; f c  | Find controller for file            |
| C-c ; l d  | Locate domain                       |
| C-c ; l t  | Locate test                         |
| C-c ; l s  | Locate service                      |
| C-c ; l v  | Locate view                         |
| C-c ; l c  | Locate controller                   |
| C-c ; r a  | Run application                     |
| C-c ; n a  | Create new application              |
| C-c ; n p  | Create new plugin                   |
| C-c ; p l  | List installed plugins              |
| C-c ; p p  | Package a plugin                    |
