*** DONE el-get support
    CLOSED: [2014-11-04 Tue 17:49]
    - CLOSING NOTE [2014-11-04 Tue 17:49] \\
      seems done and working

*** DONE use single documentation of package (DRY)
    CLOSED: [2014-11-04 Tue 18:41]
    - CLOSING NOTE [2014-11-04 Tue 18:41] \\
      regenerated documentation

*** DONE fix issue with elpa packages installation
    CLOSED: [2014-11-05 Wed 00:15]
    - CLOSING NOTE [2014-11-05 Wed 00:15] \\
      fixed. all packages are installing in req-package-finish loop

    elpa packages remain uninstalled until loaded by use-package
    it will be better to install them all at bootstrap launch

*** DONE el-get/elpa priority customization
    CLOSED: [2014-11-05 Wed 00:50]
    - CLOSING NOTE [2014-11-05 Wed 00:50] \\
      fixed. can be done by =req-package-providers= list reordering

    some users may needs customization for package sources
    if some package is present at both elpa and el-get
    we need options to choose where to get packages from

*** DONE custom software sources
    CLOSED: [2014-11-05 Wed 00:50]
    - CLOSING NOTE [2014-11-05 Wed 00:50] \\
      fixed. can be done by adding new function to =req-package-providers=

    alongside with elpa and el-get support it will be useful to add your own software sources
    For example - simple wget-based url loader:

    #+BEGIN_SRC emacs-lisp
    (add-recipe 'test-package "https://raw.githubusercontent.com/edvorg/req-package/master/req-package.el")
    (req-package test-package)
    #+END_SRC

*** TODO fix dependencies betweeb many req-package-finish calls
    this code snipped doesn't work now
    #+BEGIN_SRC emacs-lisp
    (req-package foo)
    (req-package-finish)
    (req-package bar :require foo)
    (req-package-finish)
    #+END_SRC

*** DONE handle errors
    CLOSED: [2015-08-30 Sun 19:40]
    - CLOSING NOTE [2015-08-30 Sun 19:40] \\
      all errors from non deferred code are handled now

*** TODO handle deferred code errors from =use-package=
