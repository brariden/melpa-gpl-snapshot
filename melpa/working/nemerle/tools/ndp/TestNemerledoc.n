/* Wroc≈Çaw, 2008
 * 
 * This file is a part of Nemerle Documentation Project.
 *
 * See COPYRIGHT file. 
 */


using System;

/// <remark>
/// The purpose of this module is to provide a test for Nemerle Documentation Project,
/// with all tags.
/// <para>Here's a paragraph</para>
/// </remark>
namespace NdpTest
{

  /// <summary> My exception. </summary>
  class MyException : Exception {}
  
  namespace NestedNamespace
  {
    
    public class Foo
    {
      /// <returns> Nothing, because throws exception</returns>
      /// <exception cref="MyException">Always throws exception</exception>
      public withexception() : void
      {
        def nc = NestedClass();
        nc.whoami();
        throw MyException()
      }
      /// <remarks>This function is for testing purposes only; to test all tags</remarks>
      /// <summary>Test list tag.
      /// <list type="table">
      /// <listheader>
      /// <term>This program</term><description>does</description>
      /// </listheader>
      /// <item><term>if XML file is an argument</term><description>analyzes this file</description></item>
      /// <item><term>if dll file is an argument</term><description>analyzes this file</description></item>
      /// </list>
      /// End of list tag test. But there is some value:
      /// <value>this is value</value>
      /// </summary>
      /// <permission cref="System.Security.PermissionSet">Public Access</permission>
      /// <param name="arg1">This is arg1</param>
      /// <param name="arg2">This is arg2</param>
      /// <param name="arg3">This is arg3</param>
      /// <seealso cref="AnyThing"/>
      /// <include file="NoFile.xml" path="/doc/members/member/*"/>
      public _foo () : void {}
      
      class NestedClass
      {
        public whoami() : void
        { 
          def foo = nested3rd();
          _ = foo.foo();
          Console.WriteLine("I am nested.nestedClass!!!")
        }
        
        
        /// <summary> This class is nested twice. </summary>
        /// <return>Returns meaninless string</return>
        class nested3rd
        {
          public foo() : string { "foo" }
        }
      }
      
      /// <value>Meaningless string</value>
      public whoami(): void { Console.WriteLine("I am nested.Foo!!!") }
    } 
  } // end nested 
 
 
} // end ndp-test
