using NemerleUnit
using Nemerle.IO

setup
    def fails(block)
        try
            block()
            false
        catch
            | _ is NUnit.Framework.AssertionException => true
            | _ => false

test "assert"
    assert true
    NUnit.Framework.Assert.IsTrue( fails( fun(){ assert false } ) )

test "assert equals"
    def two = 2
    assert two equals 2
    assert 2 equals two
    assert two equals two
    assert fails( fun(){ assert two equals 3 } )

test "assert q == null"
    def q = null
    assert q == null 

test "sth does not equal sth else"
    assert "0" does not equal "1"
    assert fails( fun(){ assert "0" does not equal "0" })

test "order should be 'assert actual equals expected'"
    def message = TestHelper.MessageAfterTestRun("failing equals","assertions")
    assert message.ToLower().IndexOf("expected: \"expected\"") does not equal -1 
