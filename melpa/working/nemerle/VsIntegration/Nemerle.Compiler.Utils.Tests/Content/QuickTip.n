/// Format: /*QuickTip:<offset>:<expected substring>/*

using System;/*QuickTip:-1:<keyword>namespace</keyword> System*/
using SCG = System.Collections.Generic;/*QuickTip:-1:Generic*/

namespace NsQT
{
  public struct    XStruct    {}
  public interface XInterface {}
  public class     BaseClass1 {}
  public variant   XVariant
  {
  | First
  | Second
  | Third { x : XStruct/*QuickTip:0:XStruct*/; }
  }

  public class c1 : BaseClass1, XInterface/*QuickTip:0:XInterface*/
  {
    //TODO: Надо разбираться с локешонами тел методов (учетом скобок). Так же надо доделать тест, чтобы он был более точным.
    _field/*QuickTip:0:_field*/ : SCG.Stack/*QuickTip:0:Stack*/[list/*QuickTip:0:list*/[XStruct/*QuickTip:0:XStruct*/]] = SCG.Stack/*QuickTip:0:.ctor*/();

    public this(_ : XInterface/*QuickTip:0:XInterface*/)
    {
    }

    public m1() : XStruct/*QuickTip:0:XStruct*/ * int/*QuickTip:0:int*/
    {
      (XStruct()/*QuickTip:-2:XStruct*/, 1)
    }

    public m2() : XInterface/*QuickTip:0:XInterface*/
    {
      null
    }

    public m3(v : XVariant/*QuickTip:0:XVariant*/) : object/*QuickTip:0:object*/
    {
    | First/*QuickTip:0:XVariant.First*/     => v;
    | Second/*QuickTip:0:XVariant.Second*/   => v;
    | Third(x)/*QuickTip:-2:XVariant.Third*/ => x;
    }

    p1 : int/*QuickTip:0:int*/ * list/*QuickTip:0:list*/[string/*QuickTip:0:string*/ * XStruct/*QuickTip:0:XStruct*/]
    {
        get { (0, [("str", XStruct()/*QuickTip:-2:XStruct*/)]) } 
    }
  }
}