using System;
using Nemerle.Assertions;
using Nemerle.Compiler;
using Nemerle.Utility;
using Nemerle.Collections;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using System.Diagnostics;

using TT = Nemerle.Compiler.Typedtree;
using SR = System.Reflection;
using SCG = System.Collections.Generic;

namespace Nemerle.Completion2.Factories
{
  //[InheritConstructors]
  public class IntelliSenseModeTyper : Typer
  {
    public this (m : MethodBuilder) { base (m) }
    public this (tb : TypeBuilder, tenv : TypeVarEnv, mb : MethodBuilder, env : GlobalEnv)
    { base(tb, tenv, mb, env) }
    public this (parent : Typer, fn : TT.TFunHeader) { base(parent, fn) }
    
    protected override RunDelayedTypings () : void { base.RunDelayedTypings() }

    protected override RunSecondPass (meth : MethodBuilder) : void
    {
      RunDelayedTypings();

      def t2 = Typer2 (CurrentTypeBuilder, meth, this);
      t2.Run ();

      //def t3 = Typer3 (meth);
      //t3.Run ();
    }
  }
}
