using System;
using System.Collections.Generic;
using System.Text;
using System.Xml;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Utility;
using Nemerle.Assertions;

namespace SimpleItemCatalog
{
  /// <summary>
  /// Description of Document.
  /// </summary>
  public class Document
  {
    _dictionary : Dictionary[string, List[string]] = Dictionary(); // definition {80} _dictionary
    
    public GetGroups() : array[string]
    {
      _dictionary.Keys.ToArray(); // usage {80}
    }  
    
    public GetItemsByGroup(group : string) : array[string]
    {
      _dictionary[group].ToArray(); // usage {80}
    }
    
    public AddGroup(group : string, items : array[string]) : void
    requires !_dictionary.ContainsKey(group) && items != null && items.Length > 0
    {
      _dictionary[group] = List(items);    
    }
    
    public Load(filename : string) : void
    {
      def doc = XmlDocument();
      doc.Load(filename);
      
      def getItemList(groupNode : XmlNode)
      {
        def result = List();
        foreach(itemNode is XmlNode in groupNode.SelectNodes("Item"))
        {
          result.Add(itemNode.InnerText);
        }
        result
      }
      
      
      def groups = doc.SelectNodes("/Storage/Group");
      foreach(group is XmlNode in groups)
      {
        _dictionary.Add(group.Attributes["Name"].Value, getItemList(group)); // usage {80}
      }
    }
    
    public Save(filename : string) : void
    {
      using(def writer = XmlTextWriter(filename, Encoding.UTF8))
      {
        writer.WriteStartDocument();
        writer.WriteStartElement("Storage");
        
        foreach(key in _dictionary.Keys) // usage {80}
        {
          writer.WriteAttributeString("Name", key);
          writer.WriteStartElement("Group");
          _dictionary[key].Iter(item => writer.WriteElementString("Item", item));
          writer.WriteEndElement();
        }
        
        writer.WriteEndElement();
        writer.WriteEndDocument();
      }
    }
  }
}