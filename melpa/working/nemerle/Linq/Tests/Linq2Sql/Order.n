using System;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using System.Data.Linq;
using System.Data.Linq.Mapping;

namespace LinqTests
{
  [Record]
	[Table(Name="dbo.Orders")]
	public partial class Order
	{
	  public this() { }
	  
		mutable _OrderID : int;
		mutable _CustomerID : string;
		mutable _EmployeeID : Nullable[int];
		mutable _OrderDate : Nullable[DateTime];
		mutable _RequiredDate : Nullable[DateTime];
		mutable _ShippedDate : Nullable[DateTime];
		mutable _ShipVia : Nullable[int];
		mutable _Freight : Nullable[decimal];
		mutable _ShipName : string;
		mutable _ShipAddress : string;
		mutable _ShipCity : string;
		mutable _ShipRegion : string;
		mutable _ShipPostalCode : string;
		mutable _ShipCountry : string;
		mutable _Order_Details : EntitySet[Detail] = EntitySet();
		mutable _Customer : EntityRef[Customer] = EntityRef();
		
		[Column(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public OrderID : int { get { _OrderID; } }
		
		[Column(Storage="_CustomerID", DbType="NChar(5)")]
		public CustomerID : string { get { _CustomerID; } }
		
		[Column(Storage="_EmployeeID", DbType="Int")]
		public EmployeeID : Nullable[int] { get { _EmployeeID; } }
		
		[Column(Storage="_OrderDate", DbType="DateTime")]
		public OrderDate : Nullable[DateTime]  { get { _OrderDate; } }
		
		[Column(Storage="_RequiredDate", DbType="DateTime")]
		public RequiredDate : Nullable[DateTime]  { get { _RequiredDate; } }
		
		[Column(Storage="_ShippedDate", DbType="DateTime")]
		public ShippedDate : Nullable[DateTime]  { get { _ShippedDate; } }
		
		[Column(Storage="_ShipVia", DbType="Int")]
		public ShipVia : Nullable[int]  { get { _ShipVia; } }
		
		[Column(Storage="_Freight", DbType="Money")]
		public Freight : Nullable[decimal]  { get { _Freight; } }
		
		[Column(Storage="_ShipName", DbType="NVarChar(40)")]
		public ShipName : string  { get { _ShipName; } }
		
		[Column(Storage="_ShipAddress", DbType="NVarChar(60)")]
		public ShipAddress : string  { get { _ShipAddress; } }
		
		[Column(Storage="_ShipCity", DbType="NVarChar(15)")]
		public ShipCity : string  { get { _ShipCity; } }
		
		[Column(Storage="_ShipRegion", DbType="NVarChar(15)")]
		public ShipRegion : string  { get { _ShipRegion; } }
		
		[Column(Storage="_ShipPostalCode", DbType="NVarChar(10)")]
		public ShipPostalCode : string  { get { _ShipPostalCode; } }
		
		[Column(Storage="_ShipCountry", DbType="NVarChar(15)")]
		public ShipCountry : string  { get { _ShipCountry; } }
		
		[Association(Name="Order_Order_Detail", Storage="_Order_Details", ThisKey="OrderID", OtherKey="OrderID")]
		public Details : EntitySet[Detail]  { get { _Order_Details; } }
		
		[Association(Name="Customer_Order", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer : Customer  { get { _Customer.Entity; } }
	}
}
