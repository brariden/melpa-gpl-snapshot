using System;
using System.Linq;
using Nemerle.Extensions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

namespace Tests
{
  using NorthWind;
  /// <summary>
  /// Description of Order.
  /// </summary>
  [Record, StructuralEquality, StructuralHashCode]
  class Order
  {
    [Accessor] _orderID    : int;
    [Accessor] _customerID : int;
    [Accessor] _orderDate  : DateTime;
    
    public override ToString() : string
    {
      $"Order(OrderID=$OrderID)"
    }
    
    public Customer : Customer
    {
      get { _customers.FindObject(c => c.CustomerID == CustomerID) }
    }
    
    public Total : double
    {
      get
      {
        _details.Where(d => d.OrderID == OrderID)
                .Select(d => d.Quantity * d.UnitPrice)
                .Sum()
      }
    }
    
    public Details : IQueryable[Detail]
    {
      get { _details.Where(d => d.OrderID == OrderID).AsQueryable() }
    }

    public _Details : Collections.Generic.IEnumerable[Detail]
    {
      get { _details.Where(d => d.OrderID == OrderID) }
    }
  }
}
