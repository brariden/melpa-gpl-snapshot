using System;
using System.Collections.Generic;
using System.Text;

using Nemerle.Utility;
using System.IO;

namespace KoLXo3
{
  [Serializable]
  [Record(Exclude = [md5])]
  public class DownloadItem
  {
    [NonSerialized]
    [Accessor(flags = WantSetter)]
    mutable downloader: DownloadList;
    
    [Accessor]
    relativeUrl: string;
    
    public Url: string
    {
      get { downloader.RemoteFolder + relativeUrl }
    }
    
    public Path: string
    {
      get { downloader.SavePath + downloader.Localize(relativeUrl) }
    }
    
    public ExistsOnDisk: bool
    {
      get { File.Exists(Path) }
    }
    
    public Size: int
    {
      get { FileInfo(Path).Length :> int }
    }
    
    [Accessor]
    goodSize: int;
    
    mutable md5: string;
    
    // TODO: memoize macro
    public Md5: string
    {
      get
      {
        when (md5 == null)
          md5 = downloader.ComputeMd5(Path);
        md5
      }
    }
    
    [Accessor]
    goodMd5: string;
    
    public IsGood: bool
    {
      get { ExistsOnDisk && Size == GoodSize && Md5 == GoodMd5 }
    }
    
    public override ToString(): string
    {
      mutable s = $"$RelativeUrl\n\tpath:\t\t$Path\n\texists:\t\t$ExistsOnDisk\n\treal size:\t"; // definition {10} s
      s += // usage {10}
        if (ExistsOnDisk)
          Size.ToString()
        else
          "-";
      s += $"\n\tgood size:\t$GoodSize\n\tmd5:\t\t"; // usage {10}
      s += // usage {10}
        if (ExistsOnDisk)
          Md5.ToString()
        else
          "-";
      s += $"\n\tgood md5:\t$GoodMd5"; // usage {10}
      s // usage {10}
    }
  }
  
}