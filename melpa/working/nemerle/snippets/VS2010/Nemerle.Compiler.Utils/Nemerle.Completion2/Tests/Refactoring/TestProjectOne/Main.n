using System;
using System.Console;
using Nemerle.Utility;

namespace KoLXo3
{
  module Program
  {
    Main() : void
    {
      def manager = DownloadList(); // definition {50} manager
      def rotator = ConsoleMenuRotator("KoLXo3 files downloader"); // definition {51} rotator
      rotator.Add('1', "Download index file", manager.DownloadIndex);
      rotator.Add('2', "Parse index file", manager.ParseIndex);
      rotator.Add('3', "Subtract existing files", manager.SubtractExisting);
      rotator.Add('4', "Download the first file from a list", manager.Download);
      rotator.Add('5', "Check md5 checksums", manager.CheckMd5);
      rotator.Add('6', "Open a packet of links", manager.OpenLinks);
      rotator.Add('7', "Generate HTML-file of links to download", manager.GenerateHtmlFile);
      rotator.Add('8', "Download the first file from a list (from *.by, rotating proxies)", manager.DownloadWithProxyRotation);
      rotator.Add('9', "Gather library in one place", manager.GatherKoLXo3);
      rotator.Add('a', "Prepare journal links for download", manager.PrepareJournalLinksForDownload);
      rotator.Add('b', "Download index of the first journal", manager.DownloadJournalIndex);
      rotator.Add('c', "Check pdf integrity and make download list", manager.CheckPdfIntegrityAndMakeDownloadList);
      rotator.Add('d', "Download a bunch of Springer links", manager.DownloadLotsOfSpringerLinks);
      rotator.Add('e', "Reparse all the index files and check for new", manager.ReparseAllTheIndexFilesAndCheckForNew);
      rotator.Add('q', "Move files back from quarantine", manager.MoveBackFilesFromQuarantine);
      rotator.Add('g', "Gather index files into one index file", manager.GatherIndex);
      rotator.Add('h', "Separate entries with unknown hash", manager.SeparateEntriesWithUnknownHash);
      rotator.Add('f', "Generate KoLXo3", manager.GenerateKoLXo3);
      rotator.Add('p', "Pick up catched files", manager.PickUpCatchedFiles);
      rotator.Add('0', "Pause", rotator.Pause);
      rotator.Auto = '4';
      rotator.AutoInterval = 5;
      rotator.Start();
    }
  }
}