using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.ComputationExpressions.Async
{
  public partial abstract class AsyncValue[A]
  {
    /// <summary>
    /// Implementation detail. DO NOT USE!
    /// </summary>
    public abstract TryGetResult(job : AsyncJobBase, result : out AsyncResult[A]) : bool;

    public abstract Result : AsyncResult[A] { get; }
    public Value : A { get { Result.GetValue() } }

    public WaitOne() : void
    {
      _ = Result
    }

    public static WaitAll[T](this values : IEnumerable[AsyncValue[T]]) : void
    {
      foreach (value in values)
        value.WaitOne();
    }
  }
}
