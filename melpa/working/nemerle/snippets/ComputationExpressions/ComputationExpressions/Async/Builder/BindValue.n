namespace Nemerle.ComputationExpressions.Async
{
  [Record]
  internal class AsyncBindValue[A, B] : Async[B]
  {
    private mutable async : AsyncValue[A];
    private cont : A -> Async[B];

    public override Exec(job : AsyncJobBase, _res : ref B) : Async[B]
    {
      mutable r;
      if (async.TryGetResult(job, out r))
        cont(r.GetValue());
      else
        this;
    }

    public override Cancel() : void
    {
    }
  }

  [Record]
  internal class AsyncBindValueVoid[A, B] : Async[B]
  {
    private mutable async : AsyncValue[A];
    private cont : void -> Async[B];

    public override Exec(job : AsyncJobBase, _res : ref B) : Async[B]
    {
      mutable r;
      if (async.TryGetResult(job, out r))
        cont();
      else
        this;
    }

    public override Cancel() : void
    {
    }
  }
}
