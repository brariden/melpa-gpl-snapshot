using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using Nemerle.ComputationExpressions;

namespace Test
{
  /// <summary>
  /// Description of ContTest.
  /// </summary>
  public class ContTest
  {
    [TestCaseAttribute(<#
asd n < 10
asd n < 20
asd n < 20
asd xxx
asd n < 10
#>)]
    public static Test1(stream : IO.TextWriter) : void
    {
      def cont = ContBuilder();
      def fn(n)
      {
        def r = comp cont
        {
          defcomp str = cont.CallCC(exit1 => comp cont
          {
            when (n < 10)
              callcomp exit1("n < 10");
            when (n < 20)
              callcomp exit1("n < 20");
            return "xxx";
          });
          return "asd " + str;
        };
        r.cont(x => x);
      }
      stream.WriteLine(fn(1));
      stream.WriteLine(fn(10));
      stream.WriteLine(fn(15));
      stream.WriteLine(fn(121));
      stream.WriteLine(fn(1));
    }

    [TestCaseAttribute(<#
#>)]
    public static Test2(stream : IO.TextWriter) : void
    {
      def cont = ContBuilder();
      def fn(n)
      {
        def r = comp cont
        {
          defcomp str = cont.CallCC(exit1 => comp cont
          {
          /*
            mutable i = 0;
            while (i < n)
            {
              stream.WriteLine(i);
              when (i > 20)
                callcomp exit1("n > 20");
            }*/
            def loop(i)
            {
              comp cont
              {
                stream.WriteLine(i);
                when (i > 20)
                  callcomp exit1("n > 20");
                when (i < n)
                  callcomp loop(i + 1);
              }
            }
            callcomp loop(0);
            return "xxx";
          });
          return "asd " + str;
        };
        r.cont(x => x);
      }
      //stream.WriteLine(fn(1));
      //stream.WriteLine(fn(10));
      //stream.WriteLine(fn(15));
      stream.WriteLine(fn(121));
    }
  }
}
/*
*/