using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;

using ICSharpCode.Core;
using ICSharpCode.SharpDevelop.Gui;
using ICSharpCode.SharpDevelop.Dom;
using ICSharpCode.SharpDevelop.Project;

using MSBuild = Microsoft.Build.BuildEngine;

using Nemerle.Utility;

namespace Nemerle.SharpDevelop
{
  public class UpdateMacroReferencesVisitor : ProjectBrowserTreeNodeVisitor
  {
    private e : ProjectItemEventArgs;

    public this(e : ProjectItemEventArgs)
    {
      this.e = e;
    }

    public override Visit(folder : CustomFolderNode, data : object) : object
    {
      match(folder)
      {
        | macro_ref_folder is MacroReferenceFolder =>
          when (ReferenceEquals(macro_ref_folder.Project, e.Project))
          {
            macro_ref_folder.ShowMacroReferences();
            macro_ref_folder.EnsureVisible();
            macro_ref_folder.Expand();
          }
          data
        | _ => base.Visit(folder, data)
      }
    }

    public override Visit(_ : DirectoryNode, data : object) : object
    {
      data
    }
  }
}