using System;
using System.Windows.Forms;

using ICSharpCode.Core;
using ICSharpCode.SharpDevelop.Gui;
using ICSharpCode.SharpDevelop.Project;

using Nemerle.Utility;

namespace Nemerle.SharpDevelop.Commands
{
  public class AddMacroReferenceToProject : AbstractMenuCommand
  {
    public override Run() : void
    {
      def project = match(Owner)
      {
        | owner is AbstractProjectBrowserTreeNode => owner.Project;
        | _ => ProjectService.CurrentProject;
      };
      when (project is NemerleProject)
      {
        LoggingService.Info("Show add macro reference dialog for " + project.FileName);
        using (selDialog = SelectReferenceDialog(project))
        {
          when (selDialog.ShowDialog(WorkbenchSingleton.MainForm) == DialogResult.OK)
          {
            foreach (reference in selDialog.ReferenceInformations)
            {
              match(reference)
              {
                | _ is ComReferenceProjectItem => ();
  
                | reference is ProjectReferenceProjectItem =>
                  def macro_ref = MacroProjectReferenceProjectItem(project, reference.ReferencedProject);
                  ProjectService.AddProjectItem(project, macro_ref);
  
                | reference is ReferenceProjectItem =>
                  def macro_ref = MacroReferenceProjectItem(project);
                  macro_ref.Include = reference.Include;
                  macro_ref.HintPath = reference.HintPath;
                  ProjectService.AddProjectItem(project, macro_ref);
  
                | _ => ();
              }
            }
            project.Save();
          }
        }
      }
    }
  }
}