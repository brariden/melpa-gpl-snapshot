using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;

using ICSharpCode.Core;
using ICSharpCode.SharpDevelop.Gui;
using ICSharpCode.SharpDevelop.Dom;
using ICSharpCode.SharpDevelop.Project;

using MSBuild = Microsoft.Build.BuildEngine;

using Nemerle.Utility;

namespace Nemerle.SharpDevelop
{
  public class MacroReferenceNode : AbstractProjectBrowserTreeNode
  {
    [Accessor] reference_project_item : MacroReferenceProjectItem;
    
    public this(reference_project_item : MacroReferenceProjectItem)
    {
      this.reference_project_item = reference_project_item;
      Tag = reference_project_item;
      
      ContextmenuAddinTreePath = "/SharpDevelop/Pads/ProjectBrowser/ContextMenu/MacroReferenceNode";
      SetIcon("Icons.16x16.Reference");
      Text = reference_project_item.ShortName;
    }

    public override EnableDelete : bool
    {
      get { true }
    }

    public override Delete() : void
    {
      def project = Project;
      ProjectService.RemoveProjectItem(reference_project_item.Project, reference_project_item);
      Debug.Assert(Parent != null);
      Debug.Assert(Parent is MacroReferenceFolder);
      (Parent :> MacroReferenceFolder).ShowMacroReferences();
      project.Save();
    }

    public override AcceptVisitor(visitor : ProjectBrowserTreeNodeVisitor, data : object) : object
    {
      visitor.Visit(this, data);
    }
  }
}