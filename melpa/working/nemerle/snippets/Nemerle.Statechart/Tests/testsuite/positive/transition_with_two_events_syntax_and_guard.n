using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

  [statechart(<#

  flags testing;
  //flags debug;
  
  name "transitions with two events and one guard";
  
    state A
    {
      a, b [a1] => B;
    }
  
    state B
    {
      a => A;
    }
  #>)]
  public class example
  {
    public a1 : bool {get;set;}
  }

 module Test
 {
   Main() : void
   {
    def fsm = example();
    def tester = fsm.GetTester();
    tester.ConsoleTestInit();
    tester.Initiate("A", "EntryA");
    tester.Test("a", null);
    tester.Test("b", null);
    fsm.a1 = true;
    tester.Test("a", ["A"], ["B"]);
    tester.Test("a", ["B"], ["A"]);
    tester.Test("b", ["A"], ["B"]);
    tester.Test("a", ["B"], ["A"]);
    fsm.Terminate();
     
   }
 }
 
/*
BEGIN-OUTPUT
EntryA
[A]
Ok
Processing a 'a' 
[A]
Ok
Processing a 'b' 
[A]
Ok
Processing a 'a' 
ExitA
EntryB
[B]
Ok
Processing a 'a' 
ExitB
EntryA
[A]
Ok
Processing a 'b' 
ExitA
EntryB
[B]
Ok
Processing a 'a' 
ExitB
EntryA
[A]
Ok
END-OUTPUT
*/
