using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using Nemerle.Compiler;

namespace Nemerle.Statechart
{

  class ActiveConfigProcessor
  {
    
    active_configs : List[ActiveStateConfig] = List();

    public ActiveConfigs : IEnumerable[ActiveStateConfig]
    {
      get
      {
        active_configs
      }
    }
    
    public CreateConfig(seq : list[Configuration]) : list[ActiveStateConfig]
    {
      seq.Map(x => CreateConfig(x.States))
    }

    public CreateConfig(seq : IEnumerable[HState]) : ActiveStateConfig
    {
      def result = seq.SelectMany(_.active_config).Distinct().NToList();
      def sort = result.Sort(x => x);
      match (active_configs.Find(x => x.IsThis(sort)))
      {
        | null => def conf = ActiveStateConfig([], sort, [], [], null, false);
                  active_configs.Add(conf);
                  conf
        | c  => c
      }

    }

  }
}
