using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;


namespace Nemerle.Statechart
{
  [Record]
  public class HistoryPath : IEquatable[HistoryPath]
  {
    public transition : Transition {get;set;}
    
    public History : PseudoState.History;
    
    public From : HState;
    
    public Name : string
    {
      get
      {
        def name = $"HistoryPathFrom$(From)To$(transition.Target)";
        //if (IsDefault) $"$transition" else 
        if (History.state.history.IsTwo) $"$(History.type)$name" else name
      }
    }

    public Equals(b : HistoryPath) : bool
    {
      Name == b.Name
    }
    
    public To : ActiveStateConfig
    {
      get
      {
        (transition.Target :> TargetDeterminator.State).state
      }
    }
    
    public override GetHashCode() : int
    {
      Name.GetHashCode()
    }
    
    public override ToString() : string
    {
      Name
    }
  }
  
}
