using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler;
using Nemerle.IO;
using Nemerle.Collections;
using Nemerle.Aop.DevMacros;
using Nemerle.Aop.Helper.ParserCombinators;

namespace Nemerle.Aop.Helper {

    public abstract class Pointcut {

        static public Parse(loose_group : Token, params_dict : Hashtable[string, AdviceParameter]) : Pointcut {
            Parse(Lexer(loose_group).TokenList, params_dict, ManagerClass.Instance.CoreEnv); //XXX check whether it is used somwhere outside tests
        }

        static public Parse( tokens : list[Token], params_dict : Hashtable[string, AdviceParameter], env : GlobalEnv) : Pointcut {
            def input = PInput(tokens, env, params_dict);
            some(Parse.pointcut)(input)
        }

        public abstract Matches(jp : Joinpoint) : MatchResult;
    }
}
