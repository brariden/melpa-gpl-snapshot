using Nemerle.Aop;
using Nemerle.IO;

public class C {
    public Property: int { 
        get {
            print("Property-get\n");
            0
        } 
        set {
            print("Property-set\n");
            pole = value;
        }
    }

    public Getter: int {
        get {
            print("Getter\n");
            0
        }
    }

    mutable pole: int;
    public Setter: int {
        set {
            pole = value;
            print("Setter\n")
        }
    }
    
}


[aspect()] public class Aspecto {
    after() returning: execution(C.Property{set;get}:int) {
        print("advice0\n")
    }

    after() returning: execution(C.Getter{get;}:int) {
        print("advice1\n")
    }
    
    after() returning: execution(C.Setter{set;}: ?) {
        print("advice2\n")
    }
}

public class Main {
    public static Main(): void {
        _=C().Property;
        C().Property = 1;
        _=C().Getter;
        C().Setter = 2;
    }
}


/*
BEGIN-OUTPUT
Property-get
advice0
Property-set
advice0
Getter
advice1
Setter
advice2
END-OUTPUT
*/
