using Nemerle.Aop;
using Nemerle.IO;


namespace A {
    public class Container {
        public class AClass {
            public virtual aMethod(): void {print("A\n")}
        }
    }
}

//namespace B {
//    public class BClass: A.AClass {
//        public override aMethod(): void {print("B\n")}
//    }
//}

[aspect()] public class Aspect {
    after() returning: execution(A.Container.?+.aMethod(): void) {print("advice\n")}
}

public class Main {
    public static Main(): void {
        A.Container.AClass().aMethod();
//        B.BClass().aMethod();
    }
}

/*
BEGIN-OUTPUT
A
advice
END-OUTPUT
*/
