using Nemerle.Aop;
using Nemerle.IO;

public class Foo {

  public MethodOfFoo1(_i: int): void {
    print("Foo1\n");
  }

  public MethodOfFoo2(_k: float): void {
    print("Foo2\n");
  }

    public MethodOfFoo3(): void {
    print("Foo3\n");
  }

  public static Main(): void {
    Foo().MethodOfFoo1(0);
        Foo().MethodOfFoo2(0.0f);
        Foo().MethodOfFoo3();
  }
}

[aspect()]
public class Aspect {

  after() returning: execution(Foo.?(..,int): void )  {
    print("advice1\n");
  }

  after() returning: execution(Foo.?(float,..): void ) {
    print("advice2\n");
  }
}

/*
BEGIN-OUTPUT
Foo1
advice1
Foo2
advice2
Foo3
END-OUTPUT
*/

