using System;
using System.Collections;
using System.Collections.Specialized;

public module POP3Client
{
  public class Parser
  {
    protected mutable message : StringCollection;
    protected mutable header  : ArrayList;
    private   mutable empties : int;
    
    
    public this ()
    {
      message = StringCollection ();
      header  = ArrayList ();
      empties = 0;
    }
    
    
    protected PreParse (mail : string) : void
    {
      mutable position = 0;
      mutable splitted = mail.Split ("\r\n".ToCharArray ());
      
      foreach (line : string in splitted)
      {
        if (line.Length == 0 && empties < 3) empties = empties + 1 else empties = 0;
        
        if (line.Length == 0 && empties < 3) {}
        else ignore (message.Add (line));
      };
      
      for (mutable i = 0; i < message.Count && message[i].Length > 0; i = i + 1)
      {
        if (Char.IsWhiteSpace (message[i][0]))
        {
          message[position] = message[position] + " " + message[i].Trim ();
          message.RemoveAt (i);
          i = i - 1;
        }
        else position = position + 1;
      };
    }
    
    
    protected ParseHeader () : void
    {
      while (message.Count > 0 && message[0].Length > 0)
      {
        try
        {
          ignore (header.Add (HeaderParameter (message[0])));
        }
        catch
        {
          | _e is FormatException => {}
        };

        message.RemoveAt (0);
      }
    }
    

    public GetMessage (entered : bool) : string
    {
      mutable result = String.Empty;

      foreach (str in message)
      {
        result = result + str;

        if (entered) result = result + "\r\n"
        else {};
      };

      result;
    }
  }
}
