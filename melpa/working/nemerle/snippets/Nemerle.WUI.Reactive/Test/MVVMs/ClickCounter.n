using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using Nemerle.Xml;
using Nemerle.WUI.Reactive;
using System.Xml.Linq;

namespace Test
{
  [Record, ViewModel]
  public class ClickCounterViewModel
  {
    public NumberOfClicks : int { get; set; }
    public HasClickedTooManyTimes : bool { get { NumberOfClicks >= 3 } }
    public RegisterClick() : void { NumberOfClicks++; }
  }
/*
    var viewModel = {};
    
    viewModel.NumberOfClicks = ko.observable(0);
 
    viewModel.RegisterClick = 
      function ()
      {
        this.NumberOfClicks(this.NumberOfClicks() + 2);
      };
 
    viewModel.HasClickedTooManyTimes = ko.dependentObservable(
      function ()
      {
        return this.NumberOfClicks() >= 8;
      }, viewModel);

    ko.applyBindings(viewModel);
*/

  public partial module Views
  {
    [View()]
    public ClickCounterView(viewModel : ClickCounterViewModel) : XElement
    {
      _ = viewModel;
      xml <# 
        <div class="note" xmlns="">
          <div>You've clicked <span data-bind="text: NumberOfClicks()">&nbsp;</span> times</div>
          <button data-bind="click: RegisterClick, enable: !HasClickedTooManyTimes()">Click me</button>
          <div data-bind="visible: HasClickedTooManyTimes()">
            That's too many clicks! Please stop before you wear out your fingers.
            <button data-bind="click: function() { NumberOfClicks(0) }">Reset clicks</button>
          </div>
        </div>
      #>
    }
  }
}
