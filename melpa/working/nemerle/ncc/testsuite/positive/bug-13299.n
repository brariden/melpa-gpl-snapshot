using System;
using System.Collections.Generic;

public delegate Func1[A, R](arg : A) : R;

public module Ext
{
    public static S[TSource](this _source : IEnumerable[TSource], _selector: Func1[TSource, int]) : int { 1 }
    public static S[TSource](this _source : IEnumerable[TSource], _selector: Func1[TSource, float?]) : float? { 2 }
    public static S[TSource](this _source : IEnumerable[TSource], _selector: Func1[TSource, decimal?]) : decimal? { 3 }
}

public module Test
{
  class Class1
  {
    public val : int;

    public this(i : int) { val = i }

    public override ToString() : string { $"$val" }
  }

  Main() : void
  {
    def lst = [Class1(1)];
    def resTyped = lst.S(x => (x.val : int));
    Console.WriteLine(resTyped);

    def res = lst.S(x => x.val);
    Console.WriteLine(res);
  }
}

/*
BEGIN-OUTPUT
1
1
END-OUTPUT
*/