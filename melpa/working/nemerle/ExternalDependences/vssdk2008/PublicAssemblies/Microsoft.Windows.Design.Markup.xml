<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Windows.Design.Markup</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Windows.Design.AssemblyReferences">
      <summary>
                    A context item that maintains the set of references the designer is using to resolve type information. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.AssemblyReferences.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.AssemblyReferences" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.AssemblyReferences.#ctor(System.Reflection.AssemblyName[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.AssemblyReferences" /> class. 
                </summary>
      <param name="newReferences">
                    The new set of references. This may not be null and it may not contain null values.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newReferences" /> is null, or if one of the values in the array is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.AssemblyReferences.GetTypes(System.Type)">
      <summary>
                    Returns all the types in the set of referenced assemblies that derive from or implement the specified base type.
                </summary>
      <returns>
                    An enumeration of types. An empty enumeration is returned if there are no matching types.
                </returns>
      <param name="baseType">
                    The base type that all returned types should derive from. If <paramref name="baseType" /> is an interface, all returned types will implement the interface.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseType" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.AssemblyReferences.ItemType">
      <summary>
                    Gets a key in the context item manager to determine what type of context item this object is. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.AssemblyReferences.OnItemChanged(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.ContextItem)">
      <summary>
                    Called on a context item before it is stored in the context item manager.
                </summary>
      <param name="context">
                    The editing context that is receiving this <see cref="T:Microsoft.Windows.Design.AssemblyReferences" /> object.
                </param>
      <param name="previousItem">
                    The existing <see cref="T:Microsoft.Windows.Design.AssemblyReferences" /> object.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.AssemblyReferences.ReferencedAssemblies">
      <summary>
                    Gets an enumerable that can be used to enumerate the set of referenced assemblies.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.DocumentLoadState">
      <summary>
                    Represents what was loaded.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.DocumentLoadState.InvalidMarkup">
      <summary>
                    The markup could not be parsed and the type of the root element could not be determined or was determined not to be a designable class.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.DocumentLoadState.ValidMarkup">
      <summary>
                    The markup could be parsed, but no designer view can be created because the class does not have a root-designable element. <see cref="T:System.Windows.ResourceDictionary" /> is an example of a class that can be a root, but is not designable.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.DocumentLoadState.InvalidView">
      <summary>
                    The markup could not be parsed, but it was parsed enough to determine that the file, if valid, would have a root-designable element.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.DocumentLoadState.ValidView">
      <summary>
                    The markup could be parsed and represents a root-designable element.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.DocumentLoadState.LoadCanceled">
      <summary>
                    The document load was canceled before it could be completed.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.DocumentUndoUnitCreatedEventArgs">
      <summary>
                    Provides data for the <see cref="E:Microsoft.Windows.Design.Documents.MarkupDocumentManager.UndoUnitCreated" /> event. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.DocumentUndoUnitCreatedEventArgs.#ctor(Microsoft.Windows.Design.Documents.IDocumentUndoUnit)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.DocumentUndoUnitCreatedEventArgs" /> class. 
                </summary>
      <param name="unit">
                    An undo unit.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.DocumentUndoUnitCreatedEventArgs.UndoUnit">
      <summary>
                    Get the undo unit that was just created.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.IDocumentUndoUnit">
      <summary>
                    An undo unit which can be produced by a <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IDocumentUndoUnit.Apply">
      <summary>
                    Applies the undo unit. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IDocumentUndoUnit.Description">
      <summary>
                    Gets the description of the undo unit. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IDocumentUndoUnit.Mergable(Microsoft.Windows.Design.Documents.IDocumentUndoUnit)">
      <summary>
                    Returns a value indicating whether the specified undo unit can be merged with the current undo unit. 
                </summary>
      <returns>true if the specified undo unit can be merged with the current undo unit; otherwise, false. 
                </returns>
      <param name="unit">
                    The undo unit to merge with the current undo unit.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.IIdentityProviderService">
      <summary>
                    Service that is used to produce unique identities for instances. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IIdentityProviderService.GetUniqueIdentity(System.Type)">
      <summary>
                    Provides a unique identity that can be used for a new item.
                </summary>
      <returns>
                    A unique identity to use for new items.
                </returns>
      <param name="type">
                    An item to get a unique identity for.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.ILoadStateProvider">
      <summary>
                    Provides a load state. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.ILoadStateProvider.LoadState">
      <summary>
                    Gets the load state of the load that is throwing the exception that implements this interface.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.IMarkupErrorMessage">
      <summary>
                    An interface for reporting error messages in markup source files.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupErrorMessage.Category">
      <summary>
                    Gets whether the error message category is a warning, error, or message.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupErrorMessage.Code">
      <summary>
                    Gets the error code number.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupErrorMessage.Message">
      <summary>
                    Gets the error message as a string.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.IMarkupLocation">
      <summary>
                    Represents the location of a range of characters in a markup source file.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupLocation.Length">
      <summary>
                    Gets the length, in characters, of the range.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupLocation.Offset">
      <summary>
                    Gets a zero-based character offset from the beginning of the file.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.IMarkupLocationProvider">
      <summary>
                    Represents the source location for a node.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IMarkupLocationProvider.GetLocation">
      <summary>
                    Returns the location information associated with this object.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.IMarkupProjectContext">
      <summary>
                    Provides additional project-level information when parsing a markup file.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupProjectContext.ApplicationModel">
      <summary>
                    Gets the application model. 
                </summary>
      <returns>
                    The application model or null if there is no application model for this context.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IMarkupProjectContext.GetBinaryResource(System.Uri)">
      <summary>
                    Retrieves the specified URI in the project system and returns its contents as a binary blob. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Services.BinaryResource" /> object corresponding to the URI resource, or null if there is no binary resource available for the URI.
                </returns>
      <param name="uri">
                    The URI to get the resource for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IMarkupProjectContext.GetModelResource(System.Uri)">
      <summary>
                    Retrieves the specified URI in the project system, loads it, and returns a <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the root. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> object corresponding to the URI resource, or null if there is no model item available for the URI.
                </returns>
      <param name="uri">
                    The URI to get the resource for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupProjectContext.ParentModelResources">
      <summary>
                    Gets a resource list that is used to resolve resource references during the tree load in order to handle finding resources defined in another tree. 
                </summary>
      <returns>
                    A resource list that is used to resolve resource references during the tree load.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupProjectContext.ResourceUris">
      <summary>
                    Gets an enumeration of URI values that can be loaded as resources.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IMarkupProjectContext.TranslateStreamUri(System.Uri)">
      <summary>
                    Translates a URI to the original URI. 
                </summary>
      <returns>
                    The translated URI, or the incoming URI if no translation was needed.
                </returns>
      <param name="streamUri">
                    The URI to translate.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="streamUri" /> is null.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.IMarkupSourceProvider">
      <summary>
                    Interface to the host provider of source to the <see cref="T:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager" /> class.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.AssemblyReferences">
      <summary>
                    Gets the assemblies referenced by the project this source file is associated with.
                </summary>
      <returns>
                    A list of assemblies referenced by the project this source file is associated with.
                </returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.AssemblyReferencesChanged">
      <summary>
                    Occurs when the set of references the source provider is referencing has changed.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.ClearErrors">
      <summary>
                    Clears previously reported errors.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.CreateChanger">
      <summary>
                    Creates a changer for the source this provider represents.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.CreateReader">
      <summary>
                    Creates a reader for the source this provider represents.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.DefaultNamespace">
      <summary>
                    Gets the default namespace, if any, for the source file.
                </summary>
      <returns>
                    The default namespace, if any, for the source file.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.ErrorsEncountered(System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.Documents.IMarkupErrorMessage},System.Int64)">
      <summary>
                    Called whenever source errors are encountered.
                </summary>
      <param name="messages">
                    A list of error messages.
                </param>
      <param name="sourceVersion">
                    An identifier for the current version of the source.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.FileName">
      <summary>
                    Gets the name of the file to use in error messages.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.GetSourceVersion">
      <summary>
                    Returns an identifier for the current version of the source.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.GetTextRange(System.Int32,System.Int32,System.Int32)">
      <summary>
                    Gets a range of characters in the source this provider represents
                </summary>
      <returns>
                    Returns a <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRange" /> of characters in the source this provider represents.
                </returns>
      <param name="location">
                    The start location of the range as an offset from the beginning of file.
                </param>
      <param name="length">
                    The length of the range in characters.
                </param>
      <param name="kind"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.LocalAssemblyName">
      <summary>
                    Gets the local assembly name. 
                </summary>
      <returns>
                    The local assembly name or null if there is no local assembly.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.ReportDocumentUpdateState(Microsoft.Windows.Design.Documents.UpdateState)">
      <summary>
                    Reports changes to the document state.
                </summary>
      <param name="updateState"></param>
    </member>
    <member name="E:Microsoft.Windows.Design.Documents.IMarkupSourceProvider.SourceChange">
      <summary>
                    Occurs when the source changes or the list of referenced assemblies changes.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.ImplicitKeyAttribute">
      <summary>
                    An attribute to assign to a class if the class that should be used as an implicit key when it is added to a dictionary during serialization.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.ImplicitKeyAttribute.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.ImplicitKeyAttribute" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.ImplicitKeyAttribute.#ctor(System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.ImplicitKeyAttribute" /> class. 
                </summary>
      <param name="propertyName">
                    The name of the property to use as an implicit key.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.ImplicitKeyAttribute.PropertyName">
      <summary>
                    Gets the name of the property to use as an implicit key.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.InstanceExtension">
      <summary>
                    Holds a list of weak references to instances.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.InstanceExtension.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.InstanceExtension" /> class. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.InstanceExtension.Index">
      <summary>
                    Gets or sets the index of the instance.
                </summary>
      <returns>
                    An integer representing the index of the instance.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.InstanceExtension.ProvideValue(System.IServiceProvider)">
      <summary>
                    Returns the value of the instance specified by <see cref="P:Microsoft.Windows.Design.Documents.InstanceExtension.Index" />.
                </summary>
      <returns>
                    The value of the instance specified by <see cref="P:Microsoft.Windows.Design.Documents.InstanceExtension.Index" />.
                </returns>
      <param name="serviceProvider">
                    Ignored.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.MarkupDocumentManager">
      <summary>
                    Handles reading and writing markup (XAML) documents.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.MarkupDocumentManager" /> class.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.#ctor(Microsoft.Windows.Design.EditingContext)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.MarkupDocumentManager" /> class. 
                </summary>
      <param name="context">
                    The editing context this document manager uses to get services.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.#ctor(Microsoft.Windows.Design.Features.FeatureManager)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.MarkupDocumentManager" /> class.
                </summary>
      <param name="manager">
                    The extension manager this document manager uses to resolve extensions and get services.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.MarkupDocumentManager.Context">
      <summary>
                    Gets access to the editing context of the designer. 
                </summary>
      <returns>
                    An editing context of the designer. This property never returns null.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.CreateMarkupTree(Microsoft.Windows.Design.Documents.IMarkupSourceProvider,Microsoft.Windows.Design.Documents.IMarkupProjectContext)">
      <summary>
                    Creates the <see cref="T:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager" /> that is used to load and save the document. 
                </summary>
      <returns>
                    A new <see cref="T:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager" />.
                </returns>
      <param name="source">
                    The <see cref="T:Microsoft.Windows.Design.Documents.IMarkupSourceProvider" /> that is used to load and save the document.
                </param>
      <param name="project">
                    An optional project context that can provide additional contextual information.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.CreateModelTree(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager,Microsoft.Windows.Design.Documents.IMarkupProjectContext)">
      <summary>
                    Creates the <see cref="T:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager" /> that is used to create and maintain the editing model for the designer. 
                </summary>
      <returns>
                    A new <see cref="T:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager" />.
                </returns>
      <param name="markupTree">
                    An instance of <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager" /> that provides access to the parsed markup information.
                </param>
      <param name="project">
                    An optional project context that can provide additional contextual information.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="markupTree" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.CreateViewManager(Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager)">
      <summary>
                    Creates the <see cref="T:Microsoft.Windows.Design.Documents.ViewManager" /> that is used to create and maintain the view for the designer.
                </summary>
      <returns>
                    A new <see cref="T:Microsoft.Windows.Design.Documents.ViewManager" />.
                </returns>
      <param name="modelTree">
                    An instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager" /> that provides access to the model.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="modelTree" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.Dispose">
      <summary>
                    Releases all resources used by the <see cref="T:Microsoft.Windows.Design.Documents.MarkupDocumentManager" />. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.MarkupDocumentManager.FeatureManager">
      <summary>
                    Gets access to the extension manager provided in the constructor. 
                </summary>
      <returns>
                    The extension manager provided in the constructor. This property may return null if this document manager is not using a feature manager.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.Finalize">
      <summary>
                    Finalizer for <see cref="T:Microsoft.Windows.Design.Documents.MarkupDocumentManager" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.FromIdentity(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Returns the model item associated with the specified identity.
                </summary>
      <returns>
                    A model item bound to the identity or null if no item was found.
                </returns>
      <param name="identity">
                    The identity to look for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.GetIdentity(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Returns the identity of the specified item.
                </summary>
      <returns>
                    An identity for the item or null if the item has no identity associated with it.
                </returns>
      <param name="item">
                    The item to retrieve the identity for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.IsViewManagerSupported(System.Type,Microsoft.Windows.Design.Documents.ViewManagerAttribute)">
      <summary>
                    Returns whether there is a valid <see cref="T:Microsoft.Windows.Design.Documents.ViewManager" /> and view that is supported.
                </summary>
      <param name="rootItemType"></param>
      <param name="rootViewManagerAttribute"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.Load(Microsoft.Windows.Design.Documents.IMarkupSourceProvider)">
      <summary>
                    Loads the specified document. 
                </summary>
      <returns>true if the document was successfully loaded; otherwise, false if there were errors. 
                </returns>
      <param name="source">
                    The source to load the markup from.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    A source document has already been loaded.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.Load(Microsoft.Windows.Design.Documents.IMarkupSourceProvider,Microsoft.Windows.Design.Documents.IMarkupProjectContext)">
      <summary>
                    Loads the specified document. 
                </summary>
      <returns>true if the document load was successful; otherwise, false if there were errors. 
                </returns>
      <param name="source">
                    The source to load the markup from.
                </param>
      <param name="project">
                    An optional project context that can be used to locate dependencies the source file may require.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    A source document has already been loaded.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.MarkupDocumentManager.LoadState">
      <summary>
                    Gets the load state of this document.
                </summary>
      <returns>
                    The load state of this document.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.MarkupDocumentManager.MarkupFormatting">
      <summary>
                    Gets or sets formatting rules that are used when formatting markup changes are made to the document.
                </summary>
      <returns>
                    Formatting rules that are used when formatting markup changes are made to the document.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.MarkupDocumentManager.Root">
      <summary>
                    Gets the root <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> of the model. 
                </summary>
      <returns>
                    The root of the model or null if the document has not been loaded.
                </returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Documents.MarkupDocumentManager.UndoUnitAborted">
      <summary>
                    Occurs when an undo unit is aborted. 
                </summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Documents.MarkupDocumentManager.UndoUnitCreated">
      <summary>
                    Occurs when an undo unit is created. 
                </summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Documents.MarkupDocumentManager.UndoUnitOpened">
      <summary>
                    Occurs when an undo unit is opened. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupDocumentManager.Update">
      <summary>
                    Updates the model based on changes that are made to the source.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.MarkupDocumentManager.View">
      <summary>
                    Gets the root visual of the view. 
                </summary>
      <returns>
                    The root visual of the view or null if the document has not been loaded.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.MarkupErrorMessageCategory">
      <summary>
                    Represents a collection of values that identify types or severity of error messages.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.MarkupErrorMessageCategory.Error">
      <summary>
                    Represents an error.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.MarkupErrorMessageCategory.Warning">
      <summary>
                    Represent a warning.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.MarkupErrorMessageCategory.Message">
      <summary>
                    Represents an informational note.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.MarkupFormatting">
      <summary>
                    Provides a way to access external formatting options that can be used for serializing changes that were made in the designer.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.MarkupFormatting.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.MarkupFormatting" /> class. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.MarkupFormatting.IndentText">
      <summary>
                    When overridden in a derived class, gets a string that is used for indentation.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.MarkupFormatting.Options">
      <summary>
                    When overridden in a derived class, gets a set of formatting option flags.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.MarkupFormatting.QuoteChar">
      <summary>
                    When overridden in a derived class, gets the character that is used for quotation marks.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.MarkupFormatting.TabWidth">
      <summary>
                    When overridden in a derived class, gets the width of a tab character in spaces.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.MarkupFormatting.WrapColumn">
      <summary>
                    When overridden in a derived class, gets the column for tag wrapping.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.SourceTextChangeEventArgs">
      <summary>
                    Provides data regarding a source modification.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.SourceTextChangeEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.SourceTextChangeEventArgs" /> class. 
                </summary>
      <param name="offset"></param>
      <param name="oldLength"></param>
      <param name="newLength"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.SourceTextChangeEventArgs.NewLength">
      <summary>
                    Gets the number of characters inserted in the file at the offset. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.SourceTextChangeEventArgs.Offset">
      <summary>
                    Gets the zero-based offset from the beginning of the file where the change occurred.
                </summary>
      <returns>
                    A zero-based offset from the beginning of the file where the change occurred or -1 if the location of the change is not known.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.SourceTextChangeEventArgs.OldLength">
      <summary>
                    Gets the number of characters deleted from the file at the offset. 
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.SourceTextChangeEventArgs.Unknown">
      <summary>
                    The event arguments to pass if the location of the source file change is unknown.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.UpdateState">
      <summary>
                    Used to indicate to the markup source provider the update state of a document.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.UpdateState.Success">
      <summary>
                    The changes that were made to the document resulted in a valid document and the listening document trees have been updated.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.UpdateState.Failed">
      <summary>
                    The changes that were made to the document resulted in an invalid document and the listening documents do not represent the source.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.UpdateState.Reload">
      <summary>
                    The changes that were made to the document require the document to be reinterpreted. This reinterpretation can be caused by a change to the root element type or by an internal error when trying to process the document change.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.ViewManager">
      <summary>
                    Manages and provides the view for the designer. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.ViewManager.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.ViewManager" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.ViewManager.Dispose">
      <summary>
                    Releases all resources used by the <see cref="T:Microsoft.Windows.Design.Documents.ViewManager" />. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.ViewManager.Dispose(System.Boolean)">
      <summary>
                    Releases the unmanaged resources used by the <see cref="T:Microsoft.Windows.Design.Documents.ViewManager" /> and optionally releases the managed resources. 
                </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. 
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.ViewManager.GetPropertyRedirections(System.Windows.DependencyObject)">
      <summary>
                    Gets the value of the <see cref="P:Microsoft.Windows.Design.Documents.ViewManager.PropertyRedirections" /> attached property for a specified dependency object. 
                </summary>
      <returns>
                    An enumeration of property identifiers indicating properties on the model that should be redirected on the view, or null if there are none.
                </returns>
      <param name="view">
                    The view to retrieve the collection of property redirections for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.ViewManager.Initialize(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager)">
      <summary>
                    When overridden in a derived class, initializes this view manager with the specified model tree.
                </summary>
      <param name="context">
                    The editing context for the designer.
                </param>
      <param name="model">
                    The model document tree to use to initialize the view.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="model" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.ViewManager.PropertyRedirections">
      <summary>
                    Gets or sets an enumeration of property identifiers indicating properties on the model that should be redirected to the view. This is an attached property.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.ViewManager.PropertyRedirectionsProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Documents.ViewManager.PropertyRedirections" /> attached property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Documents.ViewManager.PropertyRedirections" /> attached property.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.ViewManager.PropertyRedirectionsPropertyKey">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Documents.ViewManager.PropertyRedirections" /> attached property key.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Documents.ViewManager.PropertyRedirections" /> attached property key.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.ViewManager.SetPropertyRedirections(System.Windows.DependencyObject,System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.Model.PropertyIdentifier})">
      <summary>
                    Sets the value of the <see cref="P:Microsoft.Windows.Design.Documents.ViewManager.PropertyRedirections" /> attached property for a specified dependency object.
                </summary>
      <param name="view">
                    The view to set the collection of property redirections for.
                </param>
      <param name="redirections">
                    A collection of property identifiers indicating properties on the model that should be redirected to the view.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.ViewManager.View">
      <summary>
                    When overridden in a derived class, gets the view for the designer. 
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.ViewManagerAttribute">
      <summary>
                    An attribute that can be added on the root of a model object graph to specify what view manager should be used to present the view.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.ViewManagerAttribute.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.ViewManagerAttribute" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.ViewManagerAttribute.#ctor(System.Type)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.ViewManagerAttribute" /> class. 
                </summary>
      <param name="viewManagerType">
                    The type of view manager to use. The type specified must derive from <see cref="T:Microsoft.Windows.Design.Documents.ViewManager" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewManagerType" /> is null.
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewManagerType" /> does not specify a type that derives from <see cref="T:Microsoft.Windows.Design.Documents.ViewManager" />.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.ViewManagerAttribute.ViewManagerType">
      <summary>
                    Gets the type of view manager to create for the model.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.AttachedEventIdentity">
      <summary>
                    An identity used for attached events.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.AttachedEventIdentity.#ctor(System.Type,System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.AttachedEventIdentity" /> class. 
                </summary>
      <param name="declaringType">
                    The declaring type of the attached event.
                </param>
      <param name="name">
                    The name for the attached event.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.AttachedEventIdentity.DeclaringType">
      <summary>
                    Gets the declaring type of the attached event.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.AttachedEventIdentity.Name">
      <summary>
                    Gets the name of the event. 
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.AttachedPropertyIdentity">
      <summary>
                    An identity used for an attached property.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.AttachedPropertyIdentity.#ctor(System.Windows.DependencyProperty)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.AttachedPropertyIdentity" /> class. 
                </summary>
      <param name="property">
                    The attached property.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.AttachedPropertyIdentity.Property">
      <summary>
                    Gets the property that was attached.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.AttachedPropertyIdentity.SimpleName">
      <summary>
                    Gets a simple name for the identity. 
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.CollectionContentIdentity">
      <summary>
                    An identity used for collection content.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.CollectionContentIdentity.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.CollectionContentIdentity.GetHashCode"></member>
    <member name="F:Microsoft.Windows.Design.Documents.Identities.CollectionContentIdentity.Instance">
      <summary>
                    An instance of the collection content property identity to use. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.CollectionContentIdentity.IsCollectionContentPropertyIdentity(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Returns a value indicating whether the specified identity is a collection content property identity.
                </summary>
      <returns>true if the <paramref name="identity" /> is a contained identity and that contained identity contains a <see cref="T:Microsoft.Windows.Design.Documents.Identities.NamePropertyIdentity" /> object as the content part of the identity; otherwise, false.
                </returns>
      <param name="identity">
                    An identity to check whether it is a collection content property identity.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.CollectionContentIdentity.ToString"></member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.CollectionDamageIdentity">
      <summary>
                    An identity used to report damage to the content of a collection. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.CollectionDamageIdentity.#ctor(Microsoft.Windows.Design.Documents.Identities.Identity,Microsoft.Windows.Design.Documents.Identities.Identity,Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.CollectionDamageIdentity" /> class. 
                </summary>
      <param name="collectionIdentity">
                    The identity of the collection property that is damaged.
                </param>
      <param name="itemBeforeDamage">
                    The identity of the item before the damage or null if the damage is before the first item in the collection. For example, you can insert an item at the beginning of the collection.
                </param>
      <param name="itemAfterDamage">
                    The identity of the item after the damage or null if the damage is after the last item in the collection. For example, you can insert an item at the end of the collection.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.CollectionDamageIdentity.AfterDamage">
      <summary>
                    Gets the identity of the item in the collection after the damage.
                </summary>
      <returns>
                    The identity of the item in the collection after the damage or null if the damage was after the last item. For example, you can insert an item at the end of the collection.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.CollectionDamageIdentity.BeforeDamage">
      <summary>
                    Gets the identity of the item in the collection before the damage.
                </summary>
      <returns>
                    The identity of the item in the collection before the damage or null if the damage was before the first item. For example, you can insert an item at the beginning of the collection.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.CollectionDamageIdentity.Collection">
      <summary>
                    Gets the identity of the collection property that was damaged.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.CollectionOrderIdentity">
      <summary>
                    An identity based on the order a type instance is in a collection.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.CollectionOrderIdentity.#ctor(Microsoft.Windows.Design.Documents.Identities.Identity,System.Type,System.Int32)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.CollectionOrderIdentity" /> class. 
                </summary>
      <param name="collection"></param>
      <param name="type"></param>
      <param name="order"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.CollectionOrderIdentity.Collection">
      <summary>
                    Gets the identity of the collection the object that has this identity is contained in.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.CollectionOrderIdentity.Order">
      <summary>
                    Gets the order of the object in the collection.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.CollectionOrderIdentity.Type">
      <summary>
                    Gets the type of the object this identity is associated with.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.CompositeIdentity">
      <summary>
                    An identity that composes one or more identities together to form a composite identity.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.CompositeIdentity.#ctor(Microsoft.Windows.Design.Documents.Identities.Identity[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.CompositeIdentity" /> class composed of the specified identities.
                </summary>
      <param name="identities">
                    An array of identities that are used to construct a composite identity.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.CompositeIdentity.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.CompositeIdentity.GetHashCode"></member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.CompositeIdentity.GetInternalIdentities">
      <summary>
                    Gets an array of internal identities.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.CompositeIdentity.Identities">
      <summary>
                    Gets an enumeration of the contained identities.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.CompositeIdentity.SimpleName">
      <summary>
                    Gets the simple name of a composite identity.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.CompositeIdentity.ToString"></member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity">
      <summary>
                    A contained identity that is composed of some container unique identity and the identity of the container to form a globally unique identity.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity.#ctor(Microsoft.Windows.Design.Documents.Identities.Identity,Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity" /> class. 
                </summary>
      <param name="container"></param>
      <param name="content"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity.CompareTo(System.Object)">
      <summary>
                    Implements comparisons to other identities. 
                </summary>
      <param name="obj">
                    An identity to compare to.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity.Container">
      <summary>
                    Gets the container of the element being identified.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity.Content">
      <summary>
                    Gets the unique identity within the container.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity.GetHashCode"></member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity.op_Equality(Microsoft.Windows.Design.Documents.Identities.ContainedIdentity,Microsoft.Windows.Design.Documents.Identities.ContainedIdentity)">
      <summary>
                    Determines whether two specified contained identities are equal.
                </summary>
      <returns>true if <paramref name="first" /> and <paramref name="second" /> are equal; otherwise, false.
                </returns>
      <param name="first">
                    The first <see cref="T:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity" /> to compare.
                </param>
      <param name="second">
                    The second <see cref="T:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity" /> to compare.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity.op_GreaterThan(Microsoft.Windows.Design.Documents.Identities.ContainedIdentity,Microsoft.Windows.Design.Documents.Identities.ContainedIdentity)">
      <summary>
                    Determines whether the first specified contained identity is greater than the second.
                </summary>
      <returns>true if <paramref name="first" /> is greater than <paramref name="second" />; otherwise, false.
                </returns>
      <param name="first">
                    The first <see cref="T:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity" /> to compare.
                </param>
      <param name="second">
                    The second <see cref="T:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity" /> to compare.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity.op_Inequality(Microsoft.Windows.Design.Documents.Identities.ContainedIdentity,Microsoft.Windows.Design.Documents.Identities.ContainedIdentity)">
      <summary>
                    Determines whether two specified contained identities are not equal.
                </summary>
      <returns>true if <paramref name="first" /> does not equal <paramref name="second" />; otherwise, false.
                </returns>
      <param name="first">
                    The first <see cref="T:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity" /> to compare.
                </param>
      <param name="second">
                    The second <see cref="T:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity" /> to compare.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity.op_LessThan(Microsoft.Windows.Design.Documents.Identities.ContainedIdentity,Microsoft.Windows.Design.Documents.Identities.ContainedIdentity)">
      <summary>
                    Determines whether the first specified contained identity is less than the second.
                </summary>
      <returns>true if <paramref name="first" /> is less than <paramref name="second" />; otherwise, false.
                </returns>
      <param name="first">
                    The first <see cref="T:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity" /> to compare.
                </param>
      <param name="second">
                    The second <see cref="T:Microsoft.Windows.Design.Documents.Identities.ContainedIdentity" /> to compare.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.ConverterTextIdentity">
      <summary>
                    A special identity for the pseudo-property that holds the text to pass to a type converter to create a type instead of calling the default constructor.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ConverterTextIdentity.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.ConverterTextIdentity" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ConverterTextIdentity.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ConverterTextIdentity.GetHashCode"></member>
    <member name="F:Microsoft.Windows.Design.Documents.Identities.ConverterTextIdentity.Instance">
      <summary>
                    An instance of the converter text identity. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ConverterTextIdentity.IsConverterTextIdentity(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Returns a value indicating whether the specified identity is a converter text identity.
                </summary>
      <returns>true if the identity is a contained identity and that contained identity contains a <see cref="T:Microsoft.Windows.Design.Documents.Identities.ConverterTextIdentity" /> object as the content part of the identity; otherwise, false.
                </returns>
      <param name="identity">
                    An identity to check whether it is a converter text identity.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ConverterTextIdentity.ToString"></member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.Identity">
      <summary>
                    A persistent unique identity that can be used as a key in a dictionary.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.Identity.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.Identity" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.Identity.CreateUniqueIdentity">
      <summary>
                    Returns an opaque globally unique identity.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.Identity.CreateUniqueIdentityFor(System.Object)">
      <summary>
                    Returns a globally unique identity for the specified object.
                </summary>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.Identity.IdentityOf(System.Object)">
      <summary>
                    Returns the identity of the specified object.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Documents.Identities.Identity" /> as mapped by the <see cref="M:Microsoft.Windows.Design.Documents.Identities.Identity.MapIdentity(System.Object,Microsoft.Windows.Design.Documents.Identities.Identity)" /> method or null if this object was not mapped by <see cref="M:Microsoft.Windows.Design.Documents.Identities.Identity.MapIdentity(System.Object,Microsoft.Windows.Design.Documents.Identities.Identity)" />.
                </returns>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.Identity.MapIdentity(System.Object,Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Maps an identity to an arbitrary object. 
                </summary>
      <param name="value"></param>
      <param name="identity">
                    An identity to map to <paramref name="obj" />.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.Identity.SimpleName">
      <summary>
                    Gets a simple name for the identity. 
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.IdentityWrapper`1">
      <summary>
                    Wraps an instance of any type for use as an identity.
                </summary>
      <typeparam name="T">
                    The type to wrap for use as an identity.
                </typeparam>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.IdentityWrapper`1.#ctor(`0)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.IdentityWrapper`1" /> class. 
                </summary>
      <param name="value">
                    A type to wrap for use as an identity.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.IdentityWrapper`1.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.IdentityWrapper`1.GetHashCode"></member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.IdentityWrapper`1.ToString"></member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.IdentityWrapper`1.Value">
      <summary>
                    Gets the value for descendants.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.ItemIdentity">
      <summary>
                    An identity that combines a <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRange" /> identity with a type.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ItemIdentity.#ctor(Microsoft.Windows.Design.SourceUpdate.TextRange,System.Type)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.ItemIdentity" /> class. 
                </summary>
      <param name="textRange"></param>
      <param name="type"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ItemIdentity.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ItemIdentity.GetHashCode"></member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ItemIdentity.ToString"></member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.KeyIdentity">
      <summary>
                    A special identity that can be used for the text to pass to a type converter.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.KeyIdentity.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.KeyIdentity.GetHashCode"></member>
    <member name="F:Microsoft.Windows.Design.Documents.Identities.KeyIdentity.Instance">
      <summary>
                    An instance of the key identity to use. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.KeyIdentity.IsKeyIdentity(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Returns a value indicating whether the specified identity is a key identity.
                </summary>
      <returns>true if the identity is a contained identity and that contained identity contains a <see cref="T:Microsoft.Windows.Design.Documents.Identities.KeyIdentity" /> object as the content part of the identity; otherwise, false.
                </returns>
      <param name="identity">
                    An identity to check whether it is a key identity.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.KeyIdentity.ToString"></member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.NameIdentity">
      <summary>
                    An identity created from a unique name. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.NameIdentity.#ctor(System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.NameIdentity" /> class. 
                </summary>
      <param name="name"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.NameIdentity.Name">
      <summary>
                    Gets the identity name.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.NameIdentity.SimpleName">
      <summary>
                    Gets the name as the simple name.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.NamePropertyIdentity">
      <summary>
                    An identity to use for the name pseudo-property representing the name of an element. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.NamePropertyIdentity.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.NamePropertyIdentity.GetHashCode"></member>
    <member name="F:Microsoft.Windows.Design.Documents.Identities.NamePropertyIdentity.Instance">
      <summary>
                    An instance of the name property identity to use. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.NamePropertyIdentity.IsNamePropertyIdentity(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Returns a value indicating whether the specified identity is a name property identity.
                </summary>
      <returns>true if the identity is a contained identity and that contained identity contains a <see cref="T:Microsoft.Windows.Design.Documents.Identities.NamePropertyIdentity" /> object as the content part of the identity; otherwise, false.
                </returns>
      <param name="identity">
                    An identity to check whether it is a name property identity.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.NamePropertyIdentity.ToString"></member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.NumericIdentity">
      <summary>
                    An identity that uses a unique number. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.NumericIdentity.#ctor(System.Int32)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.NumericIdentity" /> class. 
                </summary>
      <param name="number"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.NumericIdentity.Number">
      <summary>
                    Gets the number that is used for the identity.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.ParameterIdentity">
      <summary>
                    An identity of a parameter within a method or a constructor invocation.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ParameterIdentity.#ctor(System.Int32)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.ParameterIdentity" /> class. 
                </summary>
      <param name="order"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ParameterIdentity.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ParameterIdentity.ForParameter(System.Int32)">
      <summary>
                    Returns an instance of <see cref="T:Microsoft.Windows.Design.Documents.Identities.ParameterIdentity" /> for the specified parameter order. 
                </summary>
      <returns>
                    This method caches instances for highly used parameter values.
                </returns>
      <param name="order">
                    The parameter order to get a parameter identity for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ParameterIdentity.GetHashCode"></member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.ParameterIdentity.IsParameterIdentity(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Returns a value indicating whether the specified identity is a parameter identity.
                </summary>
      <returns>true if the identity is a contained identity and that contained identity contains a <see cref="T:Microsoft.Windows.Design.Documents.Identities.ParameterIdentity" /> object as the content part of the identity; otherwise, false.
                </returns>
      <param name="identity">
                    An identity to check whether it is a parameter identity.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.ParameterIdentity.Order">
      <summary>
                    Gets the order of the parameter.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.RootIdentity">
      <summary>
                    A special identity that can be used for a root element that has no other name.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.RootIdentity.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.RootIdentity.GetHashCode"></member>
    <member name="F:Microsoft.Windows.Design.Documents.Identities.RootIdentity.Instance">
      <summary>
                    An instance of the root identity to use. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.RootIdentity.ToString"></member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.RoutedEventIdentity">
      <summary>
                    An identity for routed events.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.RoutedEventIdentity.#ctor(System.Windows.RoutedEvent)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.RoutedEventIdentity" /> class. 
                </summary>
      <param name="routedEvent"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.RoutedEventIdentity.Event">
      <summary>
                    Gets the routed event that was attached.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.RoutedEventIdentity.SimpleName">
      <summary>
                    Gets a simple name for the identity.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity">
      <summary>
                    An identity that is unique by a text range in the source.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity.#ctor(Microsoft.Windows.Design.SourceUpdate.TextRange)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity" /> class. 
                </summary>
      <param name="range"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity.CompareTo(System.Object)">
      <summary>
                    Implements comparisons to other identities.
                </summary>
      <param name="obj">
                    An identity to compare to.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity.GetHashCode"></member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity.op_Equality(Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity,Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity)">
      <summary>
                    Determines whether two specified text range identities are equal.
                </summary>
      <returns>true if <paramref name="first" /> is equal to <paramref name="second" />; otherwise, false.
                </returns>
      <param name="first">
                    The first <see cref="T:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity" /> to compare.
                </param>
      <param name="second">
                    The second <see cref="T:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity" /> to compare.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity.op_GreaterThan(Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity,Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity)">
      <summary>
                    Determines whether the first specified text range identity is greater than the second.
                </summary>
      <returns>true if <paramref name="first" /> is greater than <paramref name="second" />; otherwise, false.
                </returns>
      <param name="first">
                    The first <see cref="T:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity" /> to compare.
                </param>
      <param name="second">
                    The second <see cref="T:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity" /> to compare.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity.op_Inequality(Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity,Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity)">
      <summary>
                    Determines whether two specified text range identities are not equal.
                </summary>
      <returns>true if <paramref name="first" /> does not equal <paramref name="second" />; otherwise, false.
                </returns>
      <param name="first">
                    The first <see cref="T:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity" /> to compare.
                </param>
      <param name="second">
                    The second <see cref="T:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity" /> to compare.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity.op_LessThan(Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity,Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity)">
      <summary>
                    Determines whether the first specified text range identity is less than the second.
                </summary>
      <returns>true if <paramref name="first" /> is less than <paramref name="second" />; otherwise, false.
                </returns>
      <param name="first">
                    The first <see cref="T:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity" /> to compare.
                </param>
      <param name="second">
                    The second <see cref="T:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity" /> to compare.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity.SimpleName">
      <summary>
                    Gets the simple name.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Identities.TextRangeIdentity.TextRange">
      <summary>
                    Gets the text range used for the identity.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.CommitResult">
      <summary>
                    Base class for results of committing a modification. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.CommitResult.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.CommitResult" /> class. 
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.Damage">
      <summary>
                    Tracks the damage made to a document from the time it is created until the <see cref="M:Microsoft.Windows.Design.Documents.Trees.Damage.StopTracking" /> method is called. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.Damage.Dispose">
      <summary>
                    Releases all resources used by the <see cref="T:Microsoft.Windows.Design.Documents.Trees.Damage" />. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.Damage.IsEmpty">
      <summary>
                    Gets a value indicating whether damage has been recorded. 
                </summary>
      <returns>true if no damage has been recorded on the document that this damage tracker is associated with; otherwise, false. 
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.Damage.StopTracking">
      <summary>
                    Stops tracking damage.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.DamageScope">
      <summary>
                    Indicates the scope of damage reported to a document manager.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.Trees.DamageScope.ThisOnly">
      <summary>
                    Indicates damage of this item/property only. For an item, all the properties of the item are considered modified. For a property, it marks just the property as modified. 
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.Trees.DamageScope.ThisAndImmediateChildren">
      <summary>
                    Indicates damage of this item/property and all its immediate children. For an item, it marks all the properties as modified and the properties of the immediate children. For a composite property, all the properties of the property contents are modified. For a non-composite property, it is just like <see cref="F:Microsoft.Windows.Design.Documents.Trees.DamageScope.ThisOnly" /> and only that property is modified.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.Trees.DamageScope.ThisAndAllChildren">
      <summary>
                    Indicates damage of this item/property and all its children. For an item, all properties of it and all properties of the children are considered modified. For a composite property, all items, properties, and their children are considered modified. If the document root item is passed in, the entire tree is considered modified and the entire document is checked for modification.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.Trees.DamageScope.ThisAndSiblings">
      <summary>
                    Indicates damage of this item/property and all its siblings. For an item, the item, all items in the same composite, and their properties are considered modified. For an item, <see cref="F:Microsoft.Windows.Design.Documents.Trees.DamageScope.ThisAndSiblings" /> is equivalent to <see cref="F:Microsoft.Windows.Design.Documents.Trees.DamageScope.ThisAndImmediateChildren" /> on the containing property. For a property, all properties of the same item are considered modified. For a property, <see cref="F:Microsoft.Windows.Design.Documents.Trees.DamageScope.ThisAndSiblings" /> is equivalent to <see cref="F:Microsoft.Windows.Design.Documents.Trees.DamageScope.ThisOnly" /> on the containing item.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Documents.Trees.DamageScope.Collection">
      <summary>
                    Indicates damage of a collection. The associated identity is a <see cref="T:Microsoft.Windows.Design.Documents.Identities.CollectionDamageIdentity" /> object, which contains the identity of the property damaged and the identities of the items before and after the damage. 
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.Delta">
      <summary>
                    Represents the delta between document trees produced by a document manager. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.Delta.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.Delta.GetHashCode"></member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.Delta.IsEmpty">
      <summary>
                    Gets a value indicating whether the delta is empty.
                </summary>
      <returns>true if the delta is empty; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.Delta.IsSimple">
      <summary>
                    Gets a value indicating whether the delta only records one change.
                </summary>
      <returns>true if the delta only records one change; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.Delta.op_Equality(Microsoft.Windows.Design.Documents.Trees.Delta,Microsoft.Windows.Design.Documents.Trees.Delta)">
      <summary>
                    Determines whether two specified deltas are equal.
                </summary>
      <returns>true if <paramref name="valueA" /> is equal to <paramref name="valueB" />; otherwise, false.
                </returns>
      <param name="valueA">
                    The first <see cref="T:Microsoft.Windows.Design.Documents.Trees.Delta" /> to compare.
                </param>
      <param name="valueB">
                    The second <see cref="T:Microsoft.Windows.Design.Documents.Trees.Delta" /> to compare.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.Delta.op_Inequality(Microsoft.Windows.Design.Documents.Trees.Delta,Microsoft.Windows.Design.Documents.Trees.Delta)">
      <summary>
                    Determines whether two specified deltas not equal.
                </summary>
      <returns>true if <paramref name="valueA" /> does not equal <paramref name="valueB" />; otherwise, false.
                </returns>
      <param name="valueA">
                    The first <see cref="T:Microsoft.Windows.Design.Documents.Trees.Delta" /> to compare.
                </param>
      <param name="valueB">
                    The second <see cref="T:Microsoft.Windows.Design.Documents.Trees.Delta" /> to compare.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode">
      <summary>
                    Represents a node in the document.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode.Children">
      <summary>
                    Gets a list of child elements.
                </summary>
      <returns>
                    An enumeration of <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode" /> objects that are children.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode.EndTag">
      <summary>
                    Gets the end tag.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRange" /> that represents the end tag.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode.HasChildren">
      <summary>
                    Gets a value indicating whether this node has children.
                </summary>
      <returns>true if this node has children; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode.IsEquivalentTo(Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode)">
      <summary>
                    Returns a value indicating whether the start and end tag match for this node and a specified node.
                </summary>
      <returns>true if the start and end tag match; otherwise, false.
                </returns>
      <param name="other">
                    A <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode" /> to compare with this node.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode.ItemType">
      <summary>
                    Gets the type of item for this node.
                </summary>
      <returns>
                    The type for this node.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode.StartTag">
      <summary>
                    Gets the start tag.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRange" /> that represents the start tag.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode.TagName">
      <summary>
                    Gets the tag name for this node.
                </summary>
      <returns>
                    The tag name for this node
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.DocumentItem">
      <summary>
                    Represents a persistent object.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentItem.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentItem" /> class. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentItem.Attributes">
      <summary>
                    Gets the attributes associated with this item.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentItem.EquivalentTo(Microsoft.Windows.Design.Documents.Trees.DocumentNode)">
      <summary>
                    Returns a value indicating whether the document nodes represent the same element with the same data.
                </summary>
      <returns>true if the document nodes represent the same element with the same data; otherwise, false.
                </returns>
      <param name="other">
                    A document node to compare to.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentItem.IsFromContent">
      <summary>
                    Get a value indicating whether this item comes directly from content of an element in a XAML file. 
                </summary>
      <returns>true if this item comes directly from content of an element in a XAML file; otherwise, false. 
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentItem.ItemType">
      <summary>
                    Gets the type of the item.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentItem.Properties">
      <summary>
                    When overridden in a derived class, gets the properties of the item. 
                </summary>
      <returns>
                    An enumerable of the properties of the item.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.DocumentNode">
      <summary>
                    Represents a node in a document tree. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentNode.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentNode" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentNode.EquivalentTo(Microsoft.Windows.Design.Documents.Trees.DocumentNode)">
      <summary>
                    When overridden in a derived class, returns a value indicating whether the document nodes represent the same element with the same data.
                </summary>
      <returns>true if the document nodes represent the same element with the same data; otherwise, false.
                </returns>
      <param name="other">
                    A document node to compare to.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentNode.Identity">
      <summary>
                    When overridden in a derived class, gets the identity of the node. 
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.DocumentProperty">
      <summary>
                    Represents the persistent value of a property. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentProperty" /> class. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.Attributes">
      <summary>
                    Gets the attributes associated with this property.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.Context">
      <summary>
                    When overridden in a derived class, gets the context to use when converting the property from a value to a string.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>
                    Converts the property to a string. 
                </summary>
      <param name="context"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.Descriptor">
      <summary>
                    When overridden in a derived class, gets the property descriptor associated with this property. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.EquivalentTo(Microsoft.Windows.Design.Documents.Trees.DocumentNode)">
      <summary>
                    Returns a value indicating whether the values of this property and the specified property are considered to be equivalent. 
                </summary>
      <returns>true if the values of this property and the specified property are considered to be equivalent; otherwise, false.
                </returns>
      <param name="other">
                    A document node to compare to.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.IsComposite">
      <summary>
                    When overridden in a derived class, gets a value indicating whether this property value is composite. 
                </summary>
      <returns>true if the property value is composite.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.IsOrdered">
      <summary>
                    Gets a value indicating whether items in the <see cref="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.Items" /> enumeration are ordered. 
                </summary>
      <returns>true if items in the <see cref="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.Items" /> enumeration are ordered; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.IsOrderedType(System.Type)">
      <summary>
                    Returns a value indicating whether this property is an ordered type.
                </summary>
      <returns>true if this property is an ordered type; otherwise, false.
                </returns>
      <param name="type">
                    A type to check the order for.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.Items">
      <summary>
                    When overridden in a derived class, gets a list of items contained by this property. 
                </summary>
      <returns>
                    A list of items contained by this property.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.Name">
      <summary>
                    When overridden in a derived class, gets a simple name for the property. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.PropertyType">
      <summary>
                    When overridden in a derived class, gets the type of the property. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.StringValue">
      <summary>
                    Gets the value of the property as a string. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.Value">
      <summary>
                    When overridden in a derived class, gets the value of the property. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentProperty.ValueSerializer">
      <summary>
                    Gets the value serializer associated with this property.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.DocumentTree">
      <summary>
                    Represents the persistent state of a tree of objects that consists of their property values and collections of children. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTree.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentTree" /> class. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentTree.RootItem">
      <summary>
                    Gets the root item of the document tree.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager">
      <summary>
                    Manages the synchronization of changes made in one kind of document tree to another. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.#ctor(Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentTree,System.Boolean)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager" /> class. 
                </summary>
      <param name="document">
                    The document tree this document manager should manage.
                </param>
      <param name="preserveTable">
                    A Boolean that specifies whether to preserve internal information about the tree to improve performance of the <see cref="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.ProduceDelta(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)" /> and <see cref="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.SynchronizeWith(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)" /> methods.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.#ctor(System.Boolean)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager" /> class. 
                </summary>
      <param name="preserveTable">
                    A Boolean that specifies whether to preserve internal information about the tree to improver performance of the <see cref="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.ProduceDelta(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)" /> and <see cref="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.SynchronizeWith(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager,Microsoft.Windows.Design.Documents.Trees.Damage)" /> methods.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.ApplyDelta(Microsoft.Windows.Design.Documents.Trees.Delta)">
      <summary>
                    Applies the changes returned from the <see cref="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.ProduceDelta(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)" /> method to this document.
                </summary>
      <param name="delta">
                    The changes to apply
                </param>
    </member>
    <member name="E:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.Damaged">
      <summary>
                    Occurs when a change is recorded.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.DocumentTree">
      <summary>
                    Gets the document tree associated with this document tree manager. 
                </summary>
      <returns>
                    The document tree associated with this document tree manager or null if the document tree has not yet been initialized.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.FindChildIdentitiesBetween(Microsoft.Windows.Design.Documents.Identities.Identity,Microsoft.Windows.Design.Documents.Identities.Identity,Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Searches the tree for identities between a specified range. 
                </summary>
      <param name="collectionIdentity">
                    A collection of identities to search.
                </param>
      <param name="rangeStart">
                    An identity in the collection to search from. This identity is not included in the range.
                </param>
      <param name="rangeEnd">
                    An identity in the collection to search to. This identity is not included in the range.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.FindDocumentNode(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Returns the document node associated with the specified identity. 
                </summary>
      <param name="identity">
                    The identity to get the associated document node for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.FindNode(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Locates a node with the specified identity
                </summary>
      <param name="identity">
                    The identity to locate.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.GetItemContainer(Microsoft.Windows.Design.Documents.Trees.DocumentItem)">
      <summary>
                    Returns the property that refers to this item. 
                </summary>
      <returns>
                    The property that refers to this item or null if it cannot be determined.
                </returns>
      <param name="item">
                    An item to get the property for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.GetPropertyContainer(Microsoft.Windows.Design.Documents.Trees.DocumentProperty)">
      <summary>
                    Returns the item that contains this property. 
                </summary>
      <returns>
                    The item that contains this property or null if it cannot be determined.
                </returns>
      <param name="documentProperty"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.Initialize(Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentTree)">
      <summary>
                    Initializes the <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager" /> class. 
                </summary>
      <param name="document">
                    The document tree this document manager should manage.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.OnDamaged">
      <summary>
                    Raises the <see cref="E:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.Damaged" /> event. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.ProcessCommitResult(Microsoft.Windows.Design.Documents.Trees.CommitResult)">
      <summary>
                    Processes the <see cref="T:Microsoft.Windows.Design.Documents.Trees.CommitResult" /> object.
                </summary>
      <param name="result">
                    The <see cref="T:Microsoft.Windows.Design.Documents.Trees.CommitResult" /> associated with committing the changes.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.ProduceDelta(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)">
      <summary>
                    Produces an object that represents the differences between the document being managed by this manager and the document managed by the specified manager.
                </summary>
      <returns>
                    An object that represents the differences between the older document passed in <paramref name="olderDocument" /> and this document.
                </returns>
      <param name="olderDocument">
                    A document representing an older version of the document.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.ProduceDelta(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager,Microsoft.Windows.Design.Documents.Trees.Damage)">
      <summary>
                    Produces an object that represents the differences between the document being managed by this manager and the document managed by the specified manager.
                </summary>
      <returns>
                    An object that represents the differences between the older document passed in <paramref name="olderDocument" /> and this document.
                </returns>
      <param name="olderDocument">
                    A document representing an older version of the document.
                </param>
      <param name="damage">
                    A damage object returned by the <see cref="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.TrackDamage" /> method that represents the changes made to this document since the last time the documents were synchronized.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.ReportDamage(Microsoft.Windows.Design.Documents.Identities.Identity,Microsoft.Windows.Design.Documents.Trees.DamageScope)">
      <summary>
                    Records a change made to the underlying document tree.
                </summary>
      <param name="identity">
                    The identity of the changed node.
                </param>
      <param name="scope">
                    The scope of the change.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.StartTrackingDamage">
      <summary>
                    Indicates to star tracking damage.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.StopTrackingDamage">
      <summary>
                    Indicates to stop tracking damage.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.SynchronizeWith(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)">
      <summary>
                    Synchronizes any changes made in the specified document to this document.
                </summary>
      <param name="newerDocument">
                    The modified version of a document.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.SynchronizeWith(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager,Microsoft.Windows.Design.Documents.Trees.Damage)">
      <summary>
                    Synchronizes any changes made in the specified document to this document.
                </summary>
      <param name="newerDocument">
                    The modified version of a document.
                </param>
      <param name="damage">
                    A damage object returned by the <see cref="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.TrackDamage" /> method that represents the changes made to this document since the last time the documents were synchronized.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.TrackDamage">
      <summary>
                    Tracks changes recorded for the document. 
                </summary>
      <returns>
                    An object that tracks changes in this document.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs">
      <summary>
                    Provides data for editing scope events. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs.#ctor(Microsoft.Windows.Design.Model.ModelEditingScope,Microsoft.Windows.Design.Documents.Trees.Delta,Microsoft.Windows.Design.Documents.Trees.Delta)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs" /> class. 
                </summary>
      <param name="editingScope">
                    The editing scope for this event.
                </param>
      <param name="delta">
                    The delta of changes that occurred while this scope was open.
                </param>
      <param name="inverseDelta">
                    The inverse of the delta. Applying this delta would undo the changes that occurred while the editing scope was open.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="editingScope" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs.Delta">
      <summary>
                    Gets the delta of changes that occurred while this scope was open.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs.InverseDelta">
      <summary>
                    Gets an inverse set of changes that occurred while this scope was open. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs.ModelEditingScope">
      <summary>
                    Gets access to the editing scope for this event.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.IDamageListener">
      <summary>
                    A listener interface for tree damage.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.IDamageListener.ReportDamage(Microsoft.Windows.Design.Documents.Identities.Identity,Microsoft.Windows.Design.Documents.Trees.DamageScope)">
      <summary>
                    Records a change made to the underlying document tree.
                </summary>
      <param name="identity">
                    The identity of the node that changed.
                </param>
      <param name="scope">
                    The scope of the change.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.InMemoryDocumentTreeManager">
      <summary>
                    A document tree manager that produces an in memory copy of the specified document item.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InMemoryDocumentTreeManager.#ctor(Microsoft.Windows.Design.Documents.Trees.DocumentTree,System.Boolean)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.InMemoryDocumentTreeManager" /> class.
                </summary>
      <param name="tree">
                    The tree to copy.
                </param>
      <param name="preserveTable">
                    A Boolean that specifies to preserve internal information about the tree to improve performance of the <see cref="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.ProduceDelta(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)" /> and <see cref="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.SynchronizeWith(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)" /> methods.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InMemoryDocumentTreeManager.#ctor(Microsoft.Windows.Design.Documents.Trees.DocumentTree,System.Boolean,Microsoft.Windows.Design.EditingContext)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.InMemoryDocumentTreeManager" /> class. 
                </summary>
      <param name="tree">
                    The tree to copy.
                </param>
      <param name="preserveTable">
                    A Boolean that specifies to preserve internal information about the tree to improve performance of the <see cref="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.ProduceDelta(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)" /> and <see cref="M:Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager.SynchronizeWith(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)" /> methods.
                </param>
      <param name="editingContext">
                    An editing context.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager">
      <summary>
                    A document manager for the instance documents trees.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager.#ctor(System.Boolean)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager" /> class. 
                </summary>
      <param name="preserveTable">
                    A Boolean that specifies whether to preserve the identity table. If true, the identity table for this document manager is retained and updated as the document changes. If false, the table is created on demand but is not maintained. Setting <paramref name="preserveTable" /> to false causes document updates to perform more slowly, but the overall document size in memory is smaller. Setting <paramref name="preserveTable" /> to true makes updates faster, but increases memory.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager.#ctor(System.Boolean,Microsoft.Windows.Design.EditingContext)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager" /> class. 
                </summary>
      <param name="preserveTable">
                    A Boolean that specifies whether to preserve the identity table. If true, the identity table for this document manager is retained and updated as the document changes. If false, the table is created on demand but is not maintained. Setting <paramref name="preserveTable" /> to false causes document updates to perform more slowly, but the overall document size in memory is smaller. Setting <paramref name="preserveTable" /> to true makes updates faster, but increases memory.
                </param>
      <param name="context">
                    An editing context that can be used to resolve services.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager.#ctor(System.Boolean,Microsoft.Windows.Design.Features.FeatureManager)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager" /> class. 
                </summary>
      <param name="preserveTable">
                    A Boolean that specifies whether to preserve the identity table. If true, the identity table for this document manager is retained and updated as the document changes. If false, the table is created on demand but is not maintained. Setting <paramref name="preserveTable" /> to false causes document updates to perform more slowly, but the overall document size in memory is smaller. Setting <paramref name="preserveTable" /> to true makes updates faster, but increases memory.
                </param>
      <param name="featureManager">
                    A feature manager that is used to resolve services. The feature manager will be notified when instances are created in the document.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="featureManager" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager.FromIdentity(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Returns the instance associated with the specified identity.
                </summary>
      <returns>
                    An instance bound to the identity or null if no instance was found.
                </returns>
      <param name="identity">
                    The identity to look for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager.GetIdentity(System.Object)">
      <summary>
                    Returns the identity of the specified instance.
                </summary>
      <returns>
                    An identity for the specified instance or null if the instance has no identity associated with it.
                </returns>
      <param name="instance">
                    The instance to retrieve the identity for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager.GetService(System.Type)">
      <summary>
                    Returns the services that are used by this document tree manager.
                </summary>
      <param name="serviceType">
                    The type of service to retrieve.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager.Load(Microsoft.Windows.Design.Documents.Trees.DocumentItem)">
      <summary>
                    Loads the document manager's document by using the specified document item as the document root. A new tree of instances will be created.
                </summary>
      <param name="root">
                    The document item to traverse when creating the document.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="root" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager.Load(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)">
      <summary>
                    Loads the content of the document manager's document by traversing the document contained in the specified document manager. 
                </summary>
      <param name="parentDocument">
                    The parent document to load from.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentDocument" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager.Load(System.Object)">
      <summary>
                    Loads the document manager's document by using the specified instance as the document root.
                </summary>
      <param name="root">
                    The object to make the root of the instance tree.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="root" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager.Root">
      <summary>
                    Gets the root object of the serialization tree.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.InstanceDocumentTreeManager.System#IServiceProvider#GetService(System.Type)">
      <summary>
                    Provides the identity provider service for other document tree managers. For a description of this member, see <see cref="M:System.IServiceProvider.GetService(System.Type)" />.
                </summary>
      <param name="serviceType"></param>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager">
      <summary>
                    A manager for XAML document trees.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.#ctor(Microsoft.Windows.Design.EditingContext)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager" /> class. 
                </summary>
      <param name="context">
                    An editing context. This context will be used to resolve services if present.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.BindingClassName">
      <summary>
                    Gets the name of the event binding class. 
                </summary>
      <returns>
                    The name of the event binding class as specified by either the x:Class or x:Subclass attributes on the root element of the document. This could be null if no x:Class or x:Subclass was specified or if the document could not be parsed.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.EnableIncrementalUpdates">
      <summary>
                    Enables this markup document tree to process text updates from the source markup file. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.FindChildIdentitiesBetween(Microsoft.Windows.Design.Documents.Identities.Identity,Microsoft.Windows.Design.Documents.Identities.Identity,Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Searches the tree for identities between a specified range. 
                </summary>
      <param name="collectionIdentity">
                    A collection of identities to search. 
                </param>
      <param name="rangeStart">
                    An identity in the collection to search from. This identity is not included in the range.
                </param>
      <param name="rangeEnd">
                    An identity in the collection to search to. This identity is not included in the range.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.FindNode(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Locates a node with the specified identity
                </summary>
      <param name="identity">
                    The identity to locate.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.GetItemContainer(Microsoft.Windows.Design.Documents.Trees.DocumentItem)">
      <summary>
                    Returns the property that refers to this item. 
                </summary>
      <returns>
                    The property that refers to this item or null if it cannot be determined.
                </returns>
      <param name="item">
                    An item to get the property for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.GetPropertyContainer(Microsoft.Windows.Design.Documents.Trees.DocumentProperty)">
      <summary>
                    Returns the item that contains this property. 
                </summary>
      <returns>
                    The item that contains this property or null if it cannot be determined.
                </returns>
      <param name="property">
                    A property to get the item for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.GetService(System.Type)">
      <summary>
                    Returns the services that are used by this document tree manager.
                </summary>
      <returns>
                    An instance of the service or null if no service of the specified type is supported.
                </returns>
      <param name="serviceType">
                    The type of service to retrieve.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.GetUniqueIdentity(System.Type)">
      <summary>
                    Returns a unique identity for the <see cref="T:Microsoft.Windows.Design.Documents.IIdentityProviderService" />.
                </summary>
      <returns>
                    A new identity.
                </returns>
      <param name="type">
                    The type to get the identity for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.Load(Microsoft.Windows.Design.Documents.IMarkupSourceProvider)">
      <summary>
                    Loads this markup document tree with markup from the specified provider.
                </summary>
      <param name="provider">
                    A markup source provider that provides loading context for the document.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.Load(Microsoft.Windows.Design.Documents.IMarkupSourceProvider,Microsoft.Windows.Design.Documents.Trees.DocumentItem)">
      <summary>
                    Overwrites the provider with a new XAML file representing the item passed in.
                </summary>
      <param name="provider">
                    A markup source provider. The provider's contents are overwritten with the markup produced by the specified document item.
                </param>
      <param name="root">
                    The document item that produced the markup.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> or <paramref name="root" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.MarkupFormatting">
      <summary>
                    Gets or sets the formatting rules that will be used when formatting markup changes are made to the document.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.Microsoft#Windows#Design#Documents#IIdentityProviderService#GetUniqueIdentity(System.Type)">
      <summary>
                    Obtains a unique identity. For a description of this member, see <see cref="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.GetUniqueIdentity(System.Type)" />.
                </summary>
      <param name="type"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.ProcessCommitResult(Microsoft.Windows.Design.Documents.Trees.CommitResult)">
      <summary>
                    Processes the <see cref="T:Microsoft.Windows.Design.Documents.Trees.CommitResult" /> object.
                </summary>
      <param name="result">
                    The <see cref="T:Microsoft.Windows.Design.Documents.Trees.CommitResult" /> associated with committing the changes.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.Root">
      <summary>
                    Gets the root item in the markup document tree.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.RootType">
      <summary>
                    Gets the type of the root element.
                </summary>
      <returns>
                    The type of the root element even, if the document contains errors. If the document could not be parsed enough to determine the type of the root element, null is returned.
                </returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.SourceChanged">
      <summary>
                    Occurs when the <see cref="T:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager" /> changes the source provided to it through the <see cref="T:Microsoft.Windows.Design.Documents.IMarkupSourceProvider" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.System#IServiceProvider#GetService(System.Type)">
      <summary>
                    Provides the identity provider service for other document tree managers. For a description of this member, see <see cref="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.GetService(System.Type)" />.
                </summary>
      <param name="serviceType"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.Update">
      <summary>
                    Parses any changes made to the source and updates the document. 
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager">
      <summary>
                    A manager for model document trees. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.#ctor(Microsoft.Windows.Design.EditingContext)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager" /> class. 
                </summary>
      <param name="context">
                    An editing context that can be used to resolve services.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.#ctor(Microsoft.Windows.Design.Features.FeatureManager)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager" /> class. 
                </summary>
      <param name="featureManager">
                    An extension manager that will be used to report extensions and resolve services.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="featureManager" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.ApplyEditingScopeDelta(Microsoft.Windows.Design.Documents.Trees.Delta)">
      <summary>
                    Applies the changes that were accumulated in an editing scope.
                </summary>
      <param name="delta">
                    The changes to apply to the model
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.CreateDocumentItem(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Creates a document item representing the specified model item.
                </summary>
      <param name="modelItem">
                    A model item to retrieve.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="modelItem" /> is null.
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="modelItem" /> is not a supported implementation.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.CreateModelItem(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Documents.Trees.DocumentItem)">
      <summary>
                    Creates a model item representing the specified document item.
                </summary>
      <param name="parentItem">
                    An optional item to use as a parent context. Dependencies, such resource references, are resolved by using this parent item. This parameter can be null.
                </param>
      <param name="documentItem">
                    A document item to interpret and create a model item for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="documentItem" /> is null.
                </exception>
    </member>
    <member name="E:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.EditingScopeAborted">
      <summary>
                    Occurs when an editing scope is aborted.
                </summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.EditingScopeCommitted">
      <summary>
                    Occurs when an editing scope is committed.
                </summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.EditingScopeCreated">
      <summary>
                    Occurs when a new editing scope is created.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.FindNode(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Locates a node with the specified identity.
                </summary>
      <param name="identity">
                    The identity to locate.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.FromIdentity(Microsoft.Windows.Design.Documents.Identities.Identity)">
      <summary>
                    Returns the model item associated with the specified identity.
                </summary>
      <returns>
                    A model item bound to the identity or null if no item was found.
                </returns>
      <param name="identity">
                    The identity to look for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.GetIdentity(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Returns the identity of the specified item.
                </summary>
      <returns>
                    An identity for the specified item, or null if the item has no identity associated with it.
                </returns>
      <param name="item">
                    The item to retrieve the identity for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.GetService(System.Type)">
      <summary>
                    Returns the services that are used by this document tree manager. 
                </summary>
      <param name="serviceType">
                    The type of service to retrieve.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.Load(Microsoft.Windows.Design.Documents.Trees.DocumentItem)">
      <summary>
                    Loads the content of the document manager's document by traversing the properties of the specified root item. The result will be a copy of the document described by <paramref name="root" />.
                </summary>
      <param name="root">
                    The root of the document to load.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="root" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.Load(Microsoft.Windows.Design.Documents.Trees.DocumentItem,Microsoft.Windows.Design.Documents.IMarkupProjectContext)">
      <summary>
                    Loads the content of the document manager's document by traversing the properties of the specified root item. The result will be a copy of the document described by <paramref name="root" />.
                </summary>
      <param name="root">
                    The root of the document to load.
                </param>
      <param name="project">
                    An optional project context that can be used to locate dependencies the source file may require.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="root" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.Load(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager)">
      <summary>
                    Loads the content of the document manager's document by traversing the document contained in the specified document manager. 
                </summary>
      <param name="parentDocument">
                    The parent document to load from.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentDocument" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.Load(Microsoft.Windows.Design.Documents.Trees.DocumentTreeManager,Microsoft.Windows.Design.Documents.IMarkupProjectContext)">
      <summary>
                    Loads the content of the document manager's document by traversing the document contained in the incoming document manager. 
                </summary>
      <param name="parentDocument">
                    The parent document to load from.
                </param>
      <param name="project">
                    An optional project context that can be used to locate dependencies the source file may require.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentDocument" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.OnEditingScopeAborted(Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs)">
      <summary>
                    Raises the <see cref="E:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.EditingScopeAborted" /> event. 
                </summary>
      <param name="e">
                    An <see cref="T:Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs" /> that contains access to the editing scope.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.OnEditingScopeCommitted(Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs)">
      <summary>
                    Raises the <see cref="E:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.EditingScopeCommitted" /> event. 
                </summary>
      <param name="e">
                    An <see cref="T:Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs" /> that contains access to the editing scope.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.OnEditingScopeCreated(Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs)">
      <summary>
                    Raises the <see cref="E:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.EditingScopeCreated" /> event. 
                </summary>
      <param name="e">
                    An <see cref="T:Microsoft.Windows.Design.Documents.Trees.EditingScopeEventArgs" /> that contains access to the editing scope.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.ProcessCommitResult(Microsoft.Windows.Design.Documents.Trees.CommitResult)">
      <summary>
                    Processes the <see cref="T:Microsoft.Windows.Design.Documents.Trees.CommitResult" /> object.
                </summary>
      <param name="result">
                    The <see cref="T:Microsoft.Windows.Design.Documents.Trees.CommitResult" /> associated with committing the changes.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.Root">
      <summary>
                    Gets the root item in the model document tree.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.System#IServiceProvider#GetService(System.Type)">
      <summary>
                    Provides the identity provider service for other document tree managers. For a description of this member, see <see cref="M:System.IServiceProvider.GetService(System.Type)" />.
                </summary>
      <param name="serviceType"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModelDocumentTreeManager.Update">
      <summary>
                    Updates the model with any changes from external model resources.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentItem">
      <summary>
                    Represents a modifiable version of a document item.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentItem.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentItem" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentItem.GetModifiableProperty(Microsoft.Windows.Design.Documents.Identities.Identity,System.Type)">
      <summary>
                    When overridden in a derived class, returns a modifiable property that has the specified identity.
                </summary>
      <param name="identity"></param>
      <param name="parameterType"></param>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentProperty">
      <summary>
                    Represents a modifiable version of a document property.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentProperty.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentProperty" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentProperty.AddItem(Microsoft.Windows.Design.Documents.Trees.DocumentItem)">
      <summary>
                    When overridden in a derived class, adds an item to the collection. 
                </summary>
      <param name="item">
                    The item to add to the collection.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentProperty.ModifiableItems">
      <summary>
                    Gets a list of the modifiable items.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentProperty.MoveItem(Microsoft.Windows.Design.Documents.Trees.DocumentItem,Microsoft.Windows.Design.Documents.Trees.DocumentItem)">
      <summary>
                    When overridden in a derived class, moves an item in the collection to just after the item specified in the <paramref name="after" /> parameter. 
                </summary>
      <param name="item">
                    The item to move
                </param>
      <param name="after">
                    The item to move item after
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentProperty.RemoveItem(Microsoft.Windows.Design.Documents.Trees.DocumentItem)">
      <summary>
                    When overridden in a derived class, removes an item from the collection. 
                </summary>
      <param name="item">
                    Item to be removed
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentProperty.RevertValue">
      <summary>
                    When overridden in a derived class, reverts the property to its default or calculated value.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentProperty.SetValue(System.Object)">
      <summary>
                    When overridden in a derived class, sets the value of the property. 
                </summary>
      <param name="value">
                    The value to set
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentTree">
      <summary>
                    Represents a modifiable document tree.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentTree.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentTree" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentTree.BeginModifications">
      <summary>
                    When overridden in a derived class, called before an item in the document tree is modified.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentTree.CommitModifications">
      <summary>
                    When overridden in a derived class, commits the changes that were made to a document tree. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.ModifiableDocumentTree.ModifiableRootItem">
      <summary>
                    Gets a modifiable version of <see cref="P:Microsoft.Windows.Design.Documents.Trees.DocumentTree.RootItem" />.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.SourceChangedEventArgs">
      <summary>
                    Provides data for the <see cref="E:Microsoft.Windows.Design.Documents.Trees.MarkupDocumentTreeManager.SourceChanged" /> event.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.SourceChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.SourceUpdate.SourceFragment})">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.SourceChangedEventArgs" /> class. 
                </summary>
      <param name="fragments">
                    The source fragments that have changed.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fragments" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.SourceChangedEventArgs.Fragments">
      <summary>
                    Gets an enumeration of changed fragments.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Documents.Trees.SourceCommitResult">
      <summary>
                    Represents a source commit result for commit results that have associated source changes expressed in source fragments.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Documents.Trees.SourceCommitResult.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.SourceUpdate.SourceFragment})">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Documents.Trees.SourceCommitResult" /> class. 
                </summary>
      <param name="fragments">
                    The source fragments modified by the commit.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Documents.Trees.SourceCommitResult.Fragments">
      <summary>
                    Gets the source fragments modified by the commit.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.BinaryResource">
      <summary>
                    Represents a binary stream of information, such as a bitmap.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.BinaryResource.#ctor">
      <summary>
                    When overridden in a derived class, initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Services.BinaryResource" /> class.
                </summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Services.BinaryResource.Changed">
      <summary>
                    When overridden in a derived class, occurs when the content of the stream changes.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.BinaryResource.OpenStream(System.IO.FileAccess)">
      <summary>
                    When overridden in a derived class, opens a stream on the resource.
                </summary>
      <returns>
                    A <see cref="T:System.IO.Stream" /> on the resource.
                </returns>
      <param name="access">
                    The <see cref="T:System.IO.FileAccess" /> to use when opening the resource. For example, <see cref="F:System.IO.FileAccess.Read" /> or <see cref="F:System.IO.FileAccess.Write" />.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.BinaryResource.StreamUri">
      <summary>
                    When overridden in a derived class, gets a value representing the URI of the resource.
                </summary>
      <returns>
                    The URI of the resource.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.DocumentInformationService">
      <summary>
                    Used by UI elements to locate more detailed information about the document.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.DocumentInformationService.Dispose">
      <summary>
                    Releases all resources used by the <see cref="T:Microsoft.Windows.Design.Services.DocumentInformationService" />. 
                </summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Services.DocumentInformationService.DocumentChanged">
      <summary>
                    Occurs when the document has changed.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.DocumentInformationService.Finalize">
      <summary>
                    Allows an <see cref="T:System.Object" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Object" /> is reclaimed by garbage collection.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.DocumentInformationService.GetFullyQualifiedTagName(Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode)">
      <summary>
                    Gets the fully qualified tag name.
                </summary>
      <returns>
                    The tag name for <paramref name="node" />.
                </returns>
      <param name="node">
                    The document node to get the tag name for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.DocumentInformationService.GetModelItem(Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode)">
      <summary>
                    Returns a model item for the specified document node.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> instance that represents the model item that corresponds with <paramref name="node" />.
                </returns>
      <param name="node">
                    The document node to get the model item for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.DocumentInformationService.GetModelItem(Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode,System.Boolean)">
      <summary>
                    Returns a model item for a document node.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> instance that represents the model item that corresponds with <paramref name="node" />.
                </returns>
      <param name="node">
                    The document node to get the model item for.
                </param>
      <param name="searchForParent">
                    A Boolean that indicates whether to search the parent chain if no matching model item is found.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.DocumentInformationService.GetNode(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Returns the node corresponding to the identity.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode" /> corresponding to <paramref name="item" />.
                </returns>
      <param name="item">
                    The model item to get the document node for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.DocumentInformationService.GetNode(System.Int64)">
      <summary>
                    Returns the node within the text.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode" /> corresponding to <paramref name="textOffset" />.
                </returns>
      <param name="textOffset">
                    The number of characters from the beginning of the text.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.DocumentInformationService.GetNodeId(Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode)">
      <summary>
                    The ID for the specified node.
                </summary>
      <returns>
                    An ID string representing <paramref name="node" />.
                </returns>
      <param name="node">
                    The document node to get the ID for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.DocumentInformationService.GetPath(Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode)">
      <summary>
                    Returns the path of items from the start of the document to the specified node.
                </summary>
      <returns>
                    An enumeration of document nodes on the path from the root node to <paramref name="node" />.
                </returns>
      <param name="node">
                    The end node of the path.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.DocumentInformationService.GetPath(System.Int64)">
      <summary>
                    Returns the series of elements that lead up to the text offset.
                </summary>
      <returns>
                    An enumeration of document nodes on the path from the root element to <paramref name="textOffset" />.
                </returns>
      <param name="textOffset">
                    The offset of the last character in the path. 
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.DocumentInformationService.IsValid">
      <summary>
                    Gets a value indicating whether the underlying document is a valid markup document.
                </summary>
      <returns>true if the underlying document is a valid markup document; otherwise, false. 
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.DocumentInformationService.Root">
      <summary>
                    Gets the root element of the document.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Documents.Trees.DocumentInformationNode" /> representing the document root. 
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ExternalMarkupService">
      <summary>
                    Defines methods for converting model items to markup text and for parsing markup text into model items.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalMarkupService.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Services.ExternalMarkupService" /> class.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalMarkupService.Load(System.String,Microsoft.Windows.Design.Model.ModelItem,System.Collections.Generic.IEnumerable{System.Reflection.AssemblyName})">
      <summary>
                    When overridden in a derived class, parses the specified markup text and returns a model item representing that text.
                </summary>
      <returns>
                    A model item representing the markup.
                </returns>
      <param name="markup">
                    A correctly formed XML document.
                </param>
      <param name="parentContext">
                    The parent context of <paramref name="markup" />.
                </param>
      <param name="additionalReferences">
                    Assembly names to use when parsing <paramref name="markup" />.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalMarkupService.Save(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    When overridden in a derived class, serializes the specified model item into well-formed markup text representing that model item.
                </summary>
      <returns>
                    Markup text that represents the model item.
                </returns>
      <param name="root">
                    The model item representing the root of the document.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ExternalResourceService">
      <summary>
                    Provides access to resources external to the markup file. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalResourceService.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Services.ExternalResourceService" /> class. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ExternalResourceService.ApplicationModel">
      <summary>
                    When overridden in a derived class, gets the application model. 
                </summary>
      <returns>
                    The application model or null if there is no application model for this context.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalResourceService.GetBinaryResource(System.Uri)">
      <summary>
                    When overridden in a derived class, gets the specified URI in the project system and returns its contents as a binary blob. 
                </summary>
      <param name="uri">
                    The URI to get the resource for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalResourceService.GetModelResource(System.Uri)">
      <summary>
                    When overridden in a derived class, gets the specified URI in the project system, loads it, and returns a <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the root. 
                </summary>
      <param name="uri">
                    The URI to get the resource for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ExternalResourceService.ResourceUris">
      <summary>
                    When overridden in a derived class, gets an enumeration of URI values that can be loaded as resources.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ExternalResourceService.TranslateStreamUri(System.Uri)">
      <summary>
                    When overridden in a derived class, translates a local URI back to its original URI. 
                </summary>
      <param name="streamUri">
                    The URI to translate.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="streamUri" /> is null.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ModelResource">
      <summary>
                    Represents an external resource that contains a model item. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelResource.#ctor">
      <summary>
                    When overridden in a derived class, initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Services.ModelResource" /> class.
                </summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Services.ModelResource.Changed">
      <summary>
                    When overridden in a derived class, occurs when the model item changes.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ModelResource.ModelItem">
      <summary>
                    When overridden in a derived class, gets a value representing the model item of the resource.
                </summary>
      <returns>
                    The model item of the external resource.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.NameService">
      <summary>
                    Assigns names to objects.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.NameService.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Services.NameService" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.NameService.AssignUniqueName(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    When overridden in a derived class, creates a unique name for the specified model item in the specified scope.
                </summary>
      <returns>
                    The valid name for <paramref name="item" />.
                </returns>
      <param name="scope">
                    The scope to create the name in.
                </param>
      <param name="item">
                    The item to create the name for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.NameService.CreateValidName(System.String)">
      <summary>
                    When overridden in a derived class, creates a valid name from the specified candidate name.
                </summary>
      <returns>
                    A valid form of the proposed name.
                </returns>
      <param name="proposal">
                    The proposed name.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.NameService.IsExistingName(Microsoft.Windows.Design.Model.ModelItem,System.String)">
      <summary>
                    When overridden in a derived class, checks whether the name already exists in the specified scope.
                </summary>
      <returns>true if the name already exists; false if not found.
                </returns>
      <param name="scope">
                    The scope to check for <paramref name="name" />.
                </param>
      <param name="name">
                    The name to check. 
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.SourceUpdate.AddResult">
      <summary>
                    Used to determine where the text added to a source document is located after the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called and all changes have been applied.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.AddResult.GetAddedFragment">
      <summary>
                    Returns the location of the added text relative to the modified source document.
                </summary>
      <returns>
                    The location of the added text.
                </returns>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has not been called.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.SourceUpdate.AddResult.ResultValid">
      <summary>
                    Gets a value indicating whether <see cref="T:Microsoft.Windows.Design.SourceUpdate.AddResult" /> is valid.
                </summary>
      <returns>true when the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called on the <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" /> returning the <see cref="T:Microsoft.Windows.Design.SourceUpdate.AddResult" />. When <see cref="P:Microsoft.Windows.Design.SourceUpdate.AddResult.ResultValid" /> is true, the <see cref="M:Microsoft.Windows.Design.SourceUpdate.AddResult.GetAddedFragment" /> method is valid to call.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.SourceUpdate.ISourceChanger">
      <summary>
                    An interface that uses a copy model to modify the source. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.ISourceChanger.CopyTo(System.Int64)">
      <summary>
                    Copies from the current location to the new location. 
                </summary>
      <param name="location">
                    The location in the original source to copy to.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.ISourceChanger.Done">
      <summary>
                    Called when all changes are made to the source. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.ISourceChanger.Insert(System.String)">
      <summary>
                    Inserts text at the current location. 
                </summary>
      <param name="textToInsert">
                    The text to insert into the source at the current location.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.ISourceChanger.InsertChanger(Microsoft.Windows.Design.SourceUpdate.ISourceChanger)">
      <summary>
                    Inserts the source read from an <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader" /> to the current location.
                </summary>
      <returns>
                    The amount of text inserted at this location.
                </returns>
      <param name="changerFromRead">
                    An <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceChanger" /> read from an <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader" />.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.ISourceChanger.MoveTo(System.Int64)">
      <summary>
                    Moves the current location to the specified location without copying. 
                </summary>
      <param name="location">
                    The new current location.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader">
      <summary>
                    Used to read at a specified location in a source file. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.ISourceReader.GetChanger(System.Int64,System.Int32)">
      <summary>
                    Gets a source changer for the specified location in the file. 
                </summary>
      <returns>
                    A changer corresponding to a <paramref name="length" /> number of characters starting at <paramref name="location" />.
                </returns>
      <param name="location">
                    The location to start reading from in character offsets. This value MUST be greater than or equal to <paramref name="location" /> + <paramref name="length" /> of the previous call.
                </param>
      <param name="length">
                    The number of characters the changer should represent.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.ISourceReader.Read(System.Int64,System.Int32)">
      <summary>
                    Reads a specified number of characters from the specified location in the file. 
                </summary>
      <returns>
                    A <paramref name="length" /> number of characters starting at <paramref name="location" />.
                </returns>
      <param name="location">
                    The location to start reading from in character offsets. This value MUST be greater than or equal to <paramref name="location" /> + <paramref name="length" /> of the previous call.
                </param>
      <param name="length">
                    The number of characters to read.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment">
      <summary>
                    Represents a fragment of a source document.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceFragment.#ctor(System.Int64,System.Int64)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> class. 
                </summary>
      <param name="location">
                    The offset in the file of the source fragment.
                </param>
      <param name="length">
                    The length of the fragment.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceFragment.Equals(System.Object)">
      <summary>
                    Determines whether the specified object is equal to this <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" />. 
                </summary>
      <returns>true if the objects are equal; otherwise, false.
                </returns>
      <param name="obj">
                    The object to test,
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceFragment.GetHashCode"></member>
    <member name="P:Microsoft.Windows.Design.SourceUpdate.SourceFragment.Length">
      <summary>
                    Gets the length of the source fragment.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.SourceUpdate.SourceFragment.Location">
      <summary>
                    Gets the offset in the file of the source fragment.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceFragment.op_Equality(Microsoft.Windows.Design.SourceUpdate.SourceFragment,Microsoft.Windows.Design.SourceUpdate.SourceFragment)">
      <summary>
                    Compares two source fragments.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> objects are equal; otherwise, false.
                </returns>
      <param name="first">
                    The first object to compare.
                </param>
      <param name="second">
                    The second object to compare.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceFragment.op_Inequality(Microsoft.Windows.Design.SourceUpdate.SourceFragment,Microsoft.Windows.Design.SourceUpdate.SourceFragment)">
      <summary>
                    Compares two source fragments.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> objects are not equal; otherwise, false.
                </returns>
      <param name="first">
                    The first object to compare.
                </param>
      <param name="second">
                    The second object to compare.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceFragment.ToString">
      <summary>
                    Returns a string representation of a source fragment.
                </summary>
      <returns>
                    The string representation of a source fragment.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier">
      <summary>
                    Used to modify the contents of a source document. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.#ctor(Microsoft.Windows.Design.SourceUpdate.ISourceChanger)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" /> class for a specified source changer.
                </summary>
      <param name="changer">
                    The <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceChanger" /> that is to be used by this <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="changer" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.#ctor(Microsoft.Windows.Design.SourceUpdate.ISourceChanger,Microsoft.Windows.Design.SourceUpdate.ISourceReader)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" /> class for a specified source changer and source reader.
                </summary>
      <param name="changer">
                    The <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceChanger" /> that is to be used by this <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" />.
                </param>
      <param name="reader">
                    The <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader" /> that is to be used by this <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="changer" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.#ctor(Microsoft.Windows.Design.SourceUpdate.ISourceChanger,Microsoft.Windows.Design.SourceUpdate.ISourceReader,System.Collections.IComparer)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" /> class for a specified source changer, source reader, and comparer.
                </summary>
      <param name="changer">
                    The <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceChanger" /> that is to be used by this <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" />.
                </param>
      <param name="reader">
                    The <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader" /> that is to be used by this <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" />.
                </param>
      <param name="comparer">
                    The <see cref="T:System.Collections.IComparer" /> that is used to compare the <paramref name="priority" /> parameter of the <see cref="Overload:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Add" /> method when sorting the add operations. If <paramref name="comparer" /> is null, then <see cref="F:System.Collections.Comparer.Default" /> is used.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="changer" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Add(System.Int64,System.String)">
      <summary>
                    Adds text to the source document at the specified location. 
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.SourceUpdate.AddResult" /> that represents the result of the add operation. <see cref="T:Microsoft.Windows.Design.SourceUpdate.AddResult" /> contains the <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> for the add operation, but it is not valid until after the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called on this <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" />.
                </returns>
      <param name="location">
                    The location at which to add text.
                </param>
      <param name="textToAdd">
                    The text to add.
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Add(System.Int64,System.String,System.Boolean)">
      <summary>
                    Adds text to the source document at the specified location. 
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.SourceUpdate.AddResult" /> that represents the result of the add operation. <see cref="T:Microsoft.Windows.Design.SourceUpdate.AddResult" /> contains the <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> for the add operation, but it is not valid until after the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called on this <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" />.
                </returns>
      <param name="location">
                    The location at which to add text.
                </param>
      <param name="textToAdd">
                    The text to add.
                </param>
      <param name="includeInCommitResult">
                    If true, the location modified by the add operation will be reflected in the collection of <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> objects returned by the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method.
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Add(System.Int64,System.String,System.Object)">
      <summary>
                    Adds text to the source document at the specified location. 
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.SourceUpdate.AddResult" /> that represents the result of the add operation. <see cref="T:Microsoft.Windows.Design.SourceUpdate.AddResult" /> contains the <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> for the add operation, but it is not valid until after the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called on this <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" />.
                </returns>
      <param name="location">
                    The location at which to add text.
                </param>
      <param name="textToAdd">
                    The text to add.
                </param>
      <param name="priority">
                    Used to sort text added at the same location.
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Add(System.Int64,System.String,System.Object,System.Boolean)">
      <summary>
                    Adds text to the source document at the specified location. 
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.SourceUpdate.AddResult" /> that represents the result of the add operation. <see cref="T:Microsoft.Windows.Design.SourceUpdate.AddResult" /> contains the <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> for the add operation, but it is not valid until after the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called on this <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceModifier" />.
                </returns>
      <param name="location">
                    The location at which to add text.
                </param>
      <param name="textToAdd">
                    The text to add.
                </param>
      <param name="priority">
                    Used to sort text added at the same location.
                </param>
      <param name="includeInCommitResult">
                    If true, the location modified by the add operation will be reflected in the collection of <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> objects returned by the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method.
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Changer">
      <summary>
                    Gets the source changer passed into the constructor. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit">
      <summary>
                    Commits all the add, delete, move, and replace operations made by using this object. 
                </summary>
      <returns>
                    The collection of source fragments marked as <paramref name="includeInCommitResult" />.
                </returns>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has already been called.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Delete(System.Int64,System.Int32)">
      <summary>
                    Deletes a specified number of characters at a specified location. 
                </summary>
      <param name="location">
                    The location of the delete operation.
                </param>
      <param name="length">
                    The number of characters to delete.
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Delete(System.Int64,System.Int32,System.Boolean)">
      <summary>
                    Deletes a specified number of characters at a specified location. 
                </summary>
      <param name="location">
                    The location of the delete operation.
                </param>
      <param name="length">
                    The number of characters to delete.
                </param>
      <param name="includeInCommitResult">
                    If true, the location modified by the add operation will be reflected in the collection of <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> objects returned by the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method.
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.MergeFragments(System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.SourceUpdate.SourceFragment})">
      <summary>
                    Requests a set of fragments that are relative to the unmodified document to be reflected in the enumeration returned by the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method updated to be relative to the modified document. 
                </summary>
      <param name="fragments">
                    The fragments to which changes should be applied.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fragments" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Move(System.Int64,System.Int32,System.Int64)">
      <summary>
                    Moves a specified number of characters to a new location. 
                </summary>
      <param name="location">
                    The location to move the characters to.
                </param>
      <param name="length">
                    The number of characters to move.
                </param>
      <param name="from">
                    The location to move characters from.
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called or this instance was created without an <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader" />.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Move(System.Int64,System.Int32,System.Int64,System.Boolean)">
      <summary>
                    Moves a specified number of characters to a new location. 
                </summary>
      <param name="location">
                    The location to move the characters to.
                </param>
      <param name="length">
                    The number of characters to move.
                </param>
      <param name="from">
                    The location to move characters from.
                </param>
      <param name="includeInCommitResult">
                    If true, the location modified by the add operation will be reflected in the collection of <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> objects returned by the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method.
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called or this instance was created without an <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader" />.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Move(System.Int64,System.Int32,System.Int64,System.Object)">
      <summary>
                    Moves a specified number of characters to a new location. 
                </summary>
      <param name="location">
                    The location to move the characters to.
                </param>
      <param name="length">
                    The number of characters to move.
                </param>
      <param name="from">
                    The location to move characters from.
                </param>
      <param name="priority">
                    Used to sort text added at the same location.
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called or this instance was created without an <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader" />.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Move(System.Int64,System.Int32,System.Int64,System.Object,System.Boolean)">
      <summary>
                    Moves a specified number of characters to a new location. 
                </summary>
      <param name="location">
                    The location to move the characters to.
                </param>
      <param name="length">
                    The number of characters to move.
                </param>
      <param name="from">
                    The location to move characters from.
                </param>
      <param name="priority">
                    Used to sort text added at the same location.
                </param>
      <param name="includeInCommitResult">
                    If true, the location modified by the add operation will be reflected in the collection of <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> objects returned by the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method.
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called or this instance was created without an <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader" />.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Reader">
      <summary>
                    Gets the source reader passed into the constructor. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Replace(System.Int64,System.Int32,System.String)">
      <summary>
                    Replaces characters at the specified location with new characters.
                </summary>
      <param name="location">
                    The location of the replace operation.
                </param>
      <param name="length">
                    The number of characters to delete (that are being replaced).
                </param>
      <param name="textToAdd">
                    The text to add in place of the deleted text (replace).
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Replace(System.Int64,System.Int32,System.String,System.Boolean)">
      <summary>
                    Replaces characters at the specified location with new characters.
                </summary>
      <param name="location">
                    The location of the replace operation.
                </param>
      <param name="length">
                    The number of characters to delete (that are being replaced).
                </param>
      <param name="textToAdd">
                    The text to add in place of the deleted text (replace).
                </param>
      <param name="includeInCommitResult">
                    If true, the location modified by the add operation will be reflected in the collection of <see cref="T:Microsoft.Windows.Design.SourceUpdate.SourceFragment" /> objects returned by the <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method.
                </param>
      <exception cref="T:System.InvalidOperationException">
                    The <see cref="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Commit" /> method has been called.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.RestrictChangesTo(Microsoft.Windows.Design.SourceUpdate.SourceFragment[])">
      <summary>
                    Restricts a set of changes to only those areas that have been affected by a previous change.
                </summary>
      <param name="fragments">
                    The fragments to which changes should be applied.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.SourceModifier.RestrictChangesTo(System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.SourceUpdate.SourceFragment})">
      <summary>
                    Restricts a set of changes to only those areas that have been affected by a previous change.
                </summary>
      <param name="fragments">
                    The fragments to which changes should be applied.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fragments" /> is null.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.SourceUpdate.StringSourceChanger">
      <summary>
                    String implementation of an <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceChanger" />. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceChanger.#ctor(System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.SourceUpdate.StringSourceChanger" /> class. 
                </summary>
      <param name="source">
                    The string value to change.
                </param>
    </member>
    <member name="E:Microsoft.Windows.Design.SourceUpdate.StringSourceChanger.Done">
      <summary>
                    Occurs synchronously when the client of the <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceChanger" /> calls the <see cref="M:Microsoft.Windows.Design.SourceUpdate.ISourceChanger.Done" /> method.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceChanger.Microsoft#Windows#Design#SourceUpdate#ISourceChanger#CopyTo(System.Int64)">
      <summary>
                    For a description of this member, see <see cref="M:Microsoft.Windows.Design.SourceUpdate.ISourceChanger.CopyTo(System.Int64)" />.
                </summary>
      <param name="location"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceChanger.Microsoft#Windows#Design#SourceUpdate#ISourceChanger#Done">
      <summary>
                    For a description of this member, see <see cref="M:Microsoft.Windows.Design.SourceUpdate.ISourceChanger.Done" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceChanger.Microsoft#Windows#Design#SourceUpdate#ISourceChanger#Insert(System.String)">
      <summary>
                    For a description of this member, see <see cref="M:Microsoft.Windows.Design.SourceUpdate.ISourceChanger.Insert(System.String)" />.
                </summary>
      <param name="textToInsert"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceChanger.Microsoft#Windows#Design#SourceUpdate#ISourceChanger#InsertChanger(Microsoft.Windows.Design.SourceUpdate.ISourceChanger)">
      <summary>
                    For a description of this member, see <see cref="M:Microsoft.Windows.Design.SourceUpdate.ISourceChanger.InsertChanger(Microsoft.Windows.Design.SourceUpdate.ISourceChanger)" />.
                </summary>
      <param name="changerFromRead"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceChanger.Microsoft#Windows#Design#SourceUpdate#ISourceChanger#MoveTo(System.Int64)">
      <summary>
                    For a description of this member, see <see cref="M:Microsoft.Windows.Design.SourceUpdate.ISourceChanger.MoveTo(System.Int64)" />.
                </summary>
      <param name="location"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceChanger.ToString">
      <summary>
                    Returns the modified string.
                </summary>
      <returns>
                    The modified string.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.SourceUpdate.StringSourceModifier">
      <summary>
                    A version of a source modifier that modifies a string.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceModifier.#ctor(System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.SourceUpdate.StringSourceModifier" /> class. 
                </summary>
      <param name="sourceText"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceModifier.ToString">
      <summary>
                    Returns the modified string.
                </summary>
      <returns>
                    The modified string.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.SourceUpdate.StringSourceReader">
      <summary>
                    Implementation of a <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader" /> for a string.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceReader.#ctor(System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.SourceUpdate.StringSourceReader" /> class. 
                </summary>
      <param name="source">
                    The string value to use for the reader.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceReader.Microsoft#Windows#Design#SourceUpdate#ISourceReader#GetChanger(System.Int64,System.Int32)">
      <summary>
                    For a description of this member, see <see cref="M:Microsoft.Windows.Design.SourceUpdate.ISourceReader.GetChanger(System.Int64,System.Int32)" />.
                </summary>
      <param name="location"></param>
      <param name="length"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.StringSourceReader.Microsoft#Windows#Design#SourceUpdate#ISourceReader#Read(System.Int64,System.Int32)">
      <summary>
                    For a description of this member, see <see cref="M:Microsoft.Windows.Design.SourceUpdate.ISourceReader.Read(System.Int64,System.Int32)" />.
                </summary>
      <param name="location"></param>
      <param name="length"></param>
    </member>
    <member name="T:Microsoft.Windows.Design.SourceUpdate.TextRange">
      <summary>
                    Represents a range of contiguous characters that start from a character offset and run for a specified length. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.TextRange.CompareTo(Microsoft.Windows.Design.SourceUpdate.TextRange)">
      <summary>
                    Compares two text ranges.
                </summary>
      <param name="other">
                    A text range to compare to this text range.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.SourceUpdate.TextRange.IsFree">
      <summary>
                    Gets a value indicating whether the text range is a free range.
                </summary>
      <returns>true if the text range is a free range (was deleted from the document);otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.SourceUpdate.TextRange.Kind">
      <summary>
                    Gets a value that indicates the text range kind.
                </summary>
      <returns>
                    An integer that indicates the text range kind.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.SourceUpdate.TextRange.Length">
      <summary>
                    Gets the length of the text range.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.SourceUpdate.TextRange.Location">
      <summary>
                    Gets the start of the text range as an offset from the beginning of the file.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.TextRange.MoveTo(Microsoft.Windows.Design.SourceUpdate.TextRange)">
      <summary>
                    Moves the text range to the location of another text range.
                </summary>
      <param name="range">
                    A text range to move this text range to.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.SourceUpdate.TextRangeManager">
      <summary>
                    Produces and manages <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRange" /> instances that will be kept accurate across modifications of a source document through <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader" /> and <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceChanger" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.TextRangeManager.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRangeManager" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.TextRangeManager.CreateSourceChanger(Microsoft.Windows.Design.SourceUpdate.ISourceChanger)">
      <summary>
                    Returns an <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceChanger" /> that will keep the this <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRangeManager" /> up-to-date when the source document is changed.
                </summary>
      <param name="changer">
                    A changer for the source document this <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRangeManager" /> is tracking.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.TextRangeManager.CreateSourceReader(Microsoft.Windows.Design.SourceUpdate.ISourceReader)">
      <summary>
                    Returns an <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceReader" /> that allows tracking when text moves by using the <see cref="Overload:Microsoft.Windows.Design.SourceUpdate.SourceModifier.Move" /> method.
                </summary>
      <param name="reader">
                    A reader for the source document this <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRangeManager" /> is tracking.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.TextRangeManager.GetTextRange(System.Int64,System.Int64,System.Int32)">
      <summary>
                    Creates a <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRange" /> for the specified location, length, and kind. 
                </summary>
      <returns>
                    A new, unique <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRange" /> for the specified location, length, and kind.
                </returns>
      <param name="location">
                    The offset from the beginning of the document for the text range.
                </param>
      <param name="length">
                    The length of the text range.
                </param>
      <param name="kind">
                    The kind of the text range. For a description of how this parameter might be used, see the <see cref="P:Microsoft.Windows.Design.SourceUpdate.TextRange.Kind" /> property.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.TextRangeManager.TextAdded(System.Int64,System.Int64)">
      <summary>
                    Reflects that a specified number of characters were inserted at the specified location.
                </summary>
      <param name="location">
                    Offset from the beginning of the document.
                </param>
      <param name="length">
                    Number of characters.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.SourceUpdate.TextRangeManager.TextRemoved(System.Int64,System.Int64)">
      <summary>
                    Reflects that a specified number of characters were deleted at the specified location.
                </summary>
      <returns>
                    A list of <see cref="T:Microsoft.Windows.Design.SourceUpdate.TextRange" /> objects that are no longer referring to characters in the source document because the range of characters they were referring to were deleted.
                </returns>
      <param name="location">
                    Offset from the beginning of the document.
                </param>
      <param name="length">
                    Number of characters.
                </param>
    </member>
    <member name="T:Microsoft.Xaml.CompletionOptions">
      <summary>
                    Indicates whether to generate completions.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.CompletionOptions.Default">
      <summary>
                    Completions should be generated as normal.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.CompletionOptions.OnNameEndOnly">
      <summary>
                    Completions should be generated only if the current position is at the end of the identifier.
                </summary>
    </member>
    <member name="T:Microsoft.Xaml.EventBinding">
      <summary>
                    Represents a binding between an event and an event handler.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.EventBinding.#ctor(Microsoft.Xaml.EventDescription,System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Xaml.EventBinding" /> class. 
                </summary>
      <param name="eventDescription">
                    A description of an event being bound.
                </param>
      <param name="handler">
                    The name of the method the event is bound to.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.EventBinding.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="P:Microsoft.Xaml.EventBinding.Event">
      <summary>
                    Gets the description of an event being bound.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.EventBinding.GetHashCode"></member>
    <member name="P:Microsoft.Xaml.EventBinding.Handler">
      <summary>
                    Gets the name of the method the event is bound to.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.EventBinding.op_Equality(Microsoft.Xaml.EventBinding,Microsoft.Xaml.EventBinding)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.EventBinding" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.EventBinding" /> objects are equal; otherwise, false.
                </returns>
      <param name="binding1">
                    The first event binding to compare.
                </param>
      <param name="binding2">
                    The second event binding to compare.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.EventBinding.op_Inequality(Microsoft.Xaml.EventBinding,Microsoft.Xaml.EventBinding)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.EventBinding" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.EventBinding" /> objects are not equal; otherwise, false.
                </returns>
      <param name="binding1">
                    The first event binding to compare.
                </param>
      <param name="binding2">
                    The second event binding to compare.
                </param>
    </member>
    <member name="T:Microsoft.Xaml.EventDescription">
      <summary>
                    Represents an event description used to in an event binding.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.EventDescription.#ctor(System.String,System.String,Microsoft.Xaml.EventParameter[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Xaml.EventDescription" /> class. 
                </summary>
      <param name="name">
                    The name of the event.
                </param>
      <param name="returnType">
                    The fully qualified assembly name of the return type or null if the type is void.
                </param>
      <param name="parameters">
                    A list of parameters passed to the handlers.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.EventDescription.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Xaml.EventDescription.GetHashCode"></member>
    <member name="P:Microsoft.Xaml.EventDescription.Name">
      <summary>
                    Gets the name of the event.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.EventDescription.op_Equality(Microsoft.Xaml.EventDescription,Microsoft.Xaml.EventDescription)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.EventDescription" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.EventDescription" /> objects are equal; otherwise, false.
                </returns>
      <param name="parameter1">
                    The first event description to compare.
                </param>
      <param name="parameter2">
                    The second event description to compare.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.EventDescription.op_Inequality(Microsoft.Xaml.EventDescription,Microsoft.Xaml.EventDescription)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.EventDescription" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.EventDescription" /> objects are not equal; otherwise, false.
                </returns>
      <param name="parameter1">
                    The first event description to compare.
                </param>
      <param name="parameter2">
                    The second event description to compare.
                </param>
    </member>
    <member name="P:Microsoft.Xaml.EventDescription.Parameters">
      <summary>
                    Gets a list of parameters passed to the handlers.
                </summary>
    </member>
    <member name="P:Microsoft.Xaml.EventDescription.ReturnType">
      <summary>
                    Gets the fully qualified assembly name of the return type.
                </summary>
      <returns>
                    The fully qualified assembly name of the return type or null if the return type is void.
                </returns>
    </member>
    <member name="T:Microsoft.Xaml.EventParameter">
      <summary>
                    Represents a descriptor of an event parameter that describes an event in an event binding.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.EventParameter.#ctor(System.String,System.String,Microsoft.Xaml.EventParameterModifier)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Xaml.EventParameter" /> class. 
                </summary>
      <param name="name"></param>
      <param name="typeName"></param>
      <param name="modifier"></param>
    </member>
    <member name="M:Microsoft.Xaml.EventParameter.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Xaml.EventParameter.GetHashCode"></member>
    <member name="P:Microsoft.Xaml.EventParameter.Modifier">
      <summary>
                    Gets the modifier for the parameter that indicates whether it is an in, out, or reference parameter.
                </summary>
    </member>
    <member name="P:Microsoft.Xaml.EventParameter.Name">
      <summary>
                    Gets the recommended name of the parameter. 
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.EventParameter.op_Equality(Microsoft.Xaml.EventParameter,Microsoft.Xaml.EventParameter)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.EventParameter" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.EventParameter" /> objects are equal; otherwise, false.
                </returns>
      <param name="parameter1">
                    The first event parameter to compare.
                </param>
      <param name="parameter2">
                    The second event parameter to compare.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.EventParameter.op_Inequality(Microsoft.Xaml.EventParameter,Microsoft.Xaml.EventParameter)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.EventParameter" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.EventParameter" /> objects are not equal; otherwise, false.
                </returns>
      <param name="parameter1">
                    The first event parameter to compare.
                </param>
      <param name="parameter2">
                    The second event parameter to compare.
                </param>
    </member>
    <member name="P:Microsoft.Xaml.EventParameter.TypeName">
      <summary>
                    Gets the fully qualified assembly name of the  parameter type.
                </summary>
    </member>
    <member name="T:Microsoft.Xaml.EventParameterModifier">
      <summary>
                    Parameter modifiers for event parameters that describe the parameter type.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.EventParameterModifier.In">
      <summary>
                    The parameter is an in (by value) parameter. This is the default parameter type in C#.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.EventParameterModifier.Out">
      <summary>
                    The parameter is an out only parameter. This is indicated in C# by adding the out modifier to the parameter.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.EventParameterModifier.Ref">
      <summary>
                    This parameter is a reference parameter. This is indicated in C# by adding the ref modifier to the parameter.
                </summary>
    </member>
    <member name="T:Microsoft.Xaml.FormattingOptions">
      <summary>
                    Flags for the <see cref="M:Microsoft.Xaml.XamlLanguageService.FormatSource(Microsoft.Windows.Design.Documents.IMarkupSourceProvider,System.Int32,System.Int32,Microsoft.Xaml.FormattingOptions,System.String,System.Int32,System.Int32)" /> method that control how the source is formatted.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.FormattingOptions.FormatAttributes">
      <summary>
                    Indicates to formats attributes. If this option is not set, the whitespace in element tags are not modified. Only whitespace between elements are modified.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.FormattingOptions.SpaceBeforeSimpleTerminator">
      <summary>
                    Indicates that a space be inserted before the simple tags. For example &lt;Button/&gt; is formatted as &lt;Button /&gt;.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.FormattingOptions.NewLineBeforeAttributes">
      <summary>
                    Indicates that each attribute be preceded by a new line and indented to one indent level greater than the element's content. If this option is not set, each attribute is formatted to be preceded by a single space.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.FormattingOptions.KeepFirstAttributesOnSameLine">
      <summary>
                    Indicates to keep the first attribute on the same line as the tag. Overrides <see cref="F:Microsoft.Xaml.FormattingOptions.NewLineBeforeAttributes" /> for the first attribute. If this option is set, the first attribute is preceded by a single space and all others are formatted on their own line.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.FormattingOptions.PreserveAttributeNewLines">
      <summary>
                    Indicates to preserve attribute new lines. If the attributes are not formatted on their own line (<see cref="F:Microsoft.Xaml.FormattingOptions.NewLineBeforeAttributes" /> is not set) and the whitespace being replaced contains a new line, the attribute is formatted as if <see cref="F:Microsoft.Xaml.FormattingOptions.NewLineBeforeAttributes" /> was set. This has the effect of ensuring attributes that begin on a new line will still be on a new line after formatting.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.FormattingOptions.PreserveContentNewLines">
      <summary>
                    Indicates to preserve new lines in content. Otherwise, redundant new lines are removed and replaced with a single new line. <see cref="F:Microsoft.Xaml.FormattingOptions.PreserveContentNewLines" /> and <see cref="F:Microsoft.Xaml.FormattingOptions.CollapseContentNewLines" /> cannot be specified together.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.FormattingOptions.CollapseContentNewLines">
      <summary>
                    Indicates to collapse new lines in content. Otherwise, redundant new lines are removed and replaced with a single new line. <see cref="F:Microsoft.Xaml.FormattingOptions.PreserveContentNewLines" /> and <see cref="F:Microsoft.Xaml.FormattingOptions.CollapseContentNewLines" /> cannot be specified together.
                </summary>
    </member>
    <member name="T:Microsoft.Xaml.IMarshaledXamlLanguageService">
      <summary>
                    Returns file contexts for the specified XAML <see cref="T:Microsoft.Xaml.SourceInformation" />.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.IMarshaledXamlLanguageService.GetContextFor(Microsoft.Xaml.SourceInformation,Microsoft.Xaml.Symbols.IXamlSymbols)">
      <summary>
                    Retrieves a file context for the specified source.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Xaml.IXamlFileInformationContext" /> for the source specified by <paramref name="sourceInfo" />. 
                </returns>
      <param name="sourceInfo">
                    The source and relevant information about the project that contains the source.
                </param>
      <param name="symbols">
                    The symbols provided by the host, or null if all symbols should be derived from the source provider assemblies list.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.IMarshaledXamlLanguageService.UpdateSourceInformation(Microsoft.Xaml.SourceInformation)">
      <summary>
                    Called when the source information for a source file changes.
                </summary>
      <param name="sourceInfo">
                    The source and relevant information about the project that contains the source.
                </param>
    </member>
    <member name="T:Microsoft.Xaml.IXamlCompletion">
      <summary>
                    Completion information returned by <see cref="T:Microsoft.Xaml.IXamlFileInformationContext" /> for a particular location in the file.
                </summary>
    </member>
    <member name="P:Microsoft.Xaml.IXamlCompletion.DisplayText">
      <summary>
                    Gets text to display to the user regarding the completion.
                </summary>
    </member>
    <member name="P:Microsoft.Xaml.IXamlCompletion.EventDescription">
      <summary>
                    Gets the description of the event handler expected. 
                </summary>
    </member>
    <member name="P:Microsoft.Xaml.IXamlCompletion.InsertionText">
      <summary>
                    Gets text to insert into the file that represents the completion.
                </summary>
    </member>
    <member name="P:Microsoft.Xaml.IXamlCompletion.IsEvent">
      <summary>
                    Gets a value indicating whether this completion refers to an event.
                </summary>
      <returns>true if this completion refers to an event; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.IXamlCompletion.Kind">
      <summary>
                    Gets the kind for this completion.
                </summary>
    </member>
    <member name="P:Microsoft.Xaml.IXamlCompletion.Name">
      <summary>
                    Gets the simple name of the item.
                </summary>
    </member>
    <member name="T:Microsoft.Xaml.IXamlFileInformationContext">
      <summary>
                    A context interface for a particular XAML file.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.CheckForAttributeAndElementPresence(System.Int32,System.Boolean@)">
      <summary>
                    Checks whether there is an attribute at this location.
                </summary>
      <param name="offset"></param>
      <param name="directlyBeforeAttribute"></param>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.Close">
      <summary>
                    Called when the language service is no longer needed and any resources used by the language service should be released.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.GetBindingClassName">
      <summary>
                    Returns the name of the class set by the x:Class or x:Sublcass attribute.
                </summary>
      <returns>
                    The name of the class set by the x:Class or x:Sublcass attribute. Or null if neither attribute is set or the root element could not be parsed.
                </returns>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.GetBlockRange(System.Int32)">
      <summary>
                    Gets a range for the block at the specified location. 
                </summary>
      <param name="offset">
                    A zero-based offset from the beginning of the file.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.GetCompletions(System.Int32,Microsoft.Xaml.CompletionOptions,System.Char)">
      <summary>
                    Retrieves a list of the file completions for the specified offset in the file. 
                </summary>
      <param name="offset">
                    A zero-based offset from the beginning of the file.
                </param>
      <param name="completionOption">
                    A completion option.
                </param>
      <param name="quote">
                    The quotation character to use if not '\0'.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.GetEventBindings(System.Int32,System.Int32)">
      <summary>
                    Returns the event bindings in the specified range. 
                </summary>
      <param name="offset"></param>
      <param name="length"></param>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.GetHint(System.Int32,System.String@,System.Int32@,System.Int32@)">
      <summary>
                    Retrieves a hint string for the specified location.
                </summary>
      <param name="offset"></param>
      <param name="message"></param>
      <param name="start"></param>
      <param name="length"></param>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.GetInitialExtent(System.Int32,System.Int32@,System.Int32@)">
      <summary>
                    Retrieves the initial extent of the text span at specified offset.
                </summary>
      <param name="offset"></param>
      <param name="startIndex"></param>
      <param name="length"></param>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.GetMatchingRanges(System.Int32)">
      <summary>
                    Returns a list of the ranges that match the specified location. 
                </summary>
      <param name="offset">
                    A zero-based offset from the beginning of the file.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.GetMessages">
      <summary>
                    Retrieves a list of the error and warning messages generated by the last parse of the file.
                </summary>
      <returns>
                    An array of error and warning messages.
                </returns>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.GetReferences(System.String,Microsoft.Xaml.ReferenceOptions)">
      <summary>
                    Retrieves where in the file the specified reflection qualified name is used.
                </summary>
      <returns>
                    A list of where the specified reflection qualified name is used.
                </returns>
      <param name="rqName">
                    A reflection qualified name (as defined by VSIP) for the symbol being looked for.
                </param>
      <param name="referenceOptions">
                    Specifies the type of reference to return.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.GetSemanticRanges">
      <summary>
                    Get a list of the changes that were made in the update information since the last time this method was called. 
                </summary>
      <returns>
                    Returns a list of range changes since the last time this method was called. If this is the first time <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.GetSemanticRanges" /> is called, it will return the range values for the entire file as insert range updates.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.IXamlFileInformationContext.HasMessages">
      <summary>
                    Gets a value indicating whether the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.GetMessages" /> method will return a list of messages.
                </summary>
      <returns>true if the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.GetMessages" /> method will return a list of messages; otherwise false.
                </returns>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.LastUpdated">
      <summary>
                    Returns the value passed in for time in the last call to the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.Update(System.Int64,System.Int64,Microsoft.Xaml.XamlPrepareOptions,System.Int32)" /> method.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.Lock">
      <summary>
                    Ensures that the information will be retained even if another thread modifies the editor that contains the buffer until the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.Unlock" /> method is called. 
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.Unlock">
      <summary>
                    Releases the lock on the file context information allowing the information to be updated after a buffer modification. 
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.IXamlFileInformationContext.Update(System.Int64,System.Int64,Microsoft.Xaml.XamlPrepareOptions,System.Int32)">
      <summary>
                    Requests that this file context be updated to the current content of the file. 
                </summary>
      <returns>
                    A value that represents the version of the source that any errors occurred in. This version is the last parsed version.
                </returns>
      <param name="time">
                    A time value that will be returned by the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.LastUpdated" /> method. This value is not used internally.
                </param>
      <param name="sourceVersion"></param>
      <param name="prepareOptions">
                    Options to prepare the context for one or more calls on the interface.
                </param>
      <param name="offset">
                    An optional offset to use to help prepare for a call. Specifying -1 indicates that no offset is ready. Specifying a non-negative offset might cause more work to be done than necessary if the prepared call is not eventually made.
                </param>
    </member>
    <member name="T:Microsoft.Xaml.IXamlLanguageService">
      <summary>
                    The XAML language service. 
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.IXamlLanguageService.GetContextFor(Microsoft.Windows.Design.Documents.IMarkupSourceProvider,Microsoft.Xaml.Symbols.IXamlSymbols)">
      <summary>
                    Retrieves a file context for the specified provider.
                </summary>
      <param name="source">
                    An interface that is used to access the source file.
                </param>
      <param name="symbols">
                    The symbols provided by the host or null if all symbols should be derived from the source provider assemblies list.
                </param>
    </member>
    <member name="T:Microsoft.Xaml.ReferenceOptions">
      <summary>
                    Provides flags to specify the return type of the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.GetReferences(System.String,Microsoft.Xaml.ReferenceOptions)" /> method. 
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.ReferenceOptions.Type">
      <summary>
                    Return only type references.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.ReferenceOptions.Property">
      <summary>
                    Return only property references.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.ReferenceOptions.Field">
      <summary>
                    Return only field references.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.ReferenceOptions.DeclarationOnly">
      <summary>
                    Return only a reference to the declaration, not the reference of a symbol. For example, <see cref="F:Microsoft.Xaml.ReferenceOptions.DeclarationOnly" /> returns x:Class, x:Subclass and x:Name references, but not attribute or tag names.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.ReferenceOptions.All">
      <summary>
                    Return all references.
                </summary>
    </member>
    <member name="T:Microsoft.Xaml.RQHelper"></member>
    <member name="M:Microsoft.Xaml.RQHelper.GetToken(System.String)">
      <param name="name"></param>
    </member>
    <member name="T:Microsoft.Xaml.SemanticRange">
      <summary>
                    Represents outline ranges in the XAML file. 
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.SemanticRange.#ctor(System.Int64,System.Int64)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Xaml.SemanticRange" /> class. 
                </summary>
      <param name="offset"></param>
      <param name="length"></param>
    </member>
    <member name="M:Microsoft.Xaml.SemanticRange.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Xaml.SemanticRange.GetHashCode"></member>
    <member name="P:Microsoft.Xaml.SemanticRange.Length">
      <summary>
                    Gets the length of the range in characters.
                </summary>
    </member>
    <member name="P:Microsoft.Xaml.SemanticRange.Offset">
      <summary>
                    Gets the zero-based character offset from the beginning of the file where this range starts.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.SemanticRange.op_Equality(Microsoft.Xaml.SemanticRange,Microsoft.Xaml.SemanticRange)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.SemanticRange" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.SemanticRange" /> objects are equal; otherwise, false.
                </returns>
      <param name="range1">
                    The first semantic range to compare.
                </param>
      <param name="range2">
                    The second semantic range to compare.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.SemanticRange.op_Inequality(Microsoft.Xaml.SemanticRange,Microsoft.Xaml.SemanticRange)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.SemanticRange" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.SemanticRange" /> objects are not equal; otherwise, false.
                </returns>
      <param name="range1">
                    The first semantic range to compare.
                </param>
      <param name="range2">
                    The second semantic range to compare.
                </param>
    </member>
    <member name="T:Microsoft.Xaml.SourceInformation">
      <summary>
                    Represents the source text of a XAML file and the related project information that is required to parse the file.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.SourceInformation.#ctor(System.String,System.String,System.String,System.Reflection.AssemblyName,System.Reflection.AssemblyName[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Xaml.SourceInformation" /> class. 
                </summary>
      <param name="text">
                    The source text of the XAML file.
                </param>
      <param name="name">
                    The full path to the XAML file. Only the file name part of the full name is used for error messages.
                </param>
      <param name="defaultNamespace">
                    The default namespace of the project that contains the XAML file. 
                </param>
      <param name="localAssembly">
                    The name of the assembly that contains the XAML file.
                </param>
      <param name="assemblies">
                    The names of the assemblies referenced by the project that contains the XAML file. 
                </param>
    </member>
    <member name="P:Microsoft.Xaml.SourceInformation.Assemblies">
      <summary>
                    Gets an array of assembly names referenced by the project that contains the XAML file.
                </summary>
      <returns>
                    An <see cref="T:System.Reflection.AssemblyName" /> array of assembly names referenced by the project that contains the XAML file.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.SourceInformation.DefaultNamespace">
      <summary>
                    Gets the default namespace of the project that contains the XAML file.
                </summary>
      <returns>
                    The default namespace of the project that contains the XAML file.
                </returns>
    </member>
    <member name="M:Microsoft.Xaml.SourceInformation.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Xaml.SourceInformation.GetHashCode"></member>
    <member name="P:Microsoft.Xaml.SourceInformation.LocalAssembly">
      <summary>
                    Gets the name of the assembly that contains the XAML file.
                </summary>
      <returns>
                    The name of the assembly that contains the XAML file.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.SourceInformation.Name">
      <summary>
                    Gets the full path to the XAML file.
                </summary>
      <returns>
                    The full path to the XaML file.
                </returns>
    </member>
    <member name="M:Microsoft.Xaml.SourceInformation.op_Equality(Microsoft.Xaml.SourceInformation,Microsoft.Xaml.SourceInformation)">
      <param name="source1"></param>
      <param name="source2"></param>
    </member>
    <member name="M:Microsoft.Xaml.SourceInformation.op_Inequality(Microsoft.Xaml.SourceInformation,Microsoft.Xaml.SourceInformation)">
      <param name="source1"></param>
      <param name="source2"></param>
    </member>
    <member name="P:Microsoft.Xaml.SourceInformation.Text">
      <summary>
                    Gets the source text of the XAML file.
                </summary>
      <returns>
                    The source text of the XAML file.
                </returns>
    </member>
    <member name="T:Microsoft.Xaml.XamlCompletionKind">
      <summary>
                    Specifies the kind of completion a given <see cref="T:Microsoft.Xaml.IXamlCompletion" /> represents. 
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.Element">
      <summary>
                    The completion represents a value.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.Attribute">
      <summary>
                    The completion represents an attribute.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.Value">
      <summary>
                    The completion represents an attribute value.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.PropertyElement">
      <summary>
                    The completion represents a property element.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.Prefix">
      <summary>
                    The completion represents a XML namespace prefix.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.Event">
      <summary>
                    The completion represents an event.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.Comment">
      <summary>
                    The completion represents a comment.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.CData">
      <summary>
                    The completion represents a CDATA.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.ProcessingInstruction">
      <summary>
                    The completion represents a processing instruction.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.EndTag">
      <summary>
                    The completion represents an end tag.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.TypePrefix">
      <summary>
                    The completion represents a type prefix for an attached property or property elements.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlCompletionKind.EventHandlerDescription">
      <summary>
                    The completion is returned for event handler values indicating that the language service expects the name of an event handler. The description of the event handler is retrieved from the <see cref="P:Microsoft.Xaml.IXamlCompletion.EventDescription" /> property.
                </summary>
    </member>
    <member name="T:Microsoft.Xaml.XamlLanguageService">
      <summary>
                    The implementation of the <see cref="T:Microsoft.Xaml.IXamlLanguageService" /> interface.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.XamlLanguageService.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Xaml.XamlLanguageService" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.XamlLanguageService.FormatSource(Microsoft.Windows.Design.Documents.IMarkupSourceProvider,System.Int32,System.Int32,Microsoft.Xaml.FormattingOptions,System.String,System.Int32,System.Int32)">
      <summary>
                    Using <see cref="T:Microsoft.Windows.Design.SourceUpdate.ISourceChanger" /> for <see cref="T:Microsoft.Windows.Design.Documents.IMarkupSourceProvider" />, formats the file based on the specified formatting options.
                </summary>
      <param name="source"></param>
      <param name="offset"></param>
      <param name="length"></param>
      <param name="options"></param>
      <param name="indentText"></param>
      <param name="tabWidth"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.Xaml.XamlLanguageService.GetContextFor(Microsoft.Windows.Design.Documents.IMarkupSourceProvider,Microsoft.Xaml.Symbols.IXamlSymbols)">
      <summary>
                    Retrieves a file context for the specified provider. 
                </summary>
      <param name="source"></param>
      <param name="symbols"></param>
    </member>
    <member name="M:Microsoft.Xaml.XamlLanguageService.Microsoft#Xaml#IMarshaledXamlLanguageService#GetContextFor(Microsoft.Xaml.SourceInformation,Microsoft.Xaml.Symbols.IXamlSymbols)">
      <summary>
                    For a description of this member, see <see cref="M:Microsoft.Xaml.IMarshaledXamlLanguageService.GetContextFor(Microsoft.Xaml.SourceInformation,Microsoft.Xaml.Symbols.IXamlSymbols)" />.
                </summary>
      <param name="sourceInfo"></param>
      <param name="symbols"></param>
    </member>
    <member name="M:Microsoft.Xaml.XamlLanguageService.Microsoft#Xaml#IMarshaledXamlLanguageService#UpdateSourceInformation(Microsoft.Xaml.SourceInformation)">
      <summary>
                    For a description of this member, see <see cref="M:Microsoft.Xaml.IMarshaledXamlLanguageService.UpdateSourceInformation(Microsoft.Xaml.SourceInformation)" />.
                </summary>
      <param name="sourceInfo"></param>
    </member>
    <member name="M:Microsoft.Xaml.XamlLanguageService.Microsoft#Xaml#IXamlLanguageService#GetContextFor(Microsoft.Windows.Design.Documents.IMarkupSourceProvider,Microsoft.Xaml.Symbols.IXamlSymbols)">
      <summary>
                    For a description of this member, see <see cref="M:Microsoft.Xaml.IXamlLanguageService.GetContextFor(Microsoft.Windows.Design.Documents.IMarkupSourceProvider,Microsoft.Xaml.Symbols.IXamlSymbols)" />.
                </summary>
      <param name="source"></param>
      <param name="symbols"></param>
    </member>
    <member name="T:Microsoft.Xaml.XamlPrepareOptions">
      <summary>
                    Options passed to the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.Update(System.Int64,System.Int64,Microsoft.Xaml.XamlPrepareOptions,System.Int32)" /> method to help it prepare for calls. 
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlPrepareOptions.None">
      <summary>
                    No options.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlPrepareOptions.SemanticRanges">
      <summary>
                    Prepare for a call to the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.GetSemanticRanges" /> method. Offset is ignored.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlPrepareOptions.Completions">
      <summary>
                    Prepare for a call to the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.GetCompletions(System.Int32,Microsoft.Xaml.CompletionOptions,System.Char)" /> method.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlPrepareOptions.Hints">
      <summary>
                    Prepare for a call to the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.GetHint(System.Int32,System.String@,System.Int32@,System.Int32@)" /> method.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlPrepareOptions.References">
      <summary>
                    Prepare for a call to the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.GetReferences(System.String,Microsoft.Xaml.ReferenceOptions)" /> method.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlPrepareOptions.Messages">
      <summary>
                    Prepare for a call to the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.GetMessages" /> method.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlPrepareOptions.EventBindings">
      <summary>
                    Prepare for a call to the <see cref="M:Microsoft.Xaml.IXamlFileInformationContext.GetEventBindings(System.Int32,System.Int32)" /> method.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.XamlPrepareOptions.All">
      <summary>
                    Prepare for any call.
                </summary>
    </member>
    <member name="T:Microsoft.Xaml.Symbols.IXamlSymbols">
      <summary>
                    Represents symbols that are used in IntelliSense.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.IXamlSymbols.CanAddElement(System.String,System.String)">
      <summary>
                    Returns a value indicating whether the specified container type can contain an element of the specified content type. 
                </summary>
      <returns>true if <paramref name="contentType" /> can be added to a collection or dictionary of type <paramref name="containerType" />; otherwise, false.
                </returns>
      <param name="containerType">
                    The qualified name of the container type.
                </param>
      <param name="contentType">
                    The qualified name of the content type.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.IXamlSymbols.CanAssign(System.String,System.String)">
      <summary>
                    Returns a value indicating whether the specified property type can accept a value of the specified content type.
                </summary>
      <returns>true if an element of <paramref name="contentType" /> can be a value of a property of type <paramref name="propertyType" />; otherwise, false.
                </returns>
      <param name="propertyType">
                    The qualified name of the property type.
                </param>
      <param name="contentType">
                    The qualified name of the content type.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.IXamlSymbols.CanAttachTo(System.String,System.String,System.String)">
      <summary>
                    Returns a value indicating whether the specified property of the declaring type can be attached to the specified host type.
                </summary>
      <returns>true if the attachable property can be attached to an element of type <paramref name="hostType" />; otherwise, false.
                </returns>
      <param name="declaringType">
                    The qualified name of the property declaring type.
                </param>
      <param name="propertyName">
                    The name of the attachable property.
                </param>
      <param name="hostType">
                    The qualified name of the type of the element the attachable property is being attached to.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.IXamlSymbols.ConstructType(System.String,System.String[])">
      <summary>
                    Constructs a type from a generic type. 
                </summary>
      <returns>
                    Returns a description of the created type by using the generic type.
                </returns>
      <param name="typeName">
                    The name of the generic type to use to construct the type.
                </param>
      <param name="typeArguments">
                    The type that is used as arguments to the generic type to construct the type.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.IXamlSymbols.GetNamespaceUris">
      <summary>
                    Returns a list of namespace URIs that can be used in an xmlns declaration. 
                </summary>
      <returns>
                    An array of namespace URIs.
                </returns>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.IXamlSymbols.GetProperties(System.String)">
      <summary>
                    Returns the descriptions of properties for the specified type.
                </summary>
      <returns>
                    An array of property descriptions for <paramref name="typeName" />.
                </returns>
      <param name="typeName">
                    The qualified name for a type whose properties descriptions are requested.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.IXamlSymbols.GetTypeDescription(System.String,Microsoft.Xaml.Symbols.XamlTypeDescription@)">
      <summary>
                    Returns the description of the type referenced by a <see cref="T:Microsoft.Xaml.Symbols.XamlTypeDescription" /> structure.
                </summary>
      <returns>true if the type is define by the host; otherwise, false.
                </returns>
      <param name="typeName">
                    The qualified name of the type whose description is being requested.
                </param>
      <param name="description">
                    The description of the specified type.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.IXamlSymbols.GetTypeNames(System.String)">
      <summary>
                    Returns the qualified names of all the types defined by a namespace URI or null if the URI is not known by the host.
                </summary>
      <returns>
                    An array of qualified names of all the types defined by <paramref name="namespaceUri" /> or null if the URI is not known by the host.
                </returns>
      <param name="namespaceUri">
                    The namespace URI referenced by XAML.
                </param>
    </member>
    <member name="E:Microsoft.Xaml.Symbols.IXamlSymbols.SymbolsChanged">
      <summary>
                    Occurs when the symbols have changed and they must be re-acquired from the host.
                </summary>
    </member>
    <member name="T:Microsoft.Xaml.Symbols.XamlPropertyDescription">
      <summary>
                    Describes a property from a type supplied by the XAML language service host.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlPropertyDescription.#ctor(System.String,System.String,System.String,Microsoft.Xaml.Symbols.XamlPropertyOptions,System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Xaml.Symbols.XamlPropertyDescription" /> class.
                </summary>
      <param name="name">
                    The name of the property.
                </param>
      <param name="typeName">
                    The qualified name of the type.
                </param>
      <param name="attachableTo">
                    The qualified name of the type this property can be attached to.
                </param>
      <param name="options">
                    Informational options about this property.
                </param>
      <param name="typeConverterName">
                    The qualified name of the type converter override for this property.
                </param>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlPropertyDescription.AttachableTo">
      <summary>
                    Gets the qualified name of the type this property can be attached to. 
                </summary>
      <returns>
                    The qualified name of the type this property can be attached to.
                </returns>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlPropertyDescription.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlPropertyDescription.GetHashCode"></member>
    <member name="P:Microsoft.Xaml.Symbols.XamlPropertyDescription.Name">
      <summary>
                    Gets the name of the property.
                </summary>
      <returns>
                    The name of the property.
                </returns>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlPropertyDescription.op_Equality(Microsoft.Xaml.Symbols.XamlPropertyDescription,Microsoft.Xaml.Symbols.XamlPropertyDescription)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.Symbols.XamlPropertyDescription" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.Symbols.XamlPropertyDescription" /> objects are equal; otherwise, false.
                </returns>
      <param name="xamlPropertyDescription1"></param>
      <param name="xamlPropertyDescription2"></param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlPropertyDescription.op_Inequality(Microsoft.Xaml.Symbols.XamlPropertyDescription,Microsoft.Xaml.Symbols.XamlPropertyDescription)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.Symbols.XamlPropertyDescription" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.Symbols.XamlPropertyDescription" /> objects are not equal; otherwise, false.
                </returns>
      <param name="xamlPropertyDescription1"></param>
      <param name="xamlPropertyDescription2"></param>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlPropertyDescription.Options">
      <summary>
                    Gets informational options about the property.
                </summary>
      <returns>
                    Informational options about the property.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlPropertyDescription.TypeConverterName">
      <summary>
                    Gets the qualified name of the type converter override for this property. 
                </summary>
      <returns>
                    The qualified name of the type converter override for this property.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlPropertyDescription.TypeName">
      <summary>
                    Gets the qualified name of the type. 
                </summary>
      <returns>
                    The qualified name of the type.
                </returns>
    </member>
    <member name="T:Microsoft.Xaml.Symbols.XamlPropertyOptions">
      <summary>
                    Indicates information that is needed by the XAML language service for properties that are described by the XAML language service host.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.Symbols.XamlPropertyOptions.IsEvent">
      <summary>
                    Indicates that this property is an event. If this option is set, TypeName is ignored (and can be null). GetEventDescription is called when a description of the event is needed.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.Symbols.XamlPropertyOptions.IsBrowsable">
      <summary>
                    Indicates that this property can appear in XAML language service completion lists. This option is cleared if the language service should not report an error if the property is set, but should not recommend setting it.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.Symbols.XamlPropertyOptions.IsAttachable">
      <summary>
                    Indicates that this property is an attachable property declared by the type.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.Symbols.XamlPropertyOptions.ContentOnly">
      <summary>
                    For attachable properties, indicates that this property should only be displayed on children of elements of the declaring type of the property. This option is ignored if <see cref="F:Microsoft.Xaml.Symbols.XamlPropertyOptions.IsAttachable" /> is cleared.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.Symbols.XamlPropertyOptions.DirectContentOnly">
      <summary>
                    For attachable properties, indicates that this property should only be displayed on direct content of elements of the declaring type of the property. For example, Grid.Top should only be displayed on direct child elements of a <see cref="T:System.Windows.Controls.Grid" />. This option is ignored if <see cref="F:Microsoft.Xaml.Symbols.XamlPropertyOptions.IsAttachable" /> is cleared.
                </summary>
    </member>
    <member name="T:Microsoft.Xaml.Symbols.XamlTypeDescription">
      <summary>
                    Describes a type in a namespace supplied by the XAML language service host.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeDescription.#ctor(System.String,System.String,System.Int32,System.String,Microsoft.Xaml.Symbols.XamlTypeOptions,System.String,System.String,System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Xaml.Symbols.XamlTypeDescription" /> class. 
                </summary>
      <param name="name">
                    The name of the type.
                </param>
      <param name="qualifiedName">
                    The qualified name of the type.
                </param>
      <param name="parameterCount">
                    The parity of the type if it is an open generic type. 
                </param>
      <param name="baseType">
                    The qualified name of the base type.
                </param>
      <param name="options">
                    Options indicating how this type is treated by the language service.
                </param>
      <param name="contentPropertyName">
                    The name of the property to use as the content property for the XAML element associated with this type.
                </param>
      <param name="namePropertyName">
                    The name of the property to use as a synonym of the x:Name XAML attribute.
                </param>
      <param name="typeConverterName">
                    The name of the type converter associated with this type.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeDescription.#ctor(System.String,System.String,System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Xaml.Symbols.XamlTypeDescription" /> class. 
                </summary>
      <param name="name">
                    The name of the type.
                </param>
      <param name="qualifiedName">
                    The qualified name of the type.
                </param>
      <param name="baseType">
                    The qualified name of the base type.
                </param>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlTypeDescription.BaseType">
      <summary>
                    Gets the qualified name of the base type. 
                </summary>
      <returns>
                    The qualified name of the base type.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlTypeDescription.ContentPropertyName">
      <summary>
                    Gets the name of the property to use as the content property for the XAML element associated with this type. 
                </summary>
      <returns>
                    The name of the property to use as the content property for the XAML element associated with this type, or null.
                </returns>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeDescription.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeDescription.GetHashCode"></member>
    <member name="P:Microsoft.Xaml.Symbols.XamlTypeDescription.Name">
      <summary>
                    Gets the name of the type. This is the name of the type as it would be typed in XAML.
                </summary>
      <returns>
                    The name of the type.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlTypeDescription.NamePropertyName">
      <summary>
                    Gets the name of the property to use as a synonym of the x:Name XAML attribute. 
                </summary>
      <returns>
                    The name of the property to use as a synonym of the x:Name XAML attribute, or null.
                </returns>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeDescription.op_Equality(Microsoft.Xaml.Symbols.XamlTypeDescription,Microsoft.Xaml.Symbols.XamlTypeDescription)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.Symbols.XamlTypeDescription" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.Symbols.XamlTypeDescription" /> objects are equal; otherwise, false.
                </returns>
      <param name="xamlTypeDescription1"></param>
      <param name="xamlTypeDescription2"></param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeDescription.op_Inequality(Microsoft.Xaml.Symbols.XamlTypeDescription,Microsoft.Xaml.Symbols.XamlTypeDescription)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.Symbols.XamlTypeDescription" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.Symbols.XamlTypeDescription" /> objects are not equal; otherwise, false.
                </returns>
      <param name="xamlTypeDescription1"></param>
      <param name="xamlTypeDescription2"></param>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlTypeDescription.Options">
      <summary>
                    Gets options indicating how this type is treated by the language service.
                </summary>
      <returns>
                    Options indicating how this type is treated by the language service.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlTypeDescription.ParameterCount">
      <summary>
                    Gets the parity of the type if it is an open generic type. 
                </summary>
      <returns>
                    The parity of the type if it is an open generic type. This value will be zero if the type is not a generic type.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlTypeDescription.QualifiedName">
      <summary>
                    Gets the qualified name of the type. 
                </summary>
      <returns>
                    The qualified name of the type.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlTypeDescription.TypeConverterName">
      <summary>
                    Gets the name of the type converter associated with this type. 
                </summary>
      <returns>
                    The name of the type converter associated with this type, or null.
                </returns>
    </member>
    <member name="T:Microsoft.Xaml.Symbols.XamlTypeName">
      <summary>
                    Represents the simple and qualified name of a type returned by the <see cref="M:Microsoft.Xaml.Symbols.IXamlSymbols.GetTypeNames(System.String)" /> method for a XAML namespace URI.
                </summary>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeName.#ctor(System.String,System.Int32,System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Xaml.Symbols.XamlTypeName" /> class. 
                </summary>
      <param name="name">
                    The name of the type.
                </param>
      <param name="parameterCount">
                    The parity of the type if it is an open generic type.
                </param>
      <param name="qualifiedName">
                    The qualified name of the type.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeName.#ctor(System.String,System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Xaml.Symbols.XamlTypeName" /> class. 
                </summary>
      <param name="name">
                    The name of the type.
                </param>
      <param name="qualifiedName">
                    The qualified name of the type.
                </param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeName.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeName.GetHashCode"></member>
    <member name="P:Microsoft.Xaml.Symbols.XamlTypeName.Name">
      <summary>
                    Gets the name of the type. This is the name of the type as it would be typed in XAML.
                </summary>
      <returns>
                    The name of the type.
                </returns>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeName.op_Equality(Microsoft.Xaml.Symbols.XamlTypeName,Microsoft.Xaml.Symbols.XamlTypeName)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.Symbols.XamlTypeName" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.Symbols.XamlTypeName" /> objects are equal; otherwise, false.
                </returns>
      <param name="xamlTypeName1"></param>
      <param name="xamlTypeName2"></param>
    </member>
    <member name="M:Microsoft.Xaml.Symbols.XamlTypeName.op_Inequality(Microsoft.Xaml.Symbols.XamlTypeName,Microsoft.Xaml.Symbols.XamlTypeName)">
      <summary>
                    Compares two <see cref="T:Microsoft.Xaml.Symbols.XamlTypeName" /> objects.
                </summary>
      <returns>true if the two <see cref="T:Microsoft.Xaml.Symbols.XamlTypeName" /> objects are not equal; otherwise, false.
                </returns>
      <param name="xamlTypeName1"></param>
      <param name="xamlTypeName2"></param>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlTypeName.ParameterCount">
      <summary>
                    Gets the parity of the type if it is an open generic type. 
                </summary>
      <returns>
                    The parity of the type if it is an open generic type. This value will be zero if the type is not a generic type.
                </returns>
    </member>
    <member name="P:Microsoft.Xaml.Symbols.XamlTypeName.QualifiedName">
      <summary>
                    Gets the qualified name of the type. 
                </summary>
      <returns>
                    The qualified name of the type.
                </returns>
    </member>
    <member name="T:Microsoft.Xaml.Symbols.XamlTypeOptions">
      <summary>
                    Indicates information about a type that is needed by the XAML language service.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.Symbols.XamlTypeOptions.IsConstructible">
      <summary>
                    Indicates that this type can be referenced by XAML as an element tag, which implies that the type can be constructed by using a default constructor. This option should be set for open generic types that are constructible when the type arguments have been specified.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.Symbols.XamlTypeOptions.IsCollection">
      <summary>
                    Indicates that this type represents a collection.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.Symbols.XamlTypeOptions.IsDictionary">
      <summary>
                    Indicates that this type represents a dictionary.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.Symbols.XamlTypeOptions.IsMarkupExtension">
      <summary>
                    Indicates that this type represents a custom markup extension. Therefore, this type can be used where markup extensions are expected.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.Symbols.XamlTypeOptions.IsBrowsable">
      <summary>
                    Indicates that this type can appear in XAML language service completion lists. This option is cleared if the type cannot be reported as an error, but not recommended for completion.
                </summary>
    </member>
    <member name="F:Microsoft.Xaml.Symbols.XamlTypeOptions.IsEnum">
      <summary>
                    Indicates that this type is an enumeration and may require special handling, such as using the <see cref="T:System.ComponentModel.EnumConverter" /> as its <see cref="T:System.ComponentModel.TypeConverter" />.
                </summary>
    </member>
  </members>
</doc>