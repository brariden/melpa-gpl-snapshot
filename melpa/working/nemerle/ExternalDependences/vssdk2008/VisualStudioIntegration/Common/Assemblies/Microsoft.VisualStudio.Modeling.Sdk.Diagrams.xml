<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Modeling.Sdk.Diagrams</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.AbsoluteBoundsChangedEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AbsoluteBoundsChangedEventArgs.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AbsoluteBoundsChangedEventArgs.NewAbsoluteBounds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AbsoluteBoundsChangedEventArgs.OldAbsoluteBounds"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AbsoluteBoundsChangedEventArgs.SetEventArgs(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="oldValue"></param>
      <param name="newValue"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ActionCanceledState"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ActionCanceledState.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ActionCanceledState.Next(Microsoft.VisualStudio.Modeling.Diagrams.MouseAction)">
      <param name="mouseAction"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ActionCompletedState"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ActionCompletedState.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ActionCompletedState.Next(Microsoft.VisualStudio.Modeling.Diagrams.MouseAction)">
      <param name="mouseAction"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ActionRequest"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ActionRequest.CompleteAction"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ActionRequest.CancelAction"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ActionRequest.ContinueAction"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="shape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="shapeField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="leftSide"></param>
      <param name="sibling"></param>
      <param name="rightSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="leftSide"></param>
      <param name="sibling"></param>
      <param name="rightSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="leftSide"></param>
      <param name="sibling"></param>
      <param name="rightSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="leftSide"></param>
      <param name="sibling"></param>
      <param name="rightSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSibling"></param>
      <param name="rightSiblingSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSibling"></param>
      <param name="rightSiblingSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSibling"></param>
      <param name="rightSiblingSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSibling"></param>
      <param name="rightSiblingSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSibling"></param>
      <param name="rightSiblingSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSibling"></param>
      <param name="rightSiblingSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSibling"></param>
      <param name="rightSiblingSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="leftSibling"></param>
      <param name="leftSiblingSide"></param>
      <param name="rightSibling"></param>
      <param name="rightSiblingSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterHorizontally(System.Double)">
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="topSide"></param>
      <param name="sibling"></param>
      <param name="bottomSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="topSide"></param>
      <param name="sibling"></param>
      <param name="bottomSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="topSide"></param>
      <param name="sibling"></param>
      <param name="bottomSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="topSide"></param>
      <param name="sibling"></param>
      <param name="bottomSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSibling"></param>
      <param name="bottomSiblingSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSibling"></param>
      <param name="bottomSiblingSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSibling"></param>
      <param name="bottomSiblingSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSibling"></param>
      <param name="bottomSiblingSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSibling"></param>
      <param name="bottomSiblingSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSibling"></param>
      <param name="bottomSiblingSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSibling"></param>
      <param name="bottomSiblingSide"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="topSibling"></param>
      <param name="topSiblingSide"></param>
      <param name="bottomSibling"></param>
      <param name="bottomSiblingSide"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.CenterVertically(System.Double)">
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Clear"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.ClearBottomAnchor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.ClearRightAnchor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.HasBottomAnchor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.HasLeftAnchor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.HasRightAnchor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.HasTopAnchor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.InvisibleCollapseFlags"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.MinimumHeight"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.MinimumHeightInLines"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.MinimumWidth"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.MinimumWidthInCharacters"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetBottomAnchor(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetBottomAnchor(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="sibling"></param>
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetBottomAnchor(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,System.Double)">
      <param name="sibling"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetBottomAnchor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="sibling"></param>
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetBottomAnchor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,System.Double)">
      <param name="sibling"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetBottomAnchor(System.Double)">
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetLeftAnchor(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetLeftAnchor(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="sibling"></param>
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetLeftAnchor(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,System.Double)">
      <param name="sibling"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetLeftAnchor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="sibling"></param>
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetLeftAnchor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,System.Double)">
      <param name="sibling"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetLeftAnchor(System.Double)">
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetRightAnchor(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetRightAnchor(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="sibling"></param>
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetRightAnchor(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,System.Double)">
      <param name="sibling"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetRightAnchor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="sibling"></param>
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetRightAnchor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,System.Double)">
      <param name="sibling"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetRightAnchor(System.Double)">
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetTopAnchor(Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetTopAnchor(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="sibling"></param>
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetTopAnchor(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,System.Double)">
      <param name="sibling"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetTopAnchor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge,System.Double)">
      <param name="sibling"></param>
      <param name="side"></param>
      <param name="margin"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetTopAnchor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,System.Double)">
      <param name="sibling"></param>
      <param name="percentage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.SetTopAnchor(System.Double)">
      <param name="percentage"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge.Left"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge.Right"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge.Top"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.AnchoringBehavior.Edge.Bottom"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.SizeD,System.Boolean)">
      <param name="linkShape"></param>
      <param name="lineSegment"></param>
      <param name="connectedShape"></param>
      <param name="tolerance"></param>
      <param name="isStartPoint"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.AnchorPointLocation"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.ApplyRoute(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="view"></param>
      <param name="newPoint"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.ConnectedShape"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.CurrentPoints"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.GetAccessibilityObject(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="linkShape"></param>
      <param name="segment"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.GetFocusable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment)">
      <param name="parentShape"></param>
      <param name="segment"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.GetHashCode"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.GetSelectable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment)">
      <param name="parentShape"></param>
      <param name="segment"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.InvalidateCurrent(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="view"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.IsStartPoint"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.LineSegment"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.LinkShape"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.MoveTo(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="view"></param>
      <param name="newPoint"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.OriginalPoints"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.RollbackRoute(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="view"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint.Tolerance"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPointAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPointAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPointAction.Dispose(System.Boolean)">
      <param name="disposing"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPointAction.DoPaintFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPointAction.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="currentCursor"></param>
      <param name="diagramClientView"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPointAction.OnDiagramLostFocus(Microsoft.VisualStudio.Modeling.Diagrams.LostFocusEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPointAction.OnDragCompleted(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPointAction.OnMouseActionCanceled(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPointAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AnchorPointAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.AreaField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.#ctor(System.String)">
      <param name="fieldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.#ctor(System.String,System.Single)">
      <param name="fieldName"></param>
      <param name="cornerRadius"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
      <param name="fieldName"></param>
      <param name="northWestCornerRadius"></param>
      <param name="northEastCornerRadius"></param>
      <param name="southWestCornerRadius"></param>
      <param name="southEastCornerRadius"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.DefaultCornerRadius"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.DefaultHeight"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.DefaultLinearGradientMode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.DefaultWidth"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.DoPaint(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="e"></param>
      <param name="parentShape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.DrawBorder"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.FillBackground"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.GetAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.GetAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.GetBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.GetCornerRadius(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.GetLinearGradientMode(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AreaField.GradientEndingColor"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius.#ctor(System.Single)">
      <param name="radius"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <param name="northWestRadius"></param>
      <param name="northEastRadius"></param>
      <param name="southWestRadius"></param>
      <param name="southEastRadius"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius.GetHashCode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius.NorthEastCornerRadius"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius.NorthWestCornerRadius"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius.op_Equality(Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius,Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius)">
      <param name="left"></param>
      <param name="right"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius.op_Inequality(Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius,Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius)">
      <param name="left"></param>
      <param name="right"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius.SouthEastCornerRadius"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AreaFieldCornerRadius.SouthWestCornerRadius"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo.#ctor(System.Guid)">
      <param name="propertyId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo.#ctor(System.Guid,Microsoft.VisualStudio.Modeling.Diagrams.PresentationDomainNavigator,Microsoft.VisualStudio.Modeling.Diagrams.DomainPresentationNavigator)">
      <param name="propertyId"></param>
      <param name="presentationDomainNavigator"></param>
      <param name="domainPresentationNavigator"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo.DomainPresentationNavigator"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo.FilteringValues"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo.IsShapeProperty"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo.PresentationDomainNavigator"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo.PropertyId"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.AvoidCornerRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AvoidCornerRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AvoidCornerRule.GetCompliantBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="shape"></param>
      <param name="proposedBounds"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.AvoidCornerRule.Instance(System.Double)">
      <param name="cornerSize"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkNodeChangeRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkNodeChangeRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkNodeChangeRule.RolePlayerChanged(Microsoft.VisualStudio.Modeling.RolePlayerChangedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShape">
      <summary>
                    Represents the shape for a binary link.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShape" /> class. 
                </summary>
      <param name="partition">
                    The partition for the binary link shape.
                </param>
      <param name="propertyAssignments">
                    The list of domain property ID/value pairs to set when the binary link shape is created.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShape.TargetRelationshipDomainClassId">
      <summary>
                    Gets the ID of the target element that is assigned to the binary link shape.  
                </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.AccessibleName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.AnchorBothEnds"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.CalculateDerivedVisible(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.Connect(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="fromShape"></param>
      <param name="toShape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.DecoratorFrom"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.DecoratorTo"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.Disconnect"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.DomainClassId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.ExcludeFromClipRegion(System.Drawing.Graphics,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.GraphicsPath)">
      <param name="graphics"></param>
      <param name="matrix"></param>
      <param name="perimeter"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.ExcludePath"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.FixedFrom"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.FixedFromDomainPropertyId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.FixedTo"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.FixedToDomainPropertyId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.FromEndPoint"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.FromLinkConnectsToNode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.FromShape"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.GeometryCanManuallyRoute"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.GeometryDecoratorFrom"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.GeometryDecoratorTo"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.GeometryEdgePoints"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.GeometryEdgePointsNoJumps"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.IsDirected"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.OnDeleted"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.RecalculateRoute"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.SetDecorators(Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator,Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator,System.Boolean)">
      <param name="newFromDecorator"></param>
      <param name="newToDecorator"></param>
      <param name="invalidate"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.ShapeGeometry"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.ToEndPoint"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.ToLinkConnectsToNode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.ToShape"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.AnchorEndState"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.AnchorEndState.DoNot"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.AnchorEndState.BothEnds"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeBase.AnchorEndState.DoNotAnchorOtherEnd"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeGeometry"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeGeometry.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeGeometry.DoPaintGeometry(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <param name="e"></param>
      <param name="geometryHost"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializer.ReadElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializer.UseRelationshipId(Microsoft.VisualStudio.Modeling.ElementLink,Microsoft.VisualStudio.Modeling.SerializationContext)">
      <param name="link"></param>
      <param name="serializationContext"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializer.WriteElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShapeSerializerBase.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BoundsFixupState"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BoundsFixupState.Invalid"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BoundsFixupState.ViewFixup"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BoundsFixupState.ResizeParent"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BoundsRules"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BoundsRules.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BoundsRules.GetCompliantBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="shape"></param>
      <param name="proposedBounds"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BrushDescriptor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BrushDescriptor.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo)">
      <param name="brushStyleSetInfo"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushDescriptor.Brush"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushDescriptor.BrushStyleSetInfo"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.BackColor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.BrushSettingsFlags"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.BrushStyleSetInfo"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.BrushType"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.Color"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.ForeColor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.HatchStyle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.Image"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.ImmutableBackColor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.ImmutableBrushType"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.ImmutableColor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.ImmutableForeColor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.ImmutableHatchStyle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.ImmutableImage"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.ImmutableTransform"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.ImmutableWrapMode"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.IsOverridden(Microsoft.VisualStudio.Modeling.Diagrams.BrushSettingsFlags)">
      <param name="settings"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.Transform"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings.WrapMode"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettingsFlags"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettingsFlags.BrushType"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettingsFlags.ForeColor"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettingsFlags.Color"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettingsFlags.BackColor"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettingsFlags.HatchStyle"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettingsFlags.Image"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettingsFlags.Transform"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.BrushSettingsFlags.WrapMode"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.BackColor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.BrushType"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.Clone"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.Color"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.Equals(System.Object,System.Object)">
      <param name="objA"></param>
      <param name="objB"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.ForeColor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.GetHashCode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.HatchStyle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.Image"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.Transform"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.BrushStyleSetInfo.WrapMode"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ChevronButtonField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ChevronButtonField.#ctor(System.String)">
      <param name="fieldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ChevronButtonField.AccessibleDoDefaultAction(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ChevronButtonField.GetAccessibleDefaultActionDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ChevronButtonField.GetAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ChevronButtonField.GetAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ChevronButtonField.GetAccessibleRole(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ChevronButtonField.GetAccessibleState(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ChevronButtonField.GetButtonImage(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ChevronButtonField.GetPotentialMouseAction(System.Windows.Forms.MouseButtons,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="mouseButtons"></param>
      <param name="point"></param>
      <param name="hitTestInfo"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CircleShapeGeometry"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CircleShapeGeometry.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CircleShapeGeometry.DoFoldToShape(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="geometryHost"></param>
      <param name="potentialPoint"></param>
      <param name="vectorEndpoint"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CircleShapeGeometry.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo,System.Boolean)">
      <param name="geometryHost"></param>
      <param name="hitPoint"></param>
      <param name="hitTestInfo"></param>
      <param name="includeTolerance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CircleShapeGeometry.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="boundingBox"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ClickedState"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ClickedState.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ClickedState.Next(Microsoft.VisualStudio.Modeling.Diagrams.MouseAction)">
      <param name="mouseAction"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.Add(System.ComponentModel.Design.CommandID)">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.Contains(System.ComponentModel.Design.CommandID)">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.CopyTo(Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection,System.Int32)">
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.IndexOf(System.ComponentModel.Design.CommandID)">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.Insert(System.Int32,System.ComponentModel.Design.CommandID)">
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.Item(System.Int32)">
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.OnInsert(System.Int32,System.Object)">
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.OnRemove(System.Int32,System.Object)">
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.OnSet(System.Int32,System.Object,System.Object)">
      <param name="index"></param>
      <param name="oldValue"></param>
      <param name="newValue"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.OnValidate(System.Object)">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection.Remove(System.ComponentModel.Design.CommandID)">
      <param name="value"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="store"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.AccessibleDescription"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.AccessibleName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.AutoSizeLabel(System.String)">
      <param name="labelText"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.ChooseRelationship(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="childShape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.DefaultHeight"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.DefaultWidth"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.DomainClassId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.FixedFlags"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.GridSize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.HasShadow"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
      <param name="classStyleSet"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.InitializeShapeFields(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.ShapeField})">
      <param name="shapeFields"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.MinimumSize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.RelatedShapeToEmphasize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.ResizableSides"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.Rounded"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.ShapeGeometry"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.ToolboxCaption"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShape.ZOrder"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeAddRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeAddRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeAddRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeTypeDescriptor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor,Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="parent"></param>
      <param name="presentationElement"></param>
      <param name="selectedElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CommentShapeTypeDescriptor.GetDescription(Microsoft.VisualStudio.Modeling.Design.ElementPropertyDescriptor)">
      <param name="propertyDescriptor"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.Compartment">
      <summary>
                    Represents the compartment shape in the Domain-Specific Language Designer.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.Compartment" /> class. 
                </summary>
      <param name="partition">
                    The partition for the compartment shape.
                </param>
      <param name="propertyAssignments">
                    The list of domain property ID/value pairs for the compartment shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.AllowCustomCompartmentFillColor">
      <summary>
                    Gets or sets permission to have a custom background color for the compartment shape. 
                </summary>
      <returns>true if the compartment shape can have a custom background color; otherwise, false. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.AllowCustomTitleFillColor">
      <summary>
                    Gets or sets permission to have a custom background color for the compartment title.
                </summary>
      <returns>true if the compartment title can have a custom background color; otherwise, false. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.BoundsRules">
      <summary>
                    Gets the boundaries for the compartment shape. 
                </summary>
      <returns>
                    The boundaries for the compartment shape; otherwise, null.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.CanExpandAndCollapse">
      <summary>
                    Gets the compartment shape and verifies whether a user can collapse and expand it.
                </summary>
      <returns>true if a user can collapse and expand the compartment shape; otherwise, false. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.CanMove">
      <summary>
                    Gets the compartment shape and verifies whether a user can move it in the diagram. 
                </summary>
      <returns>true if a user can move the compartment shape in the diagram; otherwise, false. 
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.Collapse">
      <summary>
                    Collapses the compartment shape so that only the compartment header appears.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.CollapsedSize">
      <summary>
                    Gets the size of the collapsed compartment shape.
                </summary>
      <returns>
                    The size of the collapsed compartment shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.CompartmentFillColor">
      <summary>
                    Gets or sets the background color for the compartment shape.
                </summary>
      <returns>
                    The background color for the compartment shape. 
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.CompartmentFillColorDomainPropertyId">
      <summary>
                    Represents the ID that is assigned to the compartment shape background color. 
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.CompartmentFillColorStorage">
      <summary>
                    Gets or sets the background color for the compartment shape by using a stored background color.
                </summary>
      <returns>
                    The stored background color.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.DomainClassId">
      <summary>
                    Represents the ID that is assigned to the compartment shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.Expand">
      <summary>
                    Expands the compartment shape so that both the compartment header and body appear.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.ExpandAll">
      <summary>
                    Expands the compartment shape and all the compartments in it.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.ExpandedSize">
      <summary>
                    Gets the size of the expanded compartment shape. 
                </summary>
      <returns>
                    The size of the expanded compartment shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.ForwardEventsToParent">
      <summary>
                    Gets or sets permission to forward drag-and-drop, key, and mouse events from a child compartment shape to its parent compartment shape.
                </summary>
      <returns>true if events should be forwarded from a child compartment shape to its parent compartment shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.HasHighlighting">
      <summary>
                    Gets the compartment shape and verifies whether it is highlighted.
                </summary>
      <returns>true if the compartment shape is highlighted; otherwise, false. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.HasOutline">
      <summary>
                    Gets the compartment shape and verifies whether it has an outline around it.
                </summary>
      <returns>true if the compartment shape has an outline around it; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.HasShadow">
      <summary>
                    Gets the compartment shape and verifies whether it has a shadow behind it.
                </summary>
      <returns>true if the compartment shape has a shadow behind it; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.HeaderBackgroundField">
      <summary>
                    Gets the background for the text area in the compartment shape header.
                </summary>
      <returns>
                    The background for the text area in the compartment shape header. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.HeaderBounds">
      <summary>
                    Gets the bounds for the compartment shape header.
                </summary>
      <returns>
                    The bounds for the compartment shape header. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.HeaderDisplayText">
      <summary>
                    Gets the text for the compartment shape header.
                </summary>
      <returns>
                    The text for the compartment shape header.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.HeaderPlusMinusField">
      <summary>
                    Gets the expand/collapse chevron for the compartment shape. 
                </summary>
      <returns>
                    The expand/collapse chevron for the compartment shape. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.HeaderTextField">
      <summary>
                    Gets the text field for the compartment shape header.
                </summary>
      <returns>
                    The text field for the compartment shape header.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.InitializeFromDescription(Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription)">
      <summary>
                    Initializes the description for the compartment shape.
                </summary>
      <param name="description">
                    The description for the compartment shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
      <summary>
                    Initializes the style of the compartment shape.
                </summary>
      <param name="classStyleSet">
                    The style set, which specifies the pens, brushes, and fonts to use with the compartment shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.InitializeShapeFields(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.ShapeField})">
      <summary>
                    Initializes the header of the compartment shape.
                </summary>
      <param name="shapeFields">
                    The fields to include in the header.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.MinimumSize">
      <summary>
                    Gets the minimum width and height for the compartment shape. 
                </summary>
      <returns>
                    The minimum width and height for the compartment shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.Name">
      <summary>
                    Gets or sets the name of the compartment shape. 
                </summary>
      <returns>
                    The name of the compartment shape. 
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.NameDomainPropertyId">
      <summary>
                    Represents the ID that is assigned to the name of the compartment shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.OnClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Forwards the event to the compartment shape when the user clicks the compartment.
                </summary>
      <param name="e">
                    The event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.OnDoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Forwards the event to the compartment shape when the user double-clicks the compartment.
                </summary>
      <param name="e">
                    The event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.OnDragDrop(Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs)">
      <summary>
                    Forwards the event to the compartment shape when the user drags the compartment to another location.
                </summary>
      <param name="e">
                    The event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.OnDragOver(Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs)">
      <summary>
                    Forwards the event to the compartment shape when the user drags the mouse over the compartment.
                </summary>
      <param name="e">
                    The event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.OnKeyDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <summary>
                    Forwards the event to the compartment shape when the user holds a key down.
                </summary>
      <param name="e">
                    The event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.OnKeyPress(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs)">
      <summary>
                    Forwards the event to the compartment shape when the user presses a key.
                </summary>
      <param name="e">
                    The event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.OnKeyUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <summary>
                    Forwards the event to the compartment shape when the user releases a key.
                </summary>
      <param name="e">
                    The event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Forwards the event to the compartment shape when the user holds down the mouse button over the compartment.
                </summary>
      <param name="e">
                    The event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Forwards the event to the compartment shape when the user releases the mouse button when pointing to the compartment.
                </summary>
      <param name="e">
                    The event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.OnPaintSelection(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <summary>
                    Forwards the event to the compartment shape when the user changes the style of the compartment.
                </summary>
      <param name="e">
                    The event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.OverrideStyles(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
      <param name="styleSet"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.ResizableSides">
      <summary>
                    Gets the sides of the shape that the user can resize. 
                </summary>
      <returns>
                    The sides of the shape that the user can resize.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.Title">
      <summary>
                    Gets or sets the title for the compartment shape.
                </summary>
      <returns>
                    The title for the compartment shape.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.TitleDomainPropertyId">
      <summary>
                    Represents the ID that is assigned to the title of the compartment shape. 
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.TitleFillColor">
      <summary>
                    Gets or sets the background color for the compartment shape title.
                </summary>
      <returns>
                    The background color for the compartment shape title. 
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.TitleFillColorDomainPropertyId">
      <summary>
                    Represents the ID that is assigned to the background of the compartment shape title.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.TitleFillColorStorage">
      <summary>
                    Gets or sets the background color for the compartment shape title by using a stored background color.
                </summary>
      <returns>
                    The background color for the compartment shape title.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.TitleTextColor"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.TitleTextColorDomainPropertyId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.TitleVisibility">
      <summary>
                    Gets the compartment shape and verifies whether the title appears on it.
                </summary>
      <returns>true if the title appears on the compartment shape; otherwise, false. 
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.TitleVisibilityDomainPropertyId">
      <summary>
                    Represents the ID that is assigned to the visibility state of the compartment shape title. 
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Compartment.UpdateSize">
      <summary>
                    Updates the height and width of the compartment. 
                </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription.#ctor(System.String,System.String,System.Drawing.Color,System.Boolean,System.Drawing.Color,System.Boolean,Microsoft.VisualStudio.Modeling.Diagrams.FontSettings)">
      <param name="name"></param>
      <param name="title"></param>
      <param name="titleFill"></param>
      <param name="allowCustomTitleFillColor"></param>
      <param name="compartmentFill"></param>
      <param name="allowCustomCompartmentFillColor"></param>
      <param name="titleFontSettings"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription.AllowCustomCompartmentFillColor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription.AllowCustomTitleFillColor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription.CompartmentFillColor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription.CreateCompartment(Microsoft.VisualStudio.Modeling.Store)">
      <param name="store"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription.Name"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription.Title"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription.TitleFillColor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription.TitleFontSettings"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription.TitleTextColor"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentMapping"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentMapping.#ctor(System.String)">
      <param name="compartmentId"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentMapping.CompartmentId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentMapping.InitializeCompartment(Microsoft.VisualStudio.Modeling.Diagrams.Compartment)">
      <param name="compartment"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentMapping.InitializeCompartmentShape(Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape)">
      <param name="compartmentShape"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentRuleHelper"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentRuleHelper.HandleCompartmentUpdate(Microsoft.VisualStudio.Modeling.ElementLink,System.Type)">
      <param name="link"></param>
      <param name="listParentType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentRuleHelper.HandleRolePlayerChangedRule(Microsoft.VisualStudio.Modeling.ElementLink,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="link"></param>
      <param name="oldValue"></param>
      <param name="newValue"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape">
      <summary>
                    Represents the body of the compartment shape in the Domain-Specific Language Designer.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape" /> class. 
                </summary>
      <param name="partition">
                    The partition for the compartment shape.
                </param>
      <param name="propertyAssignments">
                    The list of domain property ID/value pairs for the compartment shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.AllowsChildrenToResizeParent">
      <summary>
                    Gets the child compartment shape and verifies whether it can resize its parent compartment shape. 
                </summary>
      <returns>true if a child compartment shape can resize its parent compartment shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.AllowsChildrenToShrinkParent">
      <summary>
                    Gets the child compartment shape and verifies whether resizing it will also resize its parent compartment shape.
                </summary>
      <returns>
                    The height if the height of the compartment shape can be resized. The width if the width of the compartment shape can be modified. 
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.AnchorAllCompartments">
      <summary>
                    Anchors nested compartments to the compartment shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.AssociateCompartment(Microsoft.VisualStudio.Modeling.Diagrams.Compartment,System.Type)">
      <summary>
                    Assigns a compartment to the compartment shape.
                </summary>
      <param name="compartment">
                    The compartment to assign to the compartment shape.
                </param>
      <param name="listKey">
                    The key for the compartment.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.BackgroundGradientMode">
      <summary>
                    Gets the gradient for the background of the compartment shape.
                </summary>
      <returns>
                    The gradient for the background of the compartment shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.CanExpandAndCollapse">
      <summary>
                    Gets the compartment shape and verifies whether you can expand and collapse it.
                </summary>
      <returns>true if you can expand and collapse the compartment shape; otherwise, false. 
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.CreateBackgroundGradientField(System.String)">
      <summary>
                    Creates an area field for the background gradient.
                </summary>
      <returns>
                    The area field for the background gradient.
                </returns>
      <param name="fieldName">
                    The name of the area field.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.DefaultContainerMargin">
      <summary>
                    Gets the default margin between the nested child compartment and its parent compartment shape.
                </summary>
      <returns>
                    The default margin that you can set between the nested child compartment and its parent compartment shape.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.DomainClassId">
      <summary>
                    Represents the ID that is assigned to the compartment shape. 
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.EnsureCompartments">
      <summary>
                    Creates the compartments for the compartment shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.FindCompartment(System.String)">
      <summary>
                    Searches for a compartment.
                </summary>
      <returns>
                    The compartment; otherwise, null if no compartment is found. 
                </returns>
      <param name="id">
                    The ID that is assigned to the compartment.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.FindCompartments(System.Type)">
      <summary>
                    Searches for compartments.
                </summary>
      <returns>
                    The compartments; otherwise, null if no compartments are found.
                </returns>
      <param name="listKey">
                    The key that is assigned to the compartments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.GetCompartmentDescriptions">
      <summary>
                    Gets the descriptions for the compartment decorators. 
                </summary>
      <returns>
                    The descriptions for the compartment decorators. 
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.GetCompartmentMappings">
      <summary>
                    Gets the mappings from the compartment shape to its compartments.
                </summary>
      <returns>
                    The mappings from the compartment shape to its compartments.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.GetCompartmentMappings(System.Type)">
      <summary>
                    Gets the mappings from the compartment shape to its compartments.
                </summary>
      <returns>
                    The mappings from the compartment shape to its compartments.
                </returns>
      <param name="melType">
                    The type of model element to which the compartment shape is mapped.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.InitializeFromMappings">
      <summary>
                    Initializes the compartment shape for each mapping.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.InitializeShapeFields(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.ShapeField})">
      <summary>
                    Initializes the fields for the compartment shape.
                </summary>
      <param name="shapeFields">
                    The list of fields for the compartment shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.IsSingleCompartmentHeaderVisible">
      <summary>
                    Gets the compartment shape and verifies whether its header is visible (if the compartment contains only one header).
                </summary>
      <returns>true if the compartment header should be visible; otherwise, false. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.MaximumSize">
      <summary>
                    Gets the maximum size for the compartment shape.
                </summary>
      <returns>
                    The maximum size for the compartment shape. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.ResizableSides">
      <summary>
                    Gets the sides of the compartment shape that a user can resize.
                </summary>
      <returns>
                    The sides of the compartment shape that a user can resize.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShape.UpdateSpecifiedCompartmentSize(System.Type)">
      <summary>
                    Updates the size for a compartment in the compartment shape.
                </summary>
      <param name="listKey">
                    The key for the compartment.
                </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeAreaField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeAreaField.#ctor(System.String)">
      <param name="fieldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeAreaField.GetBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeAreaField.GetCornerRadius(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentShapeSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentTypeDescriptor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor,Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="parent"></param>
      <param name="presentationElement"></param>
      <param name="selectedElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentTypeDescriptor.GetClassName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentTypeDescriptor.GetComponentName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CompartmentTypeDescriptor.ShouldCreatePropertyDescriptor(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainPropertyInfo)">
      <param name="requestor"></param>
      <param name="domainProperty"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram,System.Boolean)">
      <param name="diagram"></param>
      <param name="permitClick"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.Dispose(System.Boolean)">
      <param name="disposing"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.DoPaintFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.GetConnectionTypes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="sourceShapeElement"></param>
      <param name="targetShapeElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="currentCursor"></param>
      <param name="diagramClientView"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.GetCursorFromCursorType(Microsoft.VisualStudio.Modeling.Diagrams.ConnectActionCursor)">
      <param name="connectActionCursor"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnClicked(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnContextMenuRequested(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnDiagramScrolled(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnDragCompleted(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnDraggingBegun(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnMouseActionActivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnMouseActionCanceled(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnMouseActionDeactivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnMouseLeave(Microsoft.VisualStudio.Modeling.Diagrams.LeaveShapeEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.StickyMode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.TargetPoint"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ConnectAction.UpdateConnectionType"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ConnectActionCursor"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectActionCursor.Searching"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectActionCursor.Disallowed"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectActionCursor.Allowed"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectActionCursor.Warning"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionPoint"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionPoint.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.GraphObject.VGConnection)">
      <param name="connection"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionPoint.Center"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionPoint.Id"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionPoint.IsDelegation"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionType"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionType.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionType.CanCreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.String@)">
      <param name="sourceShapeElement"></param>
      <param name="targetShapeElement"></param>
      <param name="connectionWarning"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionType.CreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs)">
      <param name="sourceShapeElement"></param>
      <param name="targetShapeElement"></param>
      <param name="paintFeedbackArgs"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionType.DoPaintFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs)">
      <param name="paintArgs"></param>
      <param name="sourceShapeElement"></param>
      <param name="sourcePoint"></param>
      <param name="targetShapeElement"></param>
      <param name="targetPoint"></param>
      <param name="paintFeedbackArgs"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionType.GetConnectTransactionName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="sourceShape"></param>
      <param name="targetShape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionType.Instance"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionType.InvalidatePaintFeedback(Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs,Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="paintFeedbackArgs"></param>
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionType.IsOfInterest(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="sourceShapeElement"></param>
      <param name="targetShapeElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionType.IsValidSourceAndTarget(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="sourceShapeElement"></param>
      <param name="targetShapeElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectionType.UpdatePaintFeedbackParameters(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs)">
      <param name="sourceShapeElement"></param>
      <param name="sourcePoint"></param>
      <param name="targetShapeElement"></param>
      <param name="targetPoint"></param>
      <param name="paintFeedbackArgs"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorArrowStyle"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorArrowStyle.Custom"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorArrowStyle.EmptyArrow"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorArrowStyle.FilledArrow"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorArrowStyle.HollowArrow"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorArrowStyle.EmptyDiamond"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorArrowStyle.FilledDiamond"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecorator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecorator.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecoratorPosition)">
      <param name="field"></param>
      <param name="position"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecorator.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecoratorPosition,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="field"></param>
      <param name="position"></param>
      <param name="offset"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecorator.ConfigureHostShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parent"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecorator.Position"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecorator.RepositionHostShape(Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape)">
      <param name="host"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecorator.RequiresHost"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecoratorPosition"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecoratorPosition.SourceTop"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecoratorPosition.SourceBottom"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecoratorPosition.TargetTop"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecoratorPosition.TargetBottom"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecoratorPosition.CenterTop"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ConnectorDecoratorPosition.CenterBottom"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ContextMenuRequestedEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceCopyClosure"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceCopyClosure.#ctor"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceCopyClosureBase"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceCopyClosureBase.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceCopyClosureBase.ShouldVisitRelationship(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.DomainRelationshipInfo,Microsoft.VisualStudio.Modeling.ElementLink)">
      <param name="walker"></param>
      <param name="sourceElement"></param>
      <param name="sourceRoleInfo"></param>
      <param name="domainRelationshipInfo"></param>
      <param name="targetRelationship"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceCopyClosureBase.ShouldVisitRolePlayer(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementLink,Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="walker"></param>
      <param name="sourceElement"></param>
      <param name="elementLink"></param>
      <param name="targetDomainRole"></param>
      <param name="targetRolePlayer"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDeleteClosure"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDeleteClosure.#ctor"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDeleteClosureBase"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDeleteClosureBase.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDeleteClosureBase.ShouldVisitRelationship(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.DomainRelationshipInfo,Microsoft.VisualStudio.Modeling.ElementLink)">
      <param name="walker"></param>
      <param name="sourceElement"></param>
      <param name="sourceRoleInfo"></param>
      <param name="domainRelationshipInfo"></param>
      <param name="targetRelationship"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDeleteClosureBase.ShouldVisitRolePlayer(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementLink,Microsoft.VisualStudio.Modeling.DomainRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="walker"></param>
      <param name="sourceElement"></param>
      <param name="elementLink"></param>
      <param name="targetDomainRole"></param>
      <param name="targetRolePlayer"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.#ctor(Microsoft.VisualStudio.Modeling.Store)">
      <param name="store"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.CreateElement(Microsoft.VisualStudio.Modeling.Partition,System.Type,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="elementType"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.CreateElementLink(Microsoft.VisualStudio.Modeling.Partition,System.Type,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="elementLinkType"></param>
      <param name="roleAssignments"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.DomainModelId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.GetClosureFilter(Microsoft.VisualStudio.Modeling.ClosureType,System.Collections.Generic.ICollection{Microsoft.VisualStudio.Modeling.ModelElement})">
      <param name="type"></param>
      <param name="rootElements"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.GetCustomDomainModelTypes"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.GetGeneratedDomainModelTypes"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.GetGeneratedDomainProperties"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.GetGeneratedDomainRoles"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.ResourceBaseName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.ResourceManager"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel.SingletonResourceManager"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehavior"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehavior.Instance"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorBase"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorBase.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorBase.AllSerializers"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorBase.CustomSerializerTypes"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorMonikerResolver"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorMonikerResolver.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory)">
      <param name="store"></param>
      <param name="directory"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorMonikerResolver.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="mel"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorMonikerResolver.CanBeMonikerized(Microsoft.VisualStudio.Modeling.DomainClassInfo)">
      <param name="domainClassInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorMonikerResolver.OnAmbiguousMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,System.String,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="context"></param>
      <param name="moniker"></param>
      <param name="element1"></param>
      <param name="element2"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorMonikerResolver.OnMonikerResolvedToDuplicateLink(Microsoft.VisualStudio.Modeling.SerializationResult,Microsoft.VisualStudio.Modeling.Moniker)">
      <param name="serializationResult"></param>
      <param name="moniker"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorMonikerResolver.OnUnresolvedMoniker(Microsoft.VisualStudio.Modeling.SerializationResult,Microsoft.VisualStudio.Modeling.Moniker)">
      <param name="serializationResult"></param>
      <param name="moniker"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorMonikerResolver.UnresolvedMonikerExceptionMessage"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.AmbiguousMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,System.String,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="serializationContext"></param>
      <param name="moniker"></param>
      <param name="element1"></param>
      <param name="element2"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.AmbiguousSchema(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,System.String,System.String)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="targetNamespace"></param>
      <param name="schemaPath"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.CannotMonikerizeElement(Microsoft.VisualStudio.Modeling.SerializationContext,System.String)">
      <param name="serializationContext"></param>
      <param name="domainClassName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.DanglingRelationship(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,System.String)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="relationshipType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.ExpectingFullFormRelationship(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,System.Type)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="relationshipType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.ExpectingShortFormRelationship(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,System.Type)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="relationshipType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.IgnoredPropertyValue(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,System.String,System.Type,System.String)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="propertyName"></param>
      <param name="propertyType"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.InvalidPropertyValue(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,System.String,System.Type,System.String)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="propertyName"></param>
      <param name="propertyType"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.MissingId(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,System.Guid)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="newId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.MissingMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,System.String)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="monikerAttributeName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.MonikerResolvedToDuplicateLink(Microsoft.VisualStudio.Modeling.SerializationResult,Microsoft.VisualStudio.Modeling.Moniker)">
      <param name="serializationResult"></param>
      <param name="moniker"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.NoSchema(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,System.String)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="targetNamespace"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.ResourceManager"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.SchemaValidationError(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,System.String)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="message"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.UnexpectedXmlElement(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.UnresolvedMoniker(Microsoft.VisualStudio.Modeling.SerializationResult,Microsoft.VisualStudio.Modeling.Moniker)">
      <param name="serializationResult"></param>
      <param name="moniker"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceSerializationBehaviorSerializationMessages.VersionMismatch(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,System.Version,System.Version)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="expectedVersion"></param>
      <param name="actualVersion"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DashStyleTypeConverter"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DashStyleTypeConverter.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DashStyleTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <param name="context"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.Decorator">
      <summary>
                    When overridden in a derived class, represents a decorator element in the diagram.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.Decorator" /> class. 
                </summary>
      <param name="field">
                    The field to which the decorator is assigned.
                </param>
      <param name="offset">
                    The offset of the decorator around the shape field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.AssociateValueWith(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo)">
      <summary>
                    Associates the decorator with a store property that is assigned to the shape.
                </summary>
      <param name="store">
                    The in-memory store that is assigned to the shape.
                </param>
      <param name="propertyInfo">
                    The property in the in-memory store.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.AssociateValueWith(Microsoft.VisualStudio.Modeling.Store,System.Guid)">
      <summary>
                    Associates the decorator with a store property that is assigned to the shape.
                </summary>
      <param name="store">
                    The in-memory store that is assigned to the shape.
                </param>
      <param name="propertyId">
                    The ID that is assigned to a property in the in-memory store.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.AssociateValueWith(Microsoft.VisualStudio.Modeling.Store,System.Guid,Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo)">
      <summary>
                    Associates the decorator with a store property that is assigned to the shape.
                </summary>
      <param name="store">
                    The in-memory store that is assigned to the shape.
                </param>
      <param name="domainClassId">
                    The ID that is assigned to the shape.
                </param>
      <param name="propertyInfo">
                    The property in the in-memory store.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.AssociateVisibilityWith(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo)">
      <summary>
                    Associates the visibility of the decorator with a store property that is assigned to a shape.
                </summary>
      <param name="store">
                    The in-memory store that is assigned to the shape.
                </param>
      <param name="propertyInfo">
                    The property in the in-memory store.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.AssociateVisibilityWith(Microsoft.VisualStudio.Modeling.Store,System.Guid)">
      <summary>
                    Associates the visibility of the decorator with a store property that is assigned to a shape.
                </summary>
      <param name="store">
                    The in-memory store that is assigned to the shape.
                </param>
      <param name="propertyId">
                    The ID that is assigned to a property in the in-memory store.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.AssociateVisibilityWith(Microsoft.VisualStudio.Modeling.Store,System.Guid,Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo)">
      <summary>
                    Associates the visibility of the decorator with a store property that is assigned to a shape.
                </summary>
      <param name="store">
                    The in-memory store that is assigned to the shape.
                </param>
      <param name="domainClassId">
                    The ID that is assigned to the shape.
                </param>
      <param name="propertyInfo">
                    The property in the in-memory store.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.ConfigureHostShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Creates a host shape or configures an existing host shape.
                </summary>
      <returns>
                    The new or updated host shape.
                </returns>
      <param name="parent">
                    The shape to which the host shape will be assigned.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.DecoratorAnchorMargins">
      <summary>
                    Gets the margin around the field. The decorator can attach itself to the field in this area.
                </summary>
      <returns>
                    The margin around the field.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.Field">
      <summary>
                    Gets the field to which the decorator is assigned.
                </summary>
      <returns>
                    The field to which the decorator is assigned.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.GetHostShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the host shape.
                </summary>
      <returns>
                    The host shape.
                </returns>
      <param name="rootShape">
                    The shape to which the host shape is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.GetValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the association between the decorator and a shape.
                </summary>
      <returns>
                    The association between the decorator and a shape.
                </returns>
      <param name="parentShape">
                    The shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.GetVisible(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the visibility of the decorator that is assigned to a shape.
                </summary>
      <returns>true if the decorator is visible; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.Offset">
      <summary>
                    Gets or sets the offset that modifies the default position of the decorator.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.OnAfterOffsetChanged">
      <summary>
                    Enables derived classes to modify the decorator after the offset has changed.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.RepositionHostShape(Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape)">
      <summary>
                    Repositions the host shape and sets its visibility.
                </summary>
      <param name="host">
                    The host shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.RequiresHost">
      <summary>
                    Gets the decorator and verifies whether the position between it and the shape requires a host shape.
                </summary>
      <returns>true if the shape requires a host shape; otherwise, false.
                
                    To create a host shape, see <see cref="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.ConfigureHostShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)" />.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.SetValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Object)">
      <summary>
                    Sets the association with the decoration and a shape.
                </summary>
      <param name="parentShape">
                    The shape.
                </param>
      <param name="value">
                    The association.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.SetVisible(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Object)">
      <summary>
                    Sets the visibility of a decorator that is assigned to a shape.
                </summary>
      <param name="parentShape">
                    The shape.
                </param>
      <param name="value">
                    The association.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.UpdateDecoratorHostShapes(Microsoft.VisualStudio.Modeling.ModelElement)">
      <summary>
                    Updates the bounds for the host shapes.
                </summary>
      <param name="element">
                    The presentation element from which to begin the updates.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.UpdateDecoratorHostShapes(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid)">
      <summary>
                    Updates the bounds for the host shapes.
                </summary>
      <param name="element">
                    The presentation element from which to start the updates.
                </param>
      <param name="domainClassId">
                    The ID of the element to which the presentation elements are linked. 
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Decorator.UpdateHostShapeVisibility(Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape)">
      <summary>
                    Updates the visibility of the host shape.
                </summary>
      <param name="host">
                    The host shape.
                </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorDoubleEmptyArrow"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorDoubleEmptyArrow.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorDoubleEmptyArrow.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="bounds"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorEmptyArrow"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorEmptyArrow.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorEmptyArrow.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="bounds"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorEmptyDiamond"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorEmptyDiamond.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorEmptyDiamond.BrushId"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorFilledArrow"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorFilledArrow.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorFilledArrow.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="bounds"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorFilledDiamond"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorFilledDiamond.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorFilledDiamond.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="bounds"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHollowArrow"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHollowArrow.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHollowArrow.BrushId"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="store"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.BoundsRules"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.CanMove"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.CanSelect"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.Decorator"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.FixedFlags"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.ForwardEventsToParent"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.GetToolTipText(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="item"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.HasFilledBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.HasHighlighting"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.HasOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.HasShadow"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.HasToolTip"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.OnClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.OnDoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.OnKeyDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.OnKeyPress(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.OnKeyUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.SetBoundsRules(Microsoft.VisualStudio.Modeling.Diagrams.BoundsRules)">
      <param name="boundsRules"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.ShapeFields"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape.StyleSet"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeBase"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeBase.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeBase.DomainClassId"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShapeSerializerBase.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DefaultBoundsRules"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DefaultBoundsRules.GetCompliantBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="shape"></param>
      <param name="proposedBounds"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DefaultBoundsRules.Instance"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DefaultGroupBoundsRules"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DefaultGroupBoundsRules.GetCompliantGroupBounds(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="store"></param>
      <param name="targetShape"></param>
      <param name="ghostShapes"></param>
      <param name="proposedLocationDelta"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DefaultGroupBoundsRules.Instance"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceAccessibleObject"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceAccessibleObject.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceAccessibleObject.Bounds"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceAccessibleObject.GetChild(System.Int32)">
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceAccessibleObject.GetChildCount"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceAccessibleObject.Name"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <param name="navdir"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceAccessibleObject.Parent"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceAccessibleObject.Role"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.#ctor(System.IServiceProvider,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serviceProvider"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.#ctor(System.IServiceProvider,Microsoft.VisualStudio.Modeling.Store)">
      <param name="serviceProvider"></param>
      <param name="store"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.AddGhostShapesContext(System.Windows.Forms.IDataObject,Microsoft.VisualStudio.Modeling.Diagrams.Diagram,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="data"></param>
      <param name="diagram"></param>
      <param name="initialDragLocation"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.CanMergeElementGroupPrototype(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="targetElement"></param>
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.CanMergeElementGroupPrototype(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ProtoElementBase,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="targetElement"></param>
      <param name="toMergeProtoElement"></param>
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)">
      <param name="proposedTargetElement"></param>
      <param name="elementGroup"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.ChooseMergeTarget(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="proposedTargetElement"></param>
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.GetAssociatedModelElement(Microsoft.VisualStudio.Modeling.ElementGroupPrototype,Microsoft.VisualStudio.Modeling.ProtoElementBase)">
      <param name="elementGroupPrototype"></param>
      <param name="protoPresentationElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.Merge(Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,System.Windows.Forms.IDataObject,System.Drawing.PointF)">
      <param name="targetElement"></param>
      <param name="data"></param>
      <param name="mergePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.MergeElementGroupPrototype(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="targetElement"></param>
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.MergeElementGroupPrototype(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroupPrototype,System.Drawing.PointF)">
      <param name="targetElement"></param>
      <param name="elementGroupPrototype"></param>
      <param name="mergePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.OnMerged(Microsoft.VisualStudio.Modeling.MergeElementGroupEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceElementOperations.PropagateElementGroupContextToTransaction(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup,Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="targetElement"></param>
      <param name="elementGroup"></param>
      <param name="transaction"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceMergeContext"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceMergeContext.AddRootModelElement(Microsoft.VisualStudio.Modeling.Transaction,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="transaction"></param>
      <param name="modelElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceMergeContext.GetElementGroup(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceMergeContext.GetRootModelElements(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceMergeContext.GetRootPresentationElements(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceMergeContext.GetTargetElement(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceMergeContext.HasContext(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceMergeContext.PreMergeKey"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DesignSurfaceMergeContext.Set(Microsoft.VisualStudio.Modeling.Transaction,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)">
      <param name="transaction"></param>
      <param name="targetElement"></param>
      <param name="elementGroup"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.Diagram">
      <summary>
                    Represents a diagram in the Domain-Specific Language Designer.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.Diagram" /> class. 
                </summary>
      <param name="partition">
                    The partition for the diagram.
                </param>
      <param name="propertyAssignments">
                    The list of property ID/value pairs for the diagram.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.AccessibleDescription">
      <summary>
                    Gets the description for the diagram.
                </summary>
      <returns>
                    The description.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.AccessibleName">
      <summary>
                    Gets the name of the diagram.
                </summary>
      <returns>
                    The name of the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ActiveDiagramView">
      <summary>
                    Gets the active view for the diagram.
                </summary>
      <returns>
                    The active view for the diagram.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.AddImageFormat(System.Windows.Forms.IDataObject,System.Collections.ICollection)">
      <summary>
                    Adds the format of the diagram image to <see cref="T:System.Windows.IDataObject" />, which is responsible for transferring data. 
                </summary>
      <param name="data">
                    The <see cref="T:System.Windows.IDataObject" /> in which to add the image data format.
                </param>
      <param name="selectedElements">
                    The collection of model elements to include in the diagram image.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.AllowsChildrenToResizeParent">
      <summary>
                    Gets the diagram and verifies whether it should be resized so that all elements in the diagram appear.
                </summary>
      <returns>true if the diagram should be resized so that all elements in the diagram appear; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.AnchorPointAction">
      <summary>
                    Gets the mouse action that is responsible for moving the endpoints of a link.
                </summary>
      <returns>
                    The mouse action that is responsible for moving the endpoints of a link.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.Associate(Microsoft.VisualStudio.Modeling.Diagrams.DiagramView)">
      <summary>
                    Displays the diagram in the specified diagram view.
                </summary>
      <param name="diagramView">
                    The diagram view.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.AutoLayoutShapeElements(System.Collections.ICollection)">
      <summary>
                    Lays out the collection of element shapes on the diagram automatically.
                </summary>
      <param name="shapeElementCollection">
                    The collection of element shapes.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.AutoLayoutShapeElements(System.Collections.ICollection,Microsoft.VisualStudio.Modeling.Diagrams.GraphObject.VGRoutingStyle,Microsoft.VisualStudio.Modeling.Diagrams.GraphObject.PlacementValueStyle,System.Boolean)">
      <summary>
                    Lays out the collection of element shapes on the diagram automatically.
                </summary>
      <param name="shapeElementCollection">
                    The collection of element shapes.
                </param>
      <param name="routingStyle">
                    The routing style that determines how links between elements appear.
                </param>
      <param name="placementStyle">
                    The placement style that determines how elements are positioned in the diagram.
                </param>
      <param name="route">true to re-route lines if elements have been moved because of boundaries or snap-to-grid actions; otherwise, false.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.BackgroundBrushId">
      <summary>
                    Gets the ID of the brush that draws the background for the diagram.
                </summary>
      <returns>
                    The background for the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.BaseFontFromEnvironment">
      <summary>
                    Gets the font to use as the base font.
                </summary>
      <returns>
                    The font to use as the base font.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.BaseFontName">
      <summary>
                    Gets or sets the name of the base font.
                </summary>
      <returns>
                    The name of the base font.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.BaseFontNameDomainPropertyId">
      <summary>
                    Represents the property ID for the base font name.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.BaseFontSize">
      <summary>
                    Gets or sets the size of the base font.
                </summary>
      <returns>
                    The size of the base font.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.BaseFontSizeDomainPropertyId">
      <summary>
                    Represents the property ID for the base font size.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CanDeserializationReroute">
      <summary>
                    Gets the diagram and verifies whether it allows rerouting during serialization.
                </summary>
      <returns>true if the diagram allows rerouting during serialization; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CanMove">
      <summary>
                    Gets the diagram and verifies whether it can be moved.
                </summary>
      <returns>true if the diagram can be moved; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ClientViews">
      <summary>
                    Gets the list of client views that are assigned to the diagram.
                </summary>
      <returns>
                    The list of client views that are assigned to the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ConnectActionFilterString">
      <summary>
                    Gets the connect action for the diagram.
                </summary>
      <returns>
                    The connect action for the diagram or null.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CopyImageToClipboard(System.Collections.ICollection)">
      <summary>
                    Copies a collection of shapes and their parent shapes to the Clipboard as an image.  
                </summary>
      <returns>true if the collection of shapes was copied to the Clipboard as an image; otherwise, false.
                </returns>
      <param name="selectedShapes">
                    The collection of shapes.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CopyOrigin">
      <summary>
                    Gets the text that represents the original diagram that was copied.
                </summary>
      <returns>
                    The text that represents the original diagram that was copied.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CreatableSwimLaneSubjects">
      <summary>
                    Gets the list of domain classes that are linked to swimlane shapes.
                </summary>
      <returns>
                    The list of domain classes that are linked to swimlane shapes.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CreateBitmap(System.Collections.ICollection,Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CreateBitmapPreference)">
      <summary>
                    Creates an image of the selected shapes.
                </summary>
      <returns>
                    The image of the selected shapes; otherwise, null if no shapes were selected.
                </returns>
      <param name="selectedElements">
                    The selected shapes.
                </param>
      <param name="creationPreference">
                    How the image should be created. For a list of preferences, see <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CreateBitmapPreference" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CreateChildShape(Microsoft.VisualStudio.Modeling.ModelElement)">
      <summary>
                    Creates a child shape for the parent shape.
                </summary>
      <returns>
                    The child shape for the parent shape.
                </returns>
      <param name="element">
                    The parent shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CreateManualRouteAction">
      <summary>
                    Creates the mouse action for manual link routing.
                </summary>
      <returns>
                    The mouse action for manual link routing.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CreateMetafile(System.Collections.ICollection)">
      <summary>
                    Creates a metafile for the specified shapes and their child shapes.
                </summary>
      <returns>
                    The metafile that contains the shapes.
                </returns>
      <param name="selectedShapesToDraw">
                    The shapes to add to the metafile.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CreateMetafile(System.Collections.ICollection,System.String)">
      <summary>
                    Creates a metafile for the specified shapes and their child shapes.
                </summary>
      <returns>
                    The metafile that contains the shapes.
                </returns>
      <param name="selectedShapesToDraw">
                    The shapes to add to the metafile.
                </param>
      <param name="fileName">
                    The name of the metafile.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DefaultContainerMargin">
      <summary>
                    Gets the margin between the diagram and its element shapes.
                </summary>
      <returns>
                    The margin between the diagram and its element shapes.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DefaultGridSize">
      <summary>
                    Gets the size of the grid for the diagram.
                </summary>
      <returns>
                    The size of the grid for the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DefaultSize">
      <summary>
                    Gets the size of the diagram.
                </summary>
      <returns>
                    The size of the diagram.
                </returns>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DiagramAdded">
      <summary>
                    Occurs when a diagram is added.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DiagramId">
      <summary>
                    Gets or sets the ID that is assigned to the diagram.
                </summary>
      <returns>
                    The ID that is assigned to the diagram.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DiagramIdDomainPropertyId">
      <summary>
                    Represents the property ID for the diagram.
                </summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DiagramRemoved">
      <summary>
                    Occurs when a diagram is removed.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.Disassociate(Microsoft.VisualStudio.Modeling.Diagrams.DiagramView)">
      <summary>
                    Removes the diagram from the specified diagram view.
                </summary>
      <param name="diagramView">
                    The diagram view.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.Dispose">
      <summary>
                    Releases all resources used by the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.Diagram" />. 
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.Dispose(System.Boolean)">
      <summary>
                    Releases the unmanaged resources used by the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.Diagram" /> and optionally releases the managed resources. 
                </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. 
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD,System.Collections.Generic.List{Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement},System.Boolean)">
      <summary>
                    Performs a hit test on the diagram.
                </summary>
      <returns>true if the shape was hit; otherwise, false.
                </returns>
      <param name="view">
                    The client view for the diagram. If the diagram does not have a client view, null.
                </param>
      <param name="point">
                    The top-left point in the diagram.
                </param>
      <param name="shapesHit">
                    The object to receive the list of hit shapes.
                </param>
      <param name="includeTolerance">true to include tolerance around the shape when the hit test determines whether the shape has been hit; otherwise, false. Tolerance increases the hit diameter around the shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo,System.Boolean)">
      <summary>
                    Performs a hit test on the diagram.
                </summary>
      <returns>true if the shape was hit; otherwise, false.
                </returns>
      <param name="point">
                    The top-left point in the diagram.
                </param>
      <param name="hitTestInfo">
                    The object that receives the results of the hit test.
                </param>
      <param name="includeTolerance">true to include tolerance around the shape when the hit test determines whether the shape has been hit; otherwise, false. Tolerance increases the hit diameter around the shape.
                </param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DoLineRoutingDomainPropertyId">
      <summary>
                    Represents the ID for the <see cref="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DoLineRoutingDomainPropertyId" /> property.
                </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DomainClassId">
      <summary>
                    Represents the ID for a domain class shape.
                </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DoResizeParentDomainPropertyId">
      <summary>
                    Represents the ID for the <see cref="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DoResizeParentDomainPropertyId" /> property.
                </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DoShapeAnchoringDomainPropertyId">
      <summary>
                    Represents the ID for the <see cref="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DoShapeAnchoringDomainPropertyId" /> property. 
                </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DoViewFixupDomainPropertyId">
      <summary>
                    Represents the ID for the <see cref="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DoViewFixupDomainPropertyId" /> property.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.DragDropPendingAction">
      <summary>
                    Gets the mouse action that is responsible for initiating the drag-and-drop action.
                </summary>
      <returns>
                    The mouse action that is responsible for initiating the drag-and-drop action.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ElementOperations">
      <summary>
                    Gets the object that performs selection operations.
                </summary>
      <returns>
                    The object that performs the selection operations.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.Finalize">
      <summary>
                    Allows the diagram to try to free resources and perform other cleanup operations before it is reclaimed by the garbage collector. Called by the garbage collector. 
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.FindShape(Microsoft.VisualStudio.Modeling.ModelElement)">
      <summary>
                    Finds the shape for the specified element on the diagram.
                </summary>
      <returns>
                    The shape for the specified element.
                </returns>
      <param name="element">
                    The element.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.FixUpDiagram(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <summary>
                    Ensures that the shape and its parent shapes are created and configured correctly.
                </summary>
      <param name="existingParent">
                    The parent shape that is linked either directly or indirectly to the specified shape in the hierarchy. 
                </param>
      <param name="newChild">
                    The child shape that is linked either directly or indirectly to the specified parent shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.FixUpDiagramSelection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Updates the selection in the diagram.
                </summary>
      <returns>
                    A list of diagram client views that have modified selections.
                </returns>
      <param name="newChildShape">
                    The child shape that was passed in from the <see cref="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.FixUpDiagram(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement)" /> method.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.FocusedDiagramView">
      <summary>
                    Gets the diagram view that has the focus.
                </summary>
      <returns>
                    The diagram view that has the focus; otherwise, null if no diagram view has the focus.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.GetCompliantGroupBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <summary>
                    Updates the collection of ghost shapes so that it complies with the source shape's group bounds rules.
                </summary>
      <param name="targetShape">
                    The parent shape, or null if its child shapes are not being assigned to it but just repositioned on the diagram. 
                </param>
      <param name="ghostShapes">
                    A collection of ghost shapes. 
                </param>
      <param name="proposedLocationDelta">
                    The delta for a ghost shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.GetPotentialMouseAction(System.Windows.Forms.MouseButtons,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <summary>
                    Gets the mouse action to initiate when the user clicks a point in the diagram.
                </summary>
      <returns>
                    The mouse action to initiate when the user clicks a point on the diagram.
                </returns>
      <param name="mouseButtons">
                    The mouse buttons that trigger the mouse action.
                </param>
      <param name="point">
                    The point in the diagram.
                </param>
      <param name="hitTestInfo">
                    The hit test information that corresponds to the mouse position.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.GetService(System.Type)">
      <summary>
                    Gets a service.
                </summary>
      <returns>
                    The service; if no service is found, null.
                </returns>
      <param name="serviceType">
                    The type of service to retrieve.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.GetSourceRolePlayerForLinkMappedByConnector(Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShape)">
      <summary>
                    Gets the source role for the link shape.
                </summary>
      <returns>
                    The source role for the link shape.
                </returns>
      <param name="connector">
                    The link shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.GetTargetRolePlayerForLinkMappedByConnector(Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShape)">
      <summary>
                    Gets the target role for the link shape.
                </summary>
      <returns>
                    The target role for the link shape.
                </returns>
      <param name="connector">
                    The link shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.GridColor">
      <summary>
                    Gets or sets the color of the grid.
                </summary>
      <returns>
                    The color of the grid.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.GridSize">
      <summary>
                    Gets or sets the size of the grid for the diagram.
                </summary>
      <returns>
                    The size of the grid for the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.GroupBoundsRules">
      <summary>
                    Gets or sets the bounds rules for a specific group of shapes on the diagram.
                </summary>
      <returns>
                    The bounds rules for a specific group of shapes on the diagram; otherwise, the default bounds rules for groups.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.HandleNewSwimLaneInsertion(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.DomainClassInfo,Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape,System.Boolean)">
      <summary>
                    Adds a swimlane to the diagram.
                </summary>
      <param name="view">
                    The client view for the diagram.
                </param>
      <param name="selectedDomainClass">
                    The domain class element to add to the diagram.
                </param>
      <param name="selectedSwimLane">
                    The swimlane that is assigned to the domain class.
                </param>
      <param name="insertAfter">true to insert the domain class element after the swimlane; false to insert the domain class element before the swimlane.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.HasAssociatedViews">
      <summary>
                    Gets the diagram and verifies whether it is associated with a diagram view.
                </summary>
      <returns>true if the diagram is associated with a diagram view; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.HasOutline">
      <summary>
                    Gets the diagram and verifies whether it has an outline.
                </summary>
      <returns>true if the diagram has an outline; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.HasShadow">
      <summary>
                    Gets the diagram and verifies whether it has a shadow.
                </summary>
      <returns>true if the diagram has a shadow; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.HasSwimlanes">
      <summary>
                    Gets the diagram and verifies whether it has swimlanes.
                </summary>
      <returns>true if the diagram has swimlanes; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.HitTest(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,System.Boolean)">
      <summary>
                    Gets the shapes to include in the hit test.
                </summary>
      <returns>
                    The shapes to include in the hit test.
                </returns>
      <param name="clipRectangle">
                    The diameter of the selection rectangle.
                </param>
      <param name="requireCompleteContainment">true to include a shape only if the whole shape is in the selection rectangle; false to include shapes that are partially in the selection rectangle. 
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.Invalidate">
      <summary>
                    Invalidates shapes in the diagram.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.InvalidateRectangle(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Invalidates the shapes that are in the selection rectangle.
                </summary>
      <param name="rectangle">
                    The selection rectangle.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.InvokeEditorAction">
      <summary>
                    Gets the mouse action that invokes a field editor when the user presses the mouse button.
                </summary>
      <returns>
                    The mouse action that invokes a field editor when the user presses the mouse button.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.IsCompleteView">
      <summary>
                    This property is now obsolete.
                </summary>
      <returns>
                    This property is now obsolete.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.IsCompleteViewDomainPropertyId">
      <summary>
                    Represents the ID for the <see cref="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.IsCompleteViewDomainPropertyId" /> property.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.IsConnectorMappedToLink(Microsoft.VisualStudio.Modeling.Diagrams.BinaryLinkShape)">
      <summary>
                    Verifies whether the link has a link shape on the diagram.
                </summary>
      <returns>true if the link has a link shape on the diagram; otherwise, false.
                </returns>
      <param name="connector">
                    The link shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.IsOrphaned(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Verifies whether a shape is linked to another shape in the diagram.
                </summary>
      <returns>true if the shape is not linked to another shape in the diagram; otherwise, false.
                </returns>
      <param name="shapeElement">
                    The shape to check.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.IsSelected(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Verifies whether a shape is selected in a diagram view.
                </summary>
      <returns>true if the shape is selected in a diagram view; otherwise, false.
                </returns>
      <param name="shape">
                    The shape to check.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.IsWatermarkNeeded">
      <summary>
                    Gets the diagram and verifies whether a watermark should appear for it.
                </summary>
      <returns>true if the watermark should appear for the diagram; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.LassoAction">
      <summary>
                    Gets the mouse action that initiates the lasso selection.
                </summary>
      <returns>
                    The mouse action that initiates the lasso selection.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.LassoSelect(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,System.Boolean)">
      <summary>
                    Gets the list of shapes that are in the selection rectangle.
                </summary>
      <returns>
                    The list of shapes that are in the selection rectangle.
                </returns>
      <param name="rectangle">
                    The selection rectangle.
                </param>
      <param name="requireCompleteContainment">true to include a shape only if the whole shape is in the selection rectangle; false to include a shape that is partially in the selection rectangle. 
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ManualRouteAction">
      <summary>
                    Gets the mouse action that initiates manual line routing.
                </summary>
      <returns>
                    The mouse action that initiates manual line routing.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.MinimumSize">
      <summary>
                    Gets the minimum height and width of the diagram.
                </summary>
      <returns>
                    The minimum height and width of the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.Name">
      <summary>
                    Gets or sets the name of the diagram.
                </summary>
      <returns>
                    The name of the diagram.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.NameDomainPropertyId">
      <summary>
                    Represents the ID for the <see cref="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.NameDomainPropertyId" /> property.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.NavigationRoot">
      <summary>
                    Gets the root shape for the diagram.
                </summary>
      <returns>
                    The root shape for the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.NeedsRenumber">
      <summary>
                    Gets the diagram and verifies whether the shapes in it must be renumbered.
                </summary>
      <returns>true if the shapes in the diagram must be renumbered; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.NestedShapesMargin">
      <summary>
                    Gets the margin between nested shapes in the diagram.
                </summary>
      <returns>
                    The margin between nested shapes in the diagram.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnAssociated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramAssociationEventArgs)">
      <summary>
                    Performs an action when the diagram has been associated with a diagram view.
                </summary>
      <param name="e">
                    The arguments to use when a diagram is associated with a diagram view. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramAssociationEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnBeforeReroute">
      <summary>
                    Performs an action when a link is about to be rerouted in the diagram.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnChildAssociatedPropertyChanged(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PropertyChangedEventArgs)">
      <summary>
                    Performs an action when a property that is associated with a child shape has changed.
                </summary>
      <param name="shape">
                    The child shape.
                </param>
      <param name="e">
                    The arguments to use when a property has changed. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.PropertyChangedEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnChildConfiguring(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Boolean)">
      <summary>
                    Performs an action when a child shape has been configured.
                </summary>
      <param name="child">
                    The child shape.
                </param>
      <param name="createdDuringViewFixup">true to indicate that the child shape was configured because the child shape was created; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnDisassociated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramAssociationEventArgs)">
      <summary>
                    Performs an action when the diagram is disassociated from a diagram view.
                </summary>
      <param name="e">
                    The arguments to use when a diagram is associated with a diagram view. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramAssociationEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnElementEventsEnded(Microsoft.VisualStudio.Modeling.ElementEventsEndedEventArgs)">
      <summary>
                    Raises an event after all other events for a transaction have been raised.
                </summary>
      <param name="e">
                    The arguments to use after all other events for a transaction have been raised. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.ElementEventsEndedEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnElementEventsEnding(Microsoft.VisualStudio.Modeling.ElementEventsEndedEventArgs)">
      <summary>
                    Raises an event after all other events for a transaction have been raised.
                </summary>
      <param name="e">
                    The arguments to use after all other events for a transaction have been raised. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.ElementEventsEndedEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>
                    Changes the pointer and performs a custom action when the pointer is dragged across the designer.
                </summary>
      <param name="e">
                    Any arguments to use when the pointer is dragged across the designer. For a list of arguments, see <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnGridPropertyChanged">
      <summary>
                    Performs an action when the grid properties have changed.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnInitialize">
      <summary>
                    Performs an action when the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.Diagram" /> class is initialized.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnKeyDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <summary>
                    Performs an action when the user presses a key while the diagram has the focus.
                </summary>
      <param name="e">
                    Event data. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnPaintShape(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <summary>
                    Lets derived classes perform an action when the diagram background and grid are painted.
                </summary>
      <param name="e">
                    Event data. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnTransactionBeginning(Microsoft.VisualStudio.Modeling.TransactionBeginningEventArgs)">
      <summary>
                    Lets derived classes perform an action when a transaction starts.
                </summary>
      <param name="e">
                    Event data. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.TransactionBeginningEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnTransactionCommitting(Microsoft.VisualStudio.Modeling.TransactionCommitEventArgs)">
      <summary>
                    Lets derived classes perform an action when a transaction is being committed.
                </summary>
      <param name="e">
                    Event data. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.TransactionCommitEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnTransactionRolledBack(Microsoft.VisualStudio.Modeling.TransactionRollbackEventArgs)">
      <summary>
                    Lets derived classes perform an action after a transaction is rolled back.
                </summary>
      <param name="e">
                    Event data. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.TransactionRollBackEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnTransactionRollingBack(Microsoft.VisualStudio.Modeling.TransactionRollbackEventArgs)">
      <summary>
                    Lets derived classes perform an action when a transaction is being rolled back.
                </summary>
      <param name="e">
                    Event data. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.TransactionRollBackEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnViewMouseEnter(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Lets derived classes perform an action when the mouse pointer enters the diagram client view.
                </summary>
      <param name="pointArgs">
                    Event data. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnViewMouseHover(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Lets derived classes perform an action when the mouse pointer is over the diagram client view. 
                </summary>
      <param name="pointArgs">
                    Event data. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs" />.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OnViewMouseLeave(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Lets derived classes perform an action when the mouse pointer leaves the diagram client view.
                </summary>
      <param name="pointArgs">
                    Event data. For a list of arguments, see <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs" />.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.OutlinePenId">
      <summary>
                    Gets the ID of the pen that draws the outline for the diagram.
                </summary>
      <returns>
                    The ID of the pen that draws the outline for the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.PanZoomAction">
      <summary>
                    Gets the mouse action that initiates zooming.
                </summary>
      <returns>
                    The mouse action that initiates zooming.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.PerformLineRoutingRule">
      <summary>
                    Determines how links between elements appear in the diagram.
                </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.PlaceUnplacedShapesDomainPropertyId">
      <summary>
                    Represents the ID for the <see cref="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.PlaceUnplacedShapesDomainPropertyId" /> property.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.PostDeserialization(System.Boolean)">
      <summary>
                    Adjusts the location of shapes on the diagram after the diagram has been deserialized.
                </summary>
      <param name="succeeded">true if the deserialization was successful; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.Print(System.Drawing.Graphics,System.Drawing.Rectangle,Microsoft.VisualStudio.Modeling.Diagrams.PointD,System.Single)">
      <summary>
                    Draws the diagram.
                </summary>
      <param name="graphics">
                    The graphics object to use to draw the diagram.
                </param>
      <param name="clipRectangle">
                    The rectangular area in which to draw the diagram.
                </param>
      <param name="sourceLocation">
                    The top-left point in the clip rectangle in which to drawn the diagram.
                </param>
      <param name="scale">
                    The size of the diagram. For example, this could be 100% (1.0f).
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.Renumber">
      <summary>
                    Renumbers the shapes in the diagram.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ReparentSwimlaneChild(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape,Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection,Microsoft.VisualStudio.Modeling.Diagrams.GhostShape,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="child"></param>
      <param name="newParent"></param>
      <param name="ghostShapes"></param>
      <param name="ghostShape"></param>
      <param name="proposedLocationDelta"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.RepositionShapes(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <summary>
                    Repositions the shapes in the diagram.
                </summary>
      <param name="topLevelItems">
                    The collection of top-level parent shapes to reposition. 
                </param>
      <param name="moveDelta">
                    The distance in which to move the shapes.
                </param>
      <param name="ghostShapes">
                    The collection of ghost shapes to reposition, or null. Ghost shapes represent the shapes at their original locations in the diagram. If this parameter is null, the ghost shapes are created.
                </param>
      <param name="hitDiagramItem">
                    The shape to which the mouse is pointing.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.RequiresWatermark">
      <summary>
                    Gets the diagram and verifies whether a watermark should appear for it.
                </summary>
      <returns>true if a watermark should appear on the diagram; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.Reroute">
      <summary>
                    Reroutes links between elements on the diagram.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ResizeAction">
      <summary>
                    Gets the mouse action that initiates the resizing of a shape.
                </summary>
      <returns>
                    The mouse action that initiates the resizing of a shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.RouteJumpType">
      <summary>
                    Gets or sets the jump style to use when a link shape crosses over another link shape on the diagram.
                </summary>
      <returns>
                    The jump style to use when a link shape crosses over another link shape on the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.RoutingStyle">
      <summary>
                    Gets or sets the way link shapes are styled on the diagram.
                </summary>
      <returns>
                    The style to use on link shapes in the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.SelectAction">
      <summary>
                    Gets the mouse action that initiates the selection of a shape.
                </summary>
      <returns>
                    The mouse action that initiates the selection of a shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.SelectionRules">
      <summary>
                    Gets the rules that determine which elements in the diagram can be selected in a diagram and whether the diagram itself can be selected.
                </summary>
      <returns>
                    The rules that determine which elements in the diagram can be selected and whether the diagram itself can be selected.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.SetAbsoluteBoundsValue(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Sets the absolute bounds for the diagram.
                </summary>
      <param name="newValue">
                    The rectangle that contains the size and position to use for the absolute bounds. 
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ShapeGeometry">
      <summary>
                    Gets the geometry of the diagram.
                </summary>
      <returns>
                    The geometry of the diagram.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ShouldAddShapeForElement(Microsoft.VisualStudio.Modeling.ModelElement)">
      <summary>
                    Verifies whether a shape can have a child shape assigned to it.
                </summary>
      <returns>true if the shape can have the child shape added to it; otherwise, false.
                </returns>
      <param name="element">
                    The shape to check.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ShouldExcludeFromInvalidationTracking(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Verifies whether specific shape types should be excluded from invalidation.
                </summary>
      <returns>true if the shape type should be excluded from invalidation; otherwise false.
                </returns>
      <param name="shape">
                    The shape to check.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ShouldReportException(System.Exception)">
      <summary>
                    Verifies whether an exception that is thrown from the base design surface should be reported.
                </summary>
      <returns>true if the exception should be reported; otherwise, false.
                </returns>
      <param name="ex">
                    The exception to check.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ShowGrid">
      <summary>
                    Gets the diagram and verifies whether the grid should appear for it or sets the visibility state of the diagram.
                </summary>
      <returns>true if the grid should appear for the diagram; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.SnapToGrid">
      <summary>
                    Gets the diagram and verifies whether its shapes can be snapped to the grid or sets the ability to snap shapes to the grid.
                </summary>
      <returns>true if shapes in the diagram can be snapped to the grid; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.SupportsPorts">
      <summary>
                    Gets the diagram and verifies whether it contains ports.
                </summary>
      <returns>true if the diagram contains ports; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.TargetToolboxItemFilterAttributes">
      <summary>
                    Gets the collection of filter attributes for the toolbox that is assigned to the diagram.
                </summary>
      <returns>
                    The collection of filter attributes.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.ToolboxAction">
      <summary>
                    Gets the mouse action that invokes a response when the user clicks the Toolbox.
                </summary>
      <returns>
                    The mouse action that invokes a response when the user clicks the Toolbox. 
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.UnhandledException(System.Exception)">
      <summary>
                    Verifies who should report an exception that is thrown from the base design surface.
                </summary>
      <returns>true if you want the base design surface to report the exception; false if you want .NET Framework to manage the exception.
                </returns>
      <param name="ex">
                    The exception to check.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.WatermarkText">
      <summary>
                    Gets the watermark text that is assigned to the diagram.
                </summary>
      <returns>
                    The watermark text that is assigned to the diagram.
                </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CreateBitmapPreference"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CreateBitmapPreference.FavorClarityOverSmallSize"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Diagram.CreateBitmapPreference.FavorSmallSizeOverClarity"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramAssociationEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramAssociationEventArgs.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramAssociationEventArgs.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramView)">
      <param name="view"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramAssociationEventArgs.DiagramView"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.CommentBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.CommentText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.CommentTitleBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.CommentTitleText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ConnectionLineDecorator"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ConnectionLineText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.DiagramBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.DiagramSubtitleBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.DiagramSubtitleText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.DiagramText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.DiagramTitleBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.DiagramTitleText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.NonResizablePrimarySelection"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.NonResizableSecondarySelection"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.PrimaryGrabHandles"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.SecondaryGrabHandles"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.Selection"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.Shadow"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeBackgroundSelected"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeBackgroundSelectedInactive"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeSubtitleBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeSubtitleText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeTextDisabled"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeTextSelected"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeTextSelectedDisabled"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeTextSelectedInactive"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeTextSelectedInactiveDisabled"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeTitleBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeTitleBackgroundSelected"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeTitleBackgroundSelectedInactive"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeTitleText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeTitleTextSelected"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.ShapeTitleTextSelectedInactive"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.SwimlaneHeaderBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramBrushes.Transparent"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ActiveMouseAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.CanTranslateToCommand(System.Windows.Forms.Keys)">
      <param name="keyData"></param>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ContextMenuRequested"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.CreateAccessibilityInstance"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.Cursor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.DeviceToWorld(System.Drawing.Point)">
      <param name="devicePoint"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.DeviceToWorld(System.Drawing.Rectangle)">
      <param name="deviceRectangle"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.DeviceToWorld(System.Drawing.Size)">
      <param name="deviceSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.DeviceToWorld(System.Drawing.Size,System.Single)">
      <param name="deviceSize"></param>
      <param name="zoomFactor"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.Diagram"></member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.DiagramAssociated"></member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.DiagramDisassociating"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.DisableBumpScrolling"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.Dispose(System.Boolean)">
      <param name="disposing"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.DpiX"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.DpiY"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.DropTargetFeedback"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnableBumpScrolling(System.Int32)">
      <param name="initialDelay"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnsureVisible(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="visibleRectangle"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnsureVisible(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnsureVisiblePreferences)">
      <param name="visibleRectangle"></param>
      <param name="preferences"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnsureVisible(System.Collections.Generic.ICollection{Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement})">
      <param name="shapeElementCollection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.GetNudgeHorizontalDelta(System.Double)">
      <param name="screenHorizontalDelta"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.GetNudgeVerticalDelta(System.Double)">
      <param name="screenVerticalDelta"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.GetPotentialMouseAction(System.Windows.Forms.MouseButtons,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="mouseButtons"></param>
      <param name="point"></param>
      <param name="hitTestInfo"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.HighlightedShapes"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.HorizontalScrollPosition"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.InvalidateRectangle(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="rectangle"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.InvokeDragDrop(System.Windows.Forms.DragEventArgs)">
      <param name="e"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.InvokeDragDropTarget"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.IsInputKey(System.Windows.Forms.Keys)">
      <param name="keyData"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ManuallyRouteSelection(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="linkShape"></param>
      <param name="segment"></param>
      <param name="routeDelta"></param>
      <param name="previousPoint"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.MaximumHorizontalScrollRange"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.MaximumVerticalScrollRange"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.MaximumZoom"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.MinimumHorizontalScrollRange"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.MinimumVerticalScrollRange"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.MinimumZoom"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.MouseHoverDelay"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.Nudge(Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="nudgeDelta"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.NudgeDown"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.NudgeLeft"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.NudgeRight"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.NudgeUp"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnClick(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnContextMenuRequested(System.Windows.Forms.MouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnDoubleClick(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <param name="drgevent"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnDragDropCancelled(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnDragDropCommon(System.Windows.Forms.DragEventArgs,System.Boolean,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="e"></param>
      <param name="isDropLocationUserSpecified"></param>
      <param name="hitShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <param name="drgevent"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnDragLeave(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <param name="drgevent"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnElementEventsEnded(Microsoft.VisualStudio.Modeling.ElementEventsEndedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnElementEventsEnding(Microsoft.VisualStudio.Modeling.ElementEventsEndedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <param name="gfbevent"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnGotFocus(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnLostFocus(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnMouseEnter(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnMouseLeave(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.OnResize(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.PreProcessMessage(System.Windows.Forms.Message@)">
      <param name="msg"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ResizeDown"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ResizeLeft"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ResizeRight"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ResizeSelection(Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="sideToResize"></param>
      <param name="resizeDelta"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ResizeUp"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ScrollDown"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ScrollHorizontally(System.Int32)">
      <param name="scrollDelta"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ScrollLeft"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ScrollPageSize"></member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ScrollPositionChanged"></member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ScrollRangeChanged"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ScrollRight"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ScrollTo(Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="point"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ScrollUnitsPerMouseWheel"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ScrollUp"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ScrollVertically(System.Int32)">
      <param name="scrollDelta"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.Selection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.SetZoomFactor(System.Single,Microsoft.VisualStudio.Modeling.Diagrams.PointD,System.Boolean)">
      <param name="newZoomFactor"></param>
      <param name="zoomCenterPoint"></param>
      <param name="moveZoomCenterToViewCenter"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ShadowBitmap"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ShowError(System.String)">
      <param name="message"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ShowToolTip"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.TakeFocusOnDragOver"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.TranslateToCommand(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <param name="keyArgs"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.VerticalScrollPosition"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ViewBounds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ViewLocation"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ViewSize"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.WndProc(System.Windows.Forms.Message@)">
      <param name="m"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.WorldToDevice(Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="worldPoint"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.WorldToDevice(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="worldRectangle"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.WorldToDevice(Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="worldSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.WorldToDevice(Microsoft.VisualStudio.Modeling.Diagrams.SizeD,System.Single)">
      <param name="worldSize"></param>
      <param name="zoomFactor"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ZoomAtViewCenter(System.Single)">
      <param name="newZoomFactor"></param>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ZoomChanged"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ZoomFactor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ZoomIn"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ZoomInAt(Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="zoomCenterPoint"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ZoomOut"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ZoomOutAt(Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="zoomCenterPoint"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ZoomToFit"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.ZoomToFit(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="viewRectangle"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnsureVisiblePreferences"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnsureVisiblePreferences.ScrollHorizontally"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnsureVisiblePreferences.ScrollVertically"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnsureVisiblePreferences.ScrollIntoViewCenter"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDeleteRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDeleteRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDeleteRule.ElementDeleted(Microsoft.VisualStudio.Modeling.ElementDeletedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.#ctor(System.Windows.Forms.DragEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="dragEventArgs"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.#ctor(System.Windows.Forms.DragEventArgs,System.Boolean,Microsoft.VisualStudio.Modeling.ElementGroupPrototype,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="dragEventArgs"></param>
      <param name="isDropLocationUserSpecified"></param>
      <param name="prototype"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.AllowedEffect"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.Alt"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.ComputeEffect(System.Windows.Forms.DragDropEffects)">
      <param name="possibleTargetEffects"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.Control"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.Data"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.Effect"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.IsDropLocationUserSpecified"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.KeyState"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.Prototype"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs.Shift"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs.DiagramClientView"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs.Handled"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants.AddClrElementRulePriority"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants.AddConnectionRulePriority"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants.AddOrphanedLinkForPresentationViewsSubjectLink"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants.AddPresentationViewsSubjectLinkForOrphanedLink"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants.AddShapeParentExistRulePriority"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants.AddShapeRulePriority"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants.AutoLayoutShapesRulePriority"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants.LineReroutingRulePriority"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants.LoopMax"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants.ResizeParentRulePriority"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFixupConstants.ShapeAnchoringRulePriority"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFonts"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFonts.CommentText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFonts.ConnectionLine"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFonts.ShapeSubtitle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFonts.ShapeText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramFonts.ShapeTitle"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo.Clear"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo.Clone"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo.DiagramClientView"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo.HitDiagramItem"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo.HitGrabHandle"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment)">
      <param name="shape"></param>
      <param name="segment"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment,Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint)">
      <param name="shape"></param>
      <param name="segment"></param>
      <param name="anchorPoint"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="shape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="shape"></param>
      <param name="field"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <param name="shape"></param>
      <param name="field"></param>
      <param name="subfield"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment,Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint)">
      <param name="shape"></param>
      <param name="field"></param>
      <param name="subfield"></param>
      <param name="segment"></param>
      <param name="anchorPoint"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.AbsoluteBoundingBox"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.AnchorPoint"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.CanFocus"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.CanSelect"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.Clone"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.Diagram"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.Field"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.GetAccessibleObject(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.GetHashCode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.IsDiagram"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.Parent"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.RepresentedElements"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.Segment"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.SetItem(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment)">
      <param name="shape"></param>
      <param name="segment"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.SetItem(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment,Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint)">
      <param name="shape"></param>
      <param name="segment"></param>
      <param name="anchorPoint"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.SetItem(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="shape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.SetItem(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="shape"></param>
      <param name="field"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.SetItem(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <param name="shape"></param>
      <param name="field"></param>
      <param name="subfield"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.Shape"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem.SubField"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection.Add(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection.Add(System.Collections.ICollection)"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection.Contains(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection.CopyTo(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem[],System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection.GetEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection.IndexOf(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection.Insert(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection.Item(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection.Remove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection.Remove(System.Collections.ICollection)"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEnumerator.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection)">
      <param name="diagramItemCollection"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEnumerator.Current"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEnumerator.MoveNext"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEnumerator.Reset"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEnumerator.System#Collections#IEnumerator#Current"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventArgs.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="diagramItem"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventArgs.DiagramItem"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs.#ctor(System.Windows.Forms.KeyEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="keyEventArgs"></param>
      <param name="diagramClientView"></param>
      <param name="targetItem"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs.Alt"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs.Control"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs.KeyCode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs.KeyData"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs.KeyValue"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs.Shift"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs.TargetItem"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs.#ctor(System.Windows.Forms.KeyPressEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="keyPressEventArgs"></param>
      <param name="diagramClientView"></param>
      <param name="targetItem"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs.Handled"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs.KeyChar"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs.TargetItem"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs.#ctor(System.Windows.Forms.MouseEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="mouseEventArgs"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs.Button"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs.Clicks"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs.Delta"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.Boolean)">
      <param name="graphics"></param>
      <param name="clipRectangle"></param>
      <param name="diagramClientView"></param>
      <param name="paintChildShapes"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs.ClipRectangle"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs.DeviceToWorld(System.Drawing.Size)">
      <param name="deviceSize"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs.Graphics"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs.Handled"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs.IsPrinting"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs.PaintChildShapes"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs.View"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.ConnectionLine"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.ConnectionLineDecorator"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.ConnectionLineGhost"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.ConnectionLineHighlight"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.ConnectionManualRouteOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.DiagramOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.EmphasisOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.FocusIndicator"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.FocusIndicatorBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.GhostShapeOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.GridLines"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.Lasso"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.PrimaryGrabHandles"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.SecondaryGrabHandles"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.SelectionBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.SelectionNonPrimaryOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.SelectionPrimaryOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.ShapeHighlightOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.ShapeOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.ShapeResizeOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.ShapeSubtitleOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.ShapeTitleOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.SwimlaneSeparator"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPens.ZoomLasso"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="pointArgs"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs.#ctor(System.Int32,System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.PointRelativeTo,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="x"></param>
      <param name="y"></param>
      <param name="pointRelativeTo"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs.DiagramHitTestInfo"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs.HitDiagramItem"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs.MousePosition"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSelectionRules"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSelectionRules.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSelectionRules.GetCompliantSelection(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="currentSelection"></param>
      <param name="proposedItemsToAdd"></param>
      <param name="proposedItemsToRemove"></param>
      <param name="primaryItem"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSpy"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSpy.#ctor(System.String)">
      <param name="methodName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSpy.Dispose">
      <summary>
                    Releases all resources used by the current instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSpy" /> class.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSpy.Dispose(System.Boolean)">
      <param name="disposing"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSpy.Enabled"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSpy.Finalize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramSpy.ShowBraces"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramTypeDescriptor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor,Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="parent"></param>
      <param name="presentationElement"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramTypeDescriptor.GetComponentName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.ActiveMouseAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.CreateAccessibilityInstance"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.Diagram"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.DiagramClientView"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.HasWatermark"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.NudgeDown"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.NudgeLeft"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.NudgeRight"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.NudgeUp"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.OnHandleDestroyed(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.OnSizeChanged(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.OnWatermarkCreated"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.ScrollDown"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.ScrollLeft"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.ScrollRight"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.ScrollUp"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.SelectedToolboxItemSupportsFilterString(System.String)">
      <param name="filter"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.Selection"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.Site"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.Toolbox"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.Watermark"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.WndProc(System.Windows.Forms.Message@)">
      <param name="m"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.ZoomAtViewCenter(System.Single)">
      <param name="newZoomFactor"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.ZoomFactor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.ZoomIn"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.ZoomOut"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramView.ZoomToFit"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramViewAccessibleObject"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramViewAccessibleObject.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramView)">
      <param name="diagramView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramViewAccessibleObject.Bounds"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramViewAccessibleObject.GetChild(System.Int32)">
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramViewAccessibleObject.GetChildCount"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramViewAccessibleObject.Name"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramViewAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <param name="navdir"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramViewAccessibleObject.Parent"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramViewAccessibleObject.Role"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramViewAccessibleObject.State"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWatermark"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWatermark.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWatermark.Diagram"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWatermark.Dispose(System.Boolean)">
      <param name="disposing"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWatermark.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWatermark.WndProc(System.Windows.Forms.Message@)">
      <param name="m"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectAcceleratorChange"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectCreate"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectDefaultActionChange"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectDescriptionChange"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectDestroy"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectFocus"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectHelpChange"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectHide"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectLocationChange"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectNameChange"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectParentChange"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectReorder"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectSelection"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectSelectionAdd"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectSelectionRemove"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectSelectionWithin"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectShow"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectStateChange"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.EventObjectValueChange"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.Notify(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="accessibilityEvent"></param>
      <param name="diagramItem"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramWinEvents.NotifyForAllViews(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="accessibilityEvent"></param>
      <param name="diagramItem"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DisplayImageGetter"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DisplayStringGetter"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DomainPresentationNavigator"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DragCanceledState"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragCanceledState.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragCanceledState.Next(Microsoft.VisualStudio.Modeling.Diagrams.MouseAction)">
      <param name="mouseAction"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DragCompletedState"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragCompletedState.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragCompletedState.Next(Microsoft.VisualStudio.Modeling.Diagrams.MouseAction)">
      <param name="mouseAction"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DragDropPendingAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragDropPendingAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragDropPendingAction.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="currentCursor"></param>
      <param name="diagramClientView"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragDropPendingAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DraggingState"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DraggingState.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DraggingState.Next(Microsoft.VisualStudio.Modeling.Diagrams.MouseAction)">
      <param name="mouseAction"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DragPendingState"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragPendingState.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragPendingState.Next(Microsoft.VisualStudio.Modeling.Diagrams.MouseAction)">
      <param name="mouseAction"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetDiagramId(Microsoft.VisualStudio.Modeling.ElementGroup)">
      <param name="elementGroup"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetDiagramId(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetGhostShapes(Microsoft.VisualStudio.Modeling.ElementGroup)">
      <param name="elementGroup"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetGhostShapes(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetInitialBoundingBox(Microsoft.VisualStudio.Modeling.ElementGroup)">
      <param name="elementGroup"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetInitialBoundingBox(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetInitialDragLocation(Microsoft.VisualStudio.Modeling.ElementGroup)">
      <param name="elementGroup"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetInitialDragLocation(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetInitialPrimaryShapeBounds(Microsoft.VisualStudio.Modeling.ElementGroup)">
      <param name="elementGroup"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetInitialPrimaryShapeBounds(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetInitialPrimaryShapeId(Microsoft.VisualStudio.Modeling.ElementGroup)">
      <param name="elementGroup"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetInitialPrimaryShapeId(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetProcessId(Microsoft.VisualStudio.Modeling.ElementGroup)">
      <param name="elementGroup"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetProcessId(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetStoreId(Microsoft.VisualStudio.Modeling.ElementGroup)">
      <param name="elementGroup"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.GetStoreId(Microsoft.VisualStudio.Modeling.ElementGroupPrototype)">
      <param name="elementGroupPrototype"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DragSourceContext.Set(Microsoft.VisualStudio.Modeling.ElementGroupPrototype,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection)">
      <param name="elementGroupPrototype"></param>
      <param name="initialDragLocation"></param>
      <param name="ghostShapes"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetContext"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetContext.GetDropLocation(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetContext.GetGhostShapes(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetContext.GetSourceId(Microsoft.VisualStudio.Modeling.Transaction,System.Guid)">
      <param name="transaction"></param>
      <param name="targetShapeElementId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetContext.GetTargetBoundingBox(Microsoft.VisualStudio.Modeling.Transaction,System.Guid)">
      <param name="transaction"></param>
      <param name="targetShapeElementId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetContext.GetTargetDiagramId(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetContext.HasDropTargetContext(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetContext.Remove(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetContext.Set(Microsoft.VisualStudio.Modeling.Transaction,System.Guid,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection)">
      <param name="transaction"></param>
      <param name="targetDiagramId"></param>
      <param name="dropLocation"></param>
      <param name="ghostShapes"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetFeedback"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetFeedback.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="activeView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetFeedback.BoundingBox"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetFeedback.Draw(System.Drawing.Graphics,Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="graphics"></param>
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetFeedback.Erase"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetFeedback.HasActiveFeedback"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.DropTargetFeedback.UpdateFeedback(Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection)">
      <param name="ghostShapes"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint)"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.GraphObject.VGPointType)"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint.#ctor(System.Double,System.Double,Microsoft.VisualStudio.Modeling.Diagrams.GraphObject.VGPointType)"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint.Flag"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint.Point"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.#ctor(System.Collections.ICollection)">
      <param name="collection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.#ctor(System.Int32)">
      <param name="count"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.Add(Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint)">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.Contains(Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint)">
      <param name="item"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.CopyTo(Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint[])">
      <param name="points"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.CopyTo(Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint[],System.Int32)">
      <param name="points"></param>
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.CopyTo(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint[],System.Int32,System.Int32)">
      <param name="index"></param>
      <param name="points"></param>
      <param name="arrayIndex"></param>
      <param name="count"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.IndexOf(Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint)">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.Insert(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint)">
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.IsReadOnly"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.Item(System.Int32)">
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.ReadOnly(Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection)">
      <param name="original"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection.Remove(Microsoft.VisualStudio.Modeling.Diagrams.EdgePoint)">
      <param name="value"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollectionConverter"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollectionConverter.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <param name="context"></param>
      <param name="sourceType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <param name="context"></param>
      <param name="destinationType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <param name="destinationType"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointConverter"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointConverter.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <param name="context"></param>
      <param name="sourceType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <param name="context"></param>
      <param name="destinationType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EdgePointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <param name="destinationType"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.EditValueEndedEventHandler">
      <summary>
                    Handles processing when editing has ended, usually by committing or discarding the changes.
                </summary>
      <param name="sender">
                    The editor that has ended editing.
                </param>
      <param name="e">
                    A <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs" /> containing event data.
                </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="store"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.ClassStyleSet"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.CreateNewListItem(Microsoft.VisualStudio.Modeling.DomainClassInfo,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="domainClassInfo"></param>
      <param name="parent"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.DefaultCreationDomainClass"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.DisplayPropertyId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo,System.Boolean)">
      <param name="point"></param>
      <param name="hitTestInfo"></param>
      <param name="includeTolerance"></param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.DomainClassId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.GetItemCount(Microsoft.VisualStudio.Modeling.Diagrams.ListField)">
      <param name="listField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.GetItemDrawInfo(Microsoft.VisualStudio.Modeling.Diagrams.ListField,System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo)">
      <param name="listField"></param>
      <param name="row"></param>
      <param name="itemDrawInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.GetSubFieldAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <param name="field"></param>
      <param name="subfield"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.GetSubFieldAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <param name="field"></param>
      <param name="subfield"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.GetSubFieldRepresentedElements(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <param name="field"></param>
      <param name="subfield"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.GetSubFieldRepresentedProperty(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <param name="field"></param>
      <param name="subfield"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.GetSubFieldRepresentedPropertyElements(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <param name="field"></param>
      <param name="subfield"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.GetToolTipText(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="item"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.HandleNewListItemInsertion(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.DomainClassInfo)">
      <param name="view"></param>
      <param name="selectedDomainClassInfo"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.HasItemToolTips"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.HasToolTip"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.ItemAccessibleDescriptionGetter"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.ItemAccessibleNameGetter"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.ItemDisplayImageGetter"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.ItemDisplayNameGetter"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.Items"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.OnKeyUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <param name="e"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.PropertyElementGetter"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.SetMappedPropertyDefault(Microsoft.VisualStudio.Modeling.DomainPropertyInfo)">
      <param name="propertyInfo"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.ShapeFields"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartment.UpdateSize"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentDescription"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentDescription.#ctor(System.String,System.String,System.Drawing.Color,System.Boolean,System.Drawing.Color,System.Boolean,Microsoft.VisualStudio.Modeling.Diagrams.FontSettings,Microsoft.VisualStudio.Modeling.Diagrams.FontSettings,System.Boolean)">
      <param name="name"></param>
      <param name="title"></param>
      <param name="titleFill"></param>
      <param name="allowCustomTitleFillColor"></param>
      <param name="compartmentFill"></param>
      <param name="allowCustomCompartmentFillColor"></param>
      <param name="titleFontSettings"></param>
      <param name="itemFontSettings"></param>
      <param name="isDefaultCollapsed"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentDescription.CreateCompartment(Microsoft.VisualStudio.Modeling.Store)">
      <param name="store"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentMapping"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentMapping.#ctor(System.String,System.Guid,Microsoft.VisualStudio.Modeling.Diagrams.ElementListGetter,Microsoft.VisualStudio.Modeling.Diagrams.DisplayStringGetter,Microsoft.VisualStudio.Modeling.Diagrams.DisplayImageGetter)">
      <param name="compartmentId"></param>
      <param name="domainClassId"></param>
      <param name="elementListGetter"></param>
      <param name="stringGetter"></param>
      <param name="imageGetter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentMapping.#ctor(System.String,System.Guid,System.Guid,Microsoft.VisualStudio.Modeling.Diagrams.ElementListGetter,Microsoft.VisualStudio.Modeling.Diagrams.PropertyElementGetter,Microsoft.VisualStudio.Modeling.Diagrams.DisplayStringGetter,Microsoft.VisualStudio.Modeling.Diagrams.DisplayImageGetter)">
      <param name="compartmentId"></param>
      <param name="propertyId"></param>
      <param name="domainClassId"></param>
      <param name="elementListGetter"></param>
      <param name="propertyElementGetter"></param>
      <param name="stringGetter"></param>
      <param name="imageGetter"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentMapping.DefaultDomainClassId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentMapping.ElementListGetter"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentMapping.ImageGetter"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentMapping.InitializeCompartment(Microsoft.VisualStudio.Modeling.Diagrams.Compartment)">
      <param name="compartment"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentMapping.PropertyElementGetter"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentMapping.PropertyId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentMapping.StringGetter"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ElementListCompartmentSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ElementListGetter">
      <summary>
                    Returns a list given a model element. Used for DomainPath traversal methods.
                </summary>
      <param name="startElement">
                    The model element from which to start.
                </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.EllipseShapeGeometry"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EllipseShapeGeometry.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EllipseShapeGeometry.DoFoldToShape(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="geometryHost"></param>
      <param name="potentialPoint"></param>
      <param name="vectorEndpoint"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EllipseShapeGeometry.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo,System.Boolean)">
      <param name="geometryHost"></param>
      <param name="hitPoint"></param>
      <param name="hitTestInfo"></param>
      <param name="includeTolerance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EllipseShapeGeometry.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="boundingBox"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.EmptySelection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EmptySelection.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.EmptySelection.CoercedSelection"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.EmptySelection.Instance"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.EmptySelection.IsApplicable(System.Collections.ICollection)">
      <param name="actualSelection"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ExpandCollapseDecorator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ExpandCollapseDecorator.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition)">
      <param name="store"></param>
      <param name="field"></param>
      <param name="position"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ExpandCollapseDecorator.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="store"></param>
      <param name="field"></param>
      <param name="position"></param>
      <param name="offset"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ExpandCollapseDecorator.RepositionHostShape(Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape)">
      <param name="host"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="shapeElement"></param>
      <param name="shapeField"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.Bounds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.DefaultAction"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.Description"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.DoDefaultAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.GetChild(System.Int32)">
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.GetChildCount"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.GetHelpTopic(System.String@)">
      <param name="fileName"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.Help"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.KeyboardShortcut"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.Name"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <param name="navdir"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.Parent"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.Role"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
      <param name="flags"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.State"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FieldAccessibleObject.Value"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.FontDescriptor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FontDescriptor.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.FontStyleSetInfo)">
      <param name="fontStyleSetInfo"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontDescriptor.Font"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontDescriptor.FontHeight"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontDescriptor.FontSize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontDescriptor.FontStyleSetInfo"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.Bold"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.FontSettingsFlags"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.FontStyleSetInfo"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.ImmutableName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.ImmutableSize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.ImmutableStyle"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.IsOverridden(Microsoft.VisualStudio.Modeling.Diagrams.FontSettingsFlags)">
      <param name="fontSettings"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.Italic"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.Name"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.Regular"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.Size"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.Strikeout"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.Style"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontSettings.Underline"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.FontSettingsFlags"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.FontSettingsFlags.Name"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.FontSettingsFlags.Size"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.FontSettingsFlags.Style"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.FontStyleSetInfo"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FontStyleSetInfo.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FontStyleSetInfo.Clone"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FontStyleSetInfo.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FontStyleSetInfo.Equals(System.Object,System.Object)">
      <param name="objA"></param>
      <param name="objB"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.FontStyleSetInfo.GetHashCode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontStyleSetInfo.Name"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontStyleSetInfo.Size"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontStyleSetInfo.Style"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.FontStyleSetInfo.Units"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GeneralDiagramSelectionRules"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GeneralDiagramSelectionRules.GetCompliantSelection(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="currentSelection"></param>
      <param name="proposedItemsToAdd"></param>
      <param name="proposedItemsToRemove"></param>
      <param name="primaryItem"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GeneralSelection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GeneralSelection.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GeneralSelection.IdentifyCommandsToBeFilteredOutForMultipleSelection(Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection)">
      <param name="invalidCommands"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GeneralSelection.IsApplicable(System.Collections.ICollection)">
      <param name="actualSelection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GeneralSelection.IsCommandToBeFilteredOutForMultipleSelection(System.ComponentModel.Design.CommandID)">
      <param name="command"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GenericCoreConnectAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericCoreConnectAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram,System.Boolean)">
      <param name="diagram"></param>
      <param name="permitClick"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericCoreConnectAction.GetConnectionTypes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="sourceShapeElement"></param>
      <param name="targetShapeElement"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GenericCoreConnectionType"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericCoreConnectionType.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericCoreConnectionType.CanCreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.String@)">
      <param name="sourceShapeElement"></param>
      <param name="targetShapeElement"></param>
      <param name="connectionWarning"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericCoreConnectionType.CreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs)">
      <param name="sourceShapeElement"></param>
      <param name="targetShapeElement"></param>
      <param name="paintFeedbackArgs"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericCoreConnectionType.Instance(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericCoreConnectionType.IsValidSourceAndTarget(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="sourceShapeElement"></param>
      <param name="targetShapeElement"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShape"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="store"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShape.ClassStyleSet"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShape.DomainClassId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShape.Name"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShape.NameDomainPropertyId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShape.ShapeFields"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GenericLinkShapeSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GeometryHelpers"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GeometryHelpers.RectangleDFrom2Pts(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="pt1"></param>
      <param name="pt2"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GhostShape"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GhostShape.#ctor(System.Guid,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,System.Guid,System.Double)">
      <param name="sourceId"></param>
      <param name="sourceAbsoluteBoundingBox"></param>
      <param name="sourceParentId"></param>
      <param name="sourceGridSize"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShape.AbsoluteBoundingBox"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShape.SourceAbsoluteBoundingBox"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShape.SourceGridSize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShape.SourceId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShape.SourceParentId"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.#ctor(System.Guid,System.Guid)">
      <param name="sourceStoreId"></param>
      <param name="sourceDiagramId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <param name="info"></param>
      <param name="context"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.AbsoluteBoundingBox"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.Add(Microsoft.VisualStudio.Modeling.Diagrams.GhostShape)">
      <param name="ghostShape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.AreSiblings"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.CopyTo(Microsoft.VisualStudio.Modeling.Diagrams.GhostShape[],System.Int32)">
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.CopyTo(System.Array,System.Int32)">
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.Count"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.Find(System.Guid)">
      <param name="sourceId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.GetEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <param name="info"></param>
      <param name="context"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.GridSize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.IsSynchronized"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.LocationDelta"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.Offset(Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="delta"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.ParentIds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.PrimaryGhostShape"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.SourceDiagramId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.SourceProcessId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.SourceStoreId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection.SyncRoot"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.Cursor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.GrabHandleCornerSize"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.InflateRectangle(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="shape"></param>
      <param name="side"></param>
      <param name="pt"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.InflateRectangle(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="shape"></param>
      <param name="pt"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.SelectGrabHandle(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="pt"></param>
      <param name="rectangle"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.Side"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide.Invalid"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide.Top"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide.TopRight"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide.Right"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide.BottomRight"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide.Bottom"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide.BottomLeft"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide.Left"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.ShapeSide.TopLeft"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.VerticalSection"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.VerticalSection.Top"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.VerticalSection.Center"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle.VerticalSection.Bottom"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GroupBoundsRules"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GroupBoundsRules.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GroupBoundsRules.GetCompliantGroupBounds(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="store"></param>
      <param name="targetShape"></param>
      <param name="ghostShapes"></param>
      <param name="proposedLocationDelta"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.GroupSnapToGridRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.GroupSnapToGridRule.GetCompliantGroupBounds(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="store"></param>
      <param name="targetShape"></param>
      <param name="ghostShapes"></param>
      <param name="proposedLocationDelta"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.GroupSnapToGridRule.Instance"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.HighlightedShapesCollection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.HighlightedShapesCollection.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.HighlightedShapesCollection.Add(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="diagramItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.HighlightedShapesCollection.Add(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection)">
      <param name="diagramItems"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.HighlightedShapesCollection.Clear"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.HighlightedShapesCollection.GetDiagramItemsContainingShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="shape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.HighlightedShapesCollection.Remove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="diagramItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.HighlightedShapesCollection.Remove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection)">
      <param name="diagramItems"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.HighlightedShapesCollection.Set(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="diagramItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.HighlightedShapesCollection.Set(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection)">
      <param name="diagramItems"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.HoveringState"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.HoveringState.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.HoveringState.Next(Microsoft.VisualStudio.Modeling.Diagrams.MouseAction)">
      <param name="mouseAction"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.IBinaryLinkGeometryData"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IBinaryLinkGeometryData.GeometryCanManuallyRoute"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IBinaryLinkGeometryData.GeometryDecoratorFrom"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IBinaryLinkGeometryData.GeometryDecoratorTo"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IBinaryLinkGeometryData.GeometryEdgePoints"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IBinaryLinkGeometryData.GeometryEdgePointsNoJumps"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.ExcludeGeometryFromClipRegion(System.Drawing.Graphics,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.GraphicsPath)">
      <param name="graphics"></param>
      <param name="matrix"></param>
      <param name="perimeter"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.GeometryBackgroundBrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.GeometryBoundingBox"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.GeometryHasFilledBackground"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.GeometryHasOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.GeometryHasShadow"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.GeometryOutlinePenId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.GeometryStyleSet"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.TranslateGeometryToAbsoluteBounds(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="relativeBounds"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.TranslateGeometryToRelativeBounds(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="absoluteBounds"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.UpdateGeometryLuminosity(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.Drawing.Brush)">
      <param name="view"></param>
      <param name="brush"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost.UpdateGeometryLuminosity(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.Drawing.Pen)">
      <param name="view"></param>
      <param name="pen"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.IListFieldContainer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.IListFieldContainer.GetItemCount(Microsoft.VisualStudio.Modeling.Diagrams.ListField)">
      <param name="listField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.IListFieldContainer.GetItemDrawInfo(Microsoft.VisualStudio.Modeling.Diagrams.ListField,System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo)">
      <param name="listField"></param>
      <param name="row"></param>
      <param name="itemDrawInfo"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.IListFieldContainer.SnakingInfo"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ImageField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageField.#ctor(System.String)">
      <param name="fieldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageField.#ctor(System.String,System.Drawing.Image)">
      <param name="fieldName"></param>
      <param name="image"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageField.DefaultImage"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageField.DefaultUnscaled"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageField.DoPaint(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="e"></param>
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageField.GetAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageField.GetAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageField.GetAccessibleRole(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageField.GetDisplayImage(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageField.GetMinimumSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageField.GetUnscaled(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ImageHelper"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageHelper.GetImage(System.Byte[])">
      <param name="imageData"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageHelper.GetImage(System.Drawing.Image)">
      <param name="image"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageHelper.GetImage(System.Object)">
      <param name="unknownTypeOfImage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageHelper.GetImage(System.Type,System.String)">
      <param name="type"></param>
      <param name="resourceName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageHelper.GetImageSize(System.Drawing.Image)">
      <param name="image"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape">
      <summary>
                    Represents an image shape in the Domain-Specific Language Designer.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape" /> class. 
                </summary>
      <param name="partition">
                    The partition for the image shape.
                </param>
      <param name="propertyAssignments">
                    The list of domain property ID/value pairs for the image shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape.DefaultSize">
      <summary>
                    Gets the default size of the image shape.
                </summary>
      <returns>
                    The default size of the image shape.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape.DomainClassId">
      <summary>
                    Represents the ID that is assigned to the shape element.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape.HasBackgroundGradient">
      <summary>
                    Gets the image shape and verifies whether it has a background gradient.
                </summary>
      <returns>true if the shape has a background gradient; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape.HasShadow">
      <summary>
                    Gets the image shape and verifies whether it has a shadow.
                </summary>
      <returns>true if the image shape has a shadow; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape.Image">
      <summary>
                    Gets the image to display for the image shape.
                </summary>
      <returns>
                    The image.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
      <summary>
                    Initializes the resources that control the appearance of the image shape.
                </summary>
      <param name="classStyleSet">
                    The style set for the image shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape.OnPaintSelection(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <summary>
                    Initializes the image shape.
                </summary>
      <param name="e">
                    The paint arguments that contain information about how you want the image shape to be painted. For more information, see <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs" />.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape.ResizableSides">
      <summary>
                    Gets the sides of the image shape that can be resized.
                </summary>
      <returns>
                    The sides of the image shape that can be resized.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageShape.ShapeGeometry">
      <summary>
                    Gets the geometry for the image shape.
                </summary>
      <returns>
                    The geometry for the image shape.
                </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeGeometry"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeGeometry.#ctor(System.Drawing.Image)">
      <param name="image"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeGeometry.#ctor(System.String)">
      <param name="imageFileName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeGeometry.DoPaintGeometry(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <param name="e"></param>
      <param name="geometryHost"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeGeometry.Image"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ImageShapeSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.InactiveState"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InactiveState.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InactiveState.Next(Microsoft.VisualStudio.Modeling.Diagrams.MouseAction)">
      <param name="mouseAction"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.INodeGeometryData"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.INodeGeometryData.GeometryCanResizeBottom"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.INodeGeometryData.GeometryCanResizeLeft"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.INodeGeometryData.GeometryCanResizeRight"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.INodeGeometryData.GeometryCanResizeTop"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor"></member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.BeginEdit"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.CanEditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="field"></param>
      <param name="subfield"></param>
      <param name="view"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.CommitOnEscape"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.CommitPendingEdit"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.Dispose">
      <summary>
                    Releases all resources used by the current instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor" /> class.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.EditorControl"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.EditorFont"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="field"></param>
      <param name="subfield"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="parentShape"></param>
      <param name="field"></param>
      <param name="subfield"></param>
      <param name="view"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.String)">
      <param name="parentShape"></param>
      <param name="field"></param>
      <param name="subfield"></param>
      <param name="view"></param>
      <param name="replacementText"></param>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.EndEdit"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.Field"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.HorizontalAlignment"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.Instance"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.InUse"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.MultipleLineEditingEnabled"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.SetFont(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="familyName"></param>
      <param name="emSize"></param>
      <param name="style"></param>
      <param name="unit"></param>
      <param name="view"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.Shape"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.SubField"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.InPlaceTextEditor.WordWrap"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.InvisibleCollapseFlags"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.InvisibleCollapseFlags.None"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.InvisibleCollapseFlags.HorizontallyToLeft"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.InvisibleCollapseFlags.HorizontallyToRight"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.InvisibleCollapseFlags.VerticallyToTop"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.InvisibleCollapseFlags.VerticallyToBottom"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.InvisibleCollapseFlags.HorizontallyToCenter"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.InvisibleCollapseFlags.VerticallyToCenter"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.InvokeEditorAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InvokeEditorAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InvokeEditorAction.Dispose(System.Boolean)">
      <param name="disposing"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InvokeEditorAction.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="currentCursor"></param>
      <param name="diagramClientView"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InvokeEditorAction.OnClicked(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InvokeEditorAction.OnDoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InvokeEditorAction.OnDragCompleted(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InvokeEditorAction.OnMouseActionDeactivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.InvokeEditorAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.IShapeIterator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.IShapeIterator.OnShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="shape"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo.AlternateFont"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo.Clear"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo.Disabled"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo.Image"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo.ImageMargin"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo.Indent"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo.StringFormat"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo.Text"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.KeepGroupWithinDiagramRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.KeepGroupWithinDiagramRule.GetCompliantGroupBounds(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="store"></param>
      <param name="targetShape"></param>
      <param name="ghostShapes"></param>
      <param name="proposedLocationDelta"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.KeepGroupWithinDiagramRule.Instance"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.KeepGroupWithinParentRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.KeepGroupWithinParentRule.GetCompliantGroupBounds(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="store"></param>
      <param name="targetShape"></param>
      <param name="ghostShapes"></param>
      <param name="proposedLocationDelta"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.KeepGroupWithinParentRule.Instance"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.KeepInParentRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.KeepInParentRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.KeepInParentRule.GetCompliantBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="shape"></param>
      <param name="proposedBounds"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.KeepInParentRule.GetMargin(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="shape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.KeepInParentRule.Instance"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LabelAlignment"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LabelAlignment.Left"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LabelAlignment.Right"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LabelPlacedFlag"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LabelPlacedFlag.Auto"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LabelPlacedFlag.Placed"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LabelPlacedFlag.Sized"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LabelPlacement"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LabelPlacement.To"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LabelPlacement.From"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape">
      <summary>
                    Represents a label shape in the Domain-Specific Language Designer.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape" /> class. 
                </summary>
      <param name="partition">
                    The partition for the label shape.
                </param>
      <param name="propertyAssignments">
                    The list of domain property ID/value pairs for the label shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape" /> class. 
                </summary>
      <param name="store">
                    The in-memory store for the label shape.
                </param>
      <param name="propertyAssignments">
                    The list of domain property ID/value pairs for the label shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.AccessibleName">
      <summary>
                    Gets the name of the label shape.
                </summary>
      <returns>
                    The name of the label shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.AutoSizeLabel">
      <summary>
                    Resizes the label shape automatically.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.AutoSizeLabel(System.String)">
      <summary>
                    Resizes the label shape automatically.
                </summary>
      <param name="labelText">
                    The text for the label.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.CanFocus">
      <summary>
                    Gets the child label shape and verifies whether it can receive the focus.
                </summary>
      <returns>true if the child label shape can receive the focus; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.ChooseRelationship(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the type of relationship between the child label shape and its parent label shape.
                </summary>
      <returns>
                    The type of relationship to create. 
                </returns>
      <param name="childShape">
                    The child label shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.ClassStyleSet">
      <summary>
                    Gets the class style set for the label shape.
                </summary>
      <returns>
                    The class style set.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.ClipWhenDrawingFields">
      <summary>
                    Gets the parent label shape and verifies whether the clipping region should be set to the bounding box for the parent label shape when its child shape fields are being drawn.
                </summary>
      <returns>true if the clipping region should be set to the bounding box for the parent label shape when its child shape fields are being drawn; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.ConstrainLabelSize(Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <summary>
                    Limits the maximum size of the label shape.
                </summary>
      <returns>
                    The label shape size. If the proposed size is larger than the maximum size, the maximum size is returned.
                </returns>
      <param name="proposedSize">
                    The proposed size of the label shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.CreateDefaultStringFormat">
      <summary>
                    Creates the format to use for the label shape text.
                </summary>
      <returns>
                    The format to use for the label shape text.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.CreateTextField">
      <summary>
                    Creates a text field in the label shape.
                </summary>
      <returns>
                    The new text field in the label shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.DisplayText">
      <summary>
                    Gets the text to display in the label shape.
                </summary>
      <returns>
                    The text to display in the label shape.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.DomainClassId">
      <summary>
                    Represents the ID for the label shape.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.FixedFlags">
      <summary>
                    Gets the flags that determine whether the label shape is fixed to its current position in the diagram. 
                </summary>
      <returns>
                    The flags that determine whether the label shape is fixed to its current position in the diagram.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.GetAnchorMargins(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <summary>
                    Gets the size of the margins around a text field in the label shape.
                </summary>
      <returns>
                    The size of the margins around the text field in the label shape.
                </returns>
      <param name="field">
                    The text field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.InitializeShapeFields(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.ShapeField})">
      <summary>
                    Creates shape fields for the label shape.
                </summary>
      <param name="shapeFields">
                    The shape fields.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.InternalOnLabelTextChanged(Microsoft.VisualStudio.Modeling.ElementPropertyChangedEventArgs)">
      <summary>
                    Alerts derived classes that the text for the label shape has changed.
                </summary>
      <param name="e">
                    The changed-event arguments for the label shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.Label">
      <summary>
                    Gets or sets the text property for the label shape.
                </summary>
      <returns>
                    The text property for the label shape.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.LabelFieldName">
      <summary>
                    Represents the name of a field in a label shape.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.MultipleLine">
      <summary>
                    Gets the label shape and verifies whether it can display text on multiple lines.
                </summary>
      <returns>true if the label can display text on multiple lines; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.OnDoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Invokes in-place editing on the label shape.
                </summary>
      <param name="e">
                    The arguments for the double-click event.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.OnLabelTextChanged(Microsoft.VisualStudio.Modeling.ElementPropertyChangedEventArgs)">
      <summary>
                    Alerts listeners that the text for the label has changed.
                </summary>
      <param name="e">
                    The changed-event arguments for the label shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.RelatedShapeToEmphasize">
      <summary>
                    Gets the shape that is related to the label shape and emphasizes it when a user clicks it.
                </summary>
      <returns>
                    The related shape to emphasize; otherwise, null if the label shape has no related shapes.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.ShapeFields">
      <summary>
                    Gets the list of shape fields that are assigned to the label shape.
                </summary>
      <returns>
                    The list of shape fields that are assigned to the label shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.Text">
      <summary>
                    Gets or sets the text for the label shape.
                </summary>
      <returns>
                    The text for the label shape.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LabelShape.TextDomainPropertyId">
      <summary>
                    Represents the ID for the text in a label shape.
                </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeTextPropertyDescriptor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeTextPropertyDescriptor.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainPropertyInfo,System.Attribute[])">
      <param name="modelElement"></param>
      <param name="domainPropertyInfo"></param>
      <param name="attributes"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeTextPropertyDescriptor.Description"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeTextPropertyDescriptor.GetEditor(System.Type)">
      <param name="editorBaseType"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeTypeDescriptor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor,Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="parent"></param>
      <param name="presentationElement"></param>
      <param name="selectedElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelShapeTypeDescriptor.CreatePropertyDescriptor(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainPropertyInfo,System.Attribute[])">
      <param name="requestor"></param>
      <param name="domainPropertyInfo"></param>
      <param name="attributes"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LabelTextField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelTextField.#ctor(System.String)">
      <param name="fieldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LabelTextField.OnKeyDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LassoAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LassoAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LassoAction.DoPaintFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LassoAction.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="currentCursor"></param>
      <param name="diagramClientView"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LassoAction.Invalidate(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LassoAction.OnDragCompleted(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LassoAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LassoAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LassoAction.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LeaveShapeEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LeaveShapeEventArgs.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LeaveShapeEventArgs.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="shape"></param>
      <param name="pointArgs"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LeaveShapeEventArgs.Shape"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelAutoPlacementChangeRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelAutoPlacementChangeRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelAutoPlacementChangeRule.ElementPropertyChanged(Microsoft.VisualStudio.Modeling.ElementPropertyChangedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="store"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.AdjustPosition"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.Alignment"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.AlignmentDomainPropertyId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.AutoSizeLabel(System.String)">
      <param name="labelText"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.BoundsRules"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.ConstrainLabelSize(Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="proposedSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.CreateDefaultStringFormat"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.DefaultOffset"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.DomainClassId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.GridSize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.HasHighlighting"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.HasOutline"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.HasShadow"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.InternalOnLabelTextChanged(Microsoft.VisualStudio.Modeling.ElementPropertyChangedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.ManuallyPlaced"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.ManuallyPlacedDomainPropertyId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.ManuallySized"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.ManuallySizedDomainPropertyId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.MaximumSize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.MinimumSize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.Offset"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.OffsetDomainPropertyId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.OnInitialize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.Placement"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.PlacementDomainPropertyId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShape.ResizableSides"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineLabelShapeSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,System.Int32,System.Int32)">
      <param name="linkShape"></param>
      <param name="indexStart"></param>
      <param name="indexEnd"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="point1"></param>
      <param name="point2"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD,System.Int32,System.Int32,System.Boolean,System.Boolean,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="point1"></param>
      <param name="point2"></param>
      <param name="startIndex"></param>
      <param name="endIndex"></param>
      <param name="isStartSegment"></param>
      <param name="isEndSegment"></param>
      <param name="bounds"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.AbsoluteBounds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.CenterPoint"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.EndIndex"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.EndPoint"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.EndPointF"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.GetAccessibilityObject(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.GetAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.GetAccessibleHelp(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.GetAccessibleHelpTopicFileName(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.GetAccessibleHelpTopicId(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.GetAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.GetAccessibleRole(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.GetAccessibleState(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.GetFocusable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.GetHashCode"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.GetSelectable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.IsEndSegment"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.IsHorizontal"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.IsStartAboveEnd"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.IsStartLeftOfEnd"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.IsStartSegment"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.IsVertical"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.Length"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.StartIndex"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.StartPoint"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegment.StartPointF"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="shapeElement"></param>
      <param name="segment"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.Bounds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.DefaultAction"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.Description"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.DoDefaultAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.GetChild(System.Int32)">
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.GetChildCount"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.GetHelpTopic(System.String@)">
      <param name="fileName"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.Help"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.KeyboardShortcut"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.Name"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <param name="navdir"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.Parent"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.Role"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
      <param name="flags"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LineSegmentAccessibleObject.State"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="source"></param>
      <param name="target"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
      <param name="partition"></param>
      <param name="roleAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="roleAssignments"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
      <param name="store"></param>
      <param name="roleAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="store"></param>
      <param name="roleAssignments"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.DomainClassId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.GetLink(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.GetLinks(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="source"></param>
      <param name="target"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.GetLinksToLink(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="nodesInstance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.GetLinksToNodes(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape)">
      <param name="linkInstance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.GetNodes(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape)">
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.Link"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.LinkDomainRoleId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.Nodes"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.NodesDomainRoleId"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.MonikerAttributeName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.MonikerizeReference(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.String,Microsoft.VisualStudio.Modeling.Store)">
      <param name="serializationContext"></param>
      <param name="sourceElement"></param>
      <param name="domainClassId"></param>
      <param name="monikerString"></param>
      <param name="store"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.ReadElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.ReadTargetRolePlayer(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.SerializeReference(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="serializationContext"></param>
      <param name="sourceElement"></param>
      <param name="targetElement"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.SerializesId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.TryCreateDerivedInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.UsesFullForm"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.WriteElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNodeSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.BrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.DecoratorDoubleEmptyArrow"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.DecoratorEmptyArrow"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.DecoratorEmptyDiamond"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.DecoratorFilledArrow"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.DecoratorFilledDiamond"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.DecoratorHollowArrow"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.DecoratorPath"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.DoPaintShape(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <param name="bounds"></param>
      <param name="shape"></param>
      <param name="e"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.FillDecorator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="bounds"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator.PenId"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape">
      <summary>
                    Represents the shape for a link that displays a relationship between elements in a diagram.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape" /> class. 
                </summary>
      <param name="partition">
                    The partition for the link shape.
                </param>
      <param name="propertyAssignments">
                    The list of domain property ID/value pairs for the link shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.AbsoluteBoundingBox">
      <summary>
                    Gets the bounding rectangle for the diagram to which the link shape belongs.
                </summary>
      <returns>
                    The bounding rectangle for the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.BoundingBox">
      <summary>
                    Gets the bounding rectangle for the parent of the link shape.
                </summary>
      <returns>
                    The bounding rectangle for the parent of the link shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.CanManuallyRoute">
      <summary>
                    Gets the link shape and verifies whether the user can manually route it between elements in the diagram.
                </summary>
      <returns>true if users can manually route the link shape between elements in the diagram; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.CanMove">
      <summary>
                    Gets the link shape and verifies whether users can reposition it in the diagram.
                </summary>
      <returns>true if users can reposition the link in the diagram; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.DefaultRoutingStyle">
      <summary>
                    Gets the default routing style for the link.
                </summary>
      <returns>
                    The default routing style for the link.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.Disconnect">
      <summary>
                    Disconnects the link shape from other shapes.
                </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.DomainClassId">
      <summary>
                    Represents the ID for the link shape.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.EdgePoints">
      <summary>
                    Gets or sets the edge points for the link shape. 
                </summary>
      <returns>
                    The edge points for the link shape.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.EdgePointsDomainPropertyId">
      <summary>
                    Represents the ID that is assigned to the collection of edge points.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.EdgePointsNoJumps">
      <summary>
                    Gets or sets the edge points for a line segment in a link shape that cannot jump.
                </summary>
      <returns>
                    The edge points for a line segment in a link shape that cannot jump.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.EndSegmentBreakFactor">
      <summary>
                    Gets the length of the link shape and determines how long the last line segment in the link shape must be.  
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.GetEdgePointsValue">
      <summary>
                    Gets the value for each edge point that is assigned to the link shape.
                </summary>
      <returns>
                    The value for each edge point that is assigned to the link shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.GridSize">
      <summary>
                    Gets or sets the size of the grid upon which the link shape appears.
                </summary>
      <returns>
                    The size of the grid upon which the link shape appears.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.HasShadow">
      <summary>
                    Gets the link shape and verifies whether it has a shadow.
                </summary>
      <returns>true if the shape has a shadow; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.Invalidate">
      <summary>
                    Invalidates the link shape, the outline pen that exceeds the bounds of the link shape, and the decorators for the link shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.IsRouted">
      <summary>
                    Verifies whether the link shape has been routed or rerouted.
                </summary>
      <returns>true if the link shape has been routed; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.ManuallyRouted">
      <summary>
                    Gets the link shape, verifies whether a user can manually route it between elements on the diagram, or sets the ability for a user to manually route the link shape.
                </summary>
      <returns>true if a user can manually route the link shape between elements; otherwise, false.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.ManuallyRoutedDomainPropertyId">
      <summary>
                    Represents the ID that is assigned to the ManuallyRouted flag.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.NavigateAscend(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Sets the focus on the first parent in the link shape's navigation sequence.
                </summary>
      <returns>true if the focus was moved to the first parent in the link shape's navigation sequence; otherwise, false.
                </returns>
      <param name="selection">
                    The link shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.NavigateToFirst(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Sets the focus on the first child in the navigation sequence (the same navigation sequence to which the link shape belongs).
                </summary>
      <returns>true if the focus was reassigned to the first child shape in the navigation sequence; otherwise, false.
                </returns>
      <param name="selection">
                    The link shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.NavigateToLast(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Sets the focus on the last child in the navigation sequence (the same navigation sequence to which the link shape belongs).
                </summary>
      <returns>true if the focus was reassigned to the last child shape in the navigation sequence; otherwise, false.
                </returns>
      <param name="selection">
                    The link shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.NavigateToNext(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Sets the focus on the next child in the navigation sequence (the same navigation sequence to which the link shape belongs).
                </summary>
      <returns>true if the focus was reassigned to the next child shape in the navigation sequence; otherwise, false.
                </returns>
      <param name="selection">
                    The link shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.NavigateToPrevious(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Sets the focus on the previous child in the navigation sequence (the same navigation sequence to which the link shape belongs).
                </summary>
      <returns>true if the focus was reassigned to the previous child shape in the navigation sequence; otherwise, false.
                </returns>
      <param name="selection">
                    The link shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.Nodes">
      <summary>
                    Gets a list of shapes that are connected to the link shape.
                </summary>
      <returns>
                    A list of shapes that are connected to the link shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.OutlinePenId">
      <summary>
                    Gets the ID of the pen that is used to draw the outline of the link shape.
                </summary>
      <returns>
                    The ID of the pen that is used to draw the outline of the link shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.RouteJumpType">
      <summary>
                    Gets or sets the style of the jump for the link shape.
                </summary>
      <returns>
                    The jump for the link shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.RoutingStyle">
      <summary>
                    Gets or sets the routing style for the link shape.
                </summary>
      <returns>
                    The routing style for the link shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.SetEdgePointsValue(Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection)">
      <summary>
                    Sets the value for each edge point that is assigned to the link shape.
                </summary>
      <param name="newValue">
                    The collection of new values for the edge points.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.UpdateEdgePoints(Microsoft.VisualStudio.Modeling.Diagrams.EdgePointCollection)">
      <summary>
                    Updates the edge points for the link shape.
                </summary>
      <param name="newValue">
                    The collection of new values for the edge points.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.UpdateGraphEdgePoints">
      <summary>
                    Updates the edge points for the link shape and graphs them on the diagram. 
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShape.UserFixed">
      <summary>
                    Gets or sets a fixed line segment. 
                </summary>
      <returns>
                    The fixed line segment.
                </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeChangedRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeChangedRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeChangedRule.ElementPropertyChanged(Microsoft.VisualStudio.Modeling.ElementPropertyChangedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.AddLineArcPath(System.Drawing.Drawing2D.GraphicsPath,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="path"></param>
      <param name="pt1"></param>
      <param name="pt2"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.CalculateRotationAngle(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="pt1"></param>
      <param name="pt2"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.CreateDiagramItem(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.LineSegment)">
      <param name="geometryHost"></param>
      <param name="segment"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.DoFoldToShape(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="geometryHost"></param>
      <param name="potentialPoint"></param>
      <param name="vectorEndpoint"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo,System.Boolean)">
      <param name="geometryHost"></param>
      <param name="hitPoint"></param>
      <param name="hitTestInfo"></param>
      <param name="includeTolerance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.DoHitTestSelection(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="geometryHost"></param>
      <param name="hitPoint"></param>
      <param name="hitTestInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.DoPaintEmphasis(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <param name="e"></param>
      <param name="geometryHost"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.DoPaintGeometry(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <param name="e"></param>
      <param name="geometryHost"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.DoPaintResizeFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="e"></param>
      <param name="geometryHost"></param>
      <param name="bounds"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.DoPaintSelection(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,System.Boolean,System.Boolean,System.Boolean)">
      <param name="e"></param>
      <param name="geometryHost"></param>
      <param name="isSelected"></param>
      <param name="isFocused"></param>
      <param name="isPrimary"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.DrawDecorator(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,System.Single,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.LinkDecorator)">
      <param name="e"></param>
      <param name="geometryHost"></param>
      <param name="rotation"></param>
      <param name="centerRight"></param>
      <param name="decorator"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <param name="geometryHost"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeGeometry.SizeDecorator"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.ReadElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.ReadLinkShapeChildElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="linkShape"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.WriteElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.WriteLinkShapeChildElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.Diagrams.LinkShape,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="linkShape"></param>
      <param name="writer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LinkShapeSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.AccessibleName"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.DomainClassId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.GetItemCount(Microsoft.VisualStudio.Modeling.Diagrams.ListField)">
      <param name="listField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.GetItemDrawInfo(Microsoft.VisualStudio.Modeling.Diagrams.ListField,System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.ItemDrawInfo)">
      <param name="listField"></param>
      <param name="row"></param>
      <param name="itemDrawInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.InitializeFromDescription(Microsoft.VisualStudio.Modeling.Diagrams.CompartmentDescription)">
      <param name="description"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.InitializeShapeFields(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.ShapeField})">
      <param name="shapeFields"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.ItemTextColor"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.ItemTextColorDomainPropertyId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.ListField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.OnInitialize"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.OverrideStyles(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
      <param name="styleSet"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartment.SnakingInfo"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentDescription"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentDescription.#ctor(System.String,System.String,System.Drawing.Color,System.Boolean,System.Drawing.Color,System.Boolean,Microsoft.VisualStudio.Modeling.Diagrams.FontSettings,Microsoft.VisualStudio.Modeling.Diagrams.FontSettings,System.Boolean)">
      <param name="name"></param>
      <param name="title"></param>
      <param name="titleFill"></param>
      <param name="allowCustomTitleFillColor"></param>
      <param name="compartmentFill"></param>
      <param name="allowCustomCompartmentFillColor"></param>
      <param name="titleFontSettings"></param>
      <param name="itemFontSettings"></param>
      <param name="isDefaultCollapsed"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentDescription.IsDefaultCollapsed"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentDescription.ItemFontSettings"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentDescription.ItemTextColor"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListCompartmentSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ListField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.#ctor(System.String)">
      <param name="fieldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.#ctor(System.String,System.Boolean,System.String,System.String)">
      <param name="fieldName"></param>
      <param name="snakedList"></param>
      <param name="moreText"></param>
      <param name="watermarkText"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.AlternateFontId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.DefaultItemFocusable"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.DefaultItemIndent"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.DefaultItemSelectable"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.DefaultStringFormat"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.DisabledTextBrushId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="point"></param>
      <param name="parentShape"></param>
      <param name="diagramHitTestInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.DoPaint(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="e"></param>
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.FindNextInChildSubFields(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,System.Boolean)">
      <param name="parentShape"></param>
      <param name="startFromChildItem"></param>
      <param name="focusableRequired"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.FindPreviousInChildSubFields(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,System.Boolean)">
      <param name="parentShape"></param>
      <param name="startFromChildItem"></param>
      <param name="focusableRequired"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.FocusBackgroundPenId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.FocusPenId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetAccessibleChild(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Int32)">
      <param name="parentShape"></param>
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetAccessibleChildCount(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetAccessibleRole(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetItemCount(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetItemFocusable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField)">
      <param name="parentShape"></param>
      <param name="listItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetItemHeight(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetItemRectangle(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Int32,System.Int32)">
      <param name="parentShape"></param>
      <param name="row"></param>
      <param name="column"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetItemSelectable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField)">
      <param name="parentShape"></param>
      <param name="listItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetItemTextHeight(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetPaddingAboveItemText(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.GetPaddingBelowItemText(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.InactiveSelectedBackgroundBrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.InactiveSelectedDisabledTextBrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.InactiveSelectedTextBrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.JaggedSelectionRectangle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.NormalBackgroundBrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.NormalFontId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.NormalTextBrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.SelectedBackgroundBrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.SelectedDisabledTextBrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.SelectedTextBrushId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListField.SetSelectionRange(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="selection"></param>
      <param name="anchorItem"></param>
      <param name="toItem"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.SnakedList"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListField.WatermarkFormat"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.#ctor(System.Int32)">
      <param name="row"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.#ctor(System.Int32,System.Int32,System.Int32)">
      <param name="row"></param>
      <param name="column"></param>
      <param name="rowsPerColumn"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.CanEditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.Column"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.CommitPendingEdit(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.String)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
      <param name="replacementText"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.GetAccessibleRole(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.GetActiveInPlaceEditor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.GetBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.GetFocusable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.GetInPlaceEditorBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.GetSelectable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.HasPendingEdit(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.OnEndEdit(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.OnKeyDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.OnKeyPress(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs)">
      <param name="e"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.Row"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.RowsPerColumn"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.SubFieldEquals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ListItemSubField.SubFieldHashCode"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.LostFocusEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.LostFocusEventArgs.#ctor(System.IntPtr,System.IntPtr,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="losing"></param>
      <param name="getting"></param>
      <param name="view"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LostFocusEventArgs.WindowGettingFocus"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.LostFocusEventArgs.WindowLosingFocus"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ManualRouteAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ManualRouteAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ManualRouteAction.DoPaintFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ManualRouteAction.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="currentCursor"></param>
      <param name="diagramClientView"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ManualRouteAction.OnDiagramLostFocus(Microsoft.VisualStudio.Modeling.Diagrams.LostFocusEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ManualRouteAction.OnDragCompleted(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ManualRouteAction.OnMouseActionCanceled(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ManualRouteAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ManualRouteAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ManualRouteAction.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ModelElementSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction">
      <summary>
                    Represents a mouse action.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction" /> class. 
                </summary>
      <param name="diagram">
                    The diagram where the mouse action can occur.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.ActionCanceledState">
      <summary>
                    Gets the canceled state for the mouse action.
                </summary>
      <returns>
                    The canceled state for the mouse action.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.ActionCompletedState">
      <summary>
                    Gets the completed state for the mouse action.
                </summary>
      <returns>
                    The completed state for the mouse action.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.Activate(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Activates the mouse action.
                </summary>
      <param name="diagramClientView">
                    The client view for the diagram.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.CanBumpScroll">
      <summary>
                    Gets the mouse action and verifies whether it can cause the diagram to scroll.
                </summary>
      <returns>true if the mouse action can cause the diagram to scroll; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.CanCancel(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the mouse action and verifies whether it can be canceled.
                </summary>
      <returns>true if the mouse action can be canceled; otherwise, false.
                </returns>
      <param name="diagramClientView">
                    The client view for the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.Cancel(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Cancels the mouse action.
                </summary>
      <param name="diagramClientView">
                    The client view for the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.CanComplete(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the mouse action and verifies whether it can be completed.
                </summary>
      <returns>true if the mouse action can be completed; otherwise, false.
                </returns>
      <param name="diagramClientView">
                    The client view for the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.CaptureMouse(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the mouse action.
                </summary>
      <param name="diagramClientView">
                    The client view for the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.Click(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Performs actions for derived classes when the mouse is clicked. 
                </summary>
      <param name="pointArgs">
                    The arguments for an event that occurs over a specific point on the diagram.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.ClickedState">
      <summary>
                    Gets the clicked state for the mouse action.
                </summary>
      <returns>
                    The clicked state for the mouse action.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.Complete(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Completes the mouse action.
                </summary>
      <param name="diagramClientView">
                    The client view for the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.ContextMenuRequested(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Sends a request for the shortcut menu.
                </summary>
      <param name="mouseArgs">
                    The arguments for a mouse event that occurs over the diagram.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.CurrentDiagramArgs">
      <summary>
                    Gets the event arguments for the current diagram in which the mouse action occurred.
                </summary>
      <returns>
                    The event arguments for the current diagram in which the mouse action occurred.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.CurrentMouseActionEvent">
      <summary>
                    Gets the current event for the mouse action.
                </summary>
      <returns>
                    The current event for the mouse action.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.CurrentMouseActionState">
      <summary>
                    Gets the current state for the mouse action.
                </summary>
      <returns>
                    The current state for the mouse action.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.CurrentPoint">
      <summary>
                    Gets or sets the mouse position for the current mouse action.
                </summary>
      <returns>
                    The mouse position for the current mouse action.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.Diagram">
      <summary>
                    Gets the diagram to which the mouse action is assigned.
                </summary>
      <returns>
                    The diagram to which the mouse action is assigned.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.Dispose">
      <summary>
                    Releases all resources used by the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction" />. 
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.Dispose(System.Boolean)">
      <summary>
                    Releases the unmanaged resources used by the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction" /> and optionally releases the managed resources. 
                </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. 
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.DoPaintFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <summary>
                    Paints the feedback for the mouse action.
                </summary>
      <param name="e">
                    The arguments for the paint event.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.DoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Performs actions for derived classes when a user double-clicks the mouse.
                </summary>
      <param name="pointArgs">
                    The arguments for an event that occurs over a specific point on the diagram.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.DragCanceledState">
      <summary>
                    Gets the drag cancellation state for the mouse action.
                </summary>
      <returns>
                    The drag cancellation state for the mouse action. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.DragCompletedState">
      <summary>
                    Gets the drag completion state for the mouse action.
                </summary>
      <returns>
                    The drag completion state for the mouse action.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.DraggingState">
      <summary>
                    Gets the drag state of the mouse action.
                </summary>
      <returns>
                    The drag state of the mouse action.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.DragPendingState">
      <summary>
                    Gets the pending drag state for the mouse action.
                </summary>
      <returns>
                    The pending drag state for the mouse action.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.Finalize">
      <summary>
                    Finalizes the mouse action but does not dispose it.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <summary>
                    Gets the pointer to display for the mouse.
                </summary>
      <returns>
                    The pointer to display for the mouse.
                </returns>
      <param name="currentCursor">
                    The pointer to display.
                </param>
      <param name="diagramClientView">
                    The client view of the diagram.
                </param>
      <param name="mousePosition">
                    The position of the mouse over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.GetTooltipText(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <summary>
                    Gets the tooltip text for an item on the diagram.
                </summary>
      <returns>
                    The tooltip text for an item on the diagram.
                </returns>
      <param name="diagramItem">
                    The item on the diagram for which to get the tooltip.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.GotFocus(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <summary>
                    Assigns the focus to the mouse action.
                </summary>
      <param name="diagramArgs">
                    The arguments for an event that occurs over the diagram.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.HasTooltip">
      <summary>
                    Gets the mouse action and verifies whether it can have a tooltip.
                </summary>
      <returns>true if the mouse action can have a tooltip; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.HoveringState">
      <summary>
                    Gets the hovering state for the mouse action.
                </summary>
      <returns>
                    The hovering state for the mouse action.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.InactiveState">
      <summary>
                    Gets the inactive state for the mouse action.
                </summary>
      <returns>
                    The inactive state for the mouse action.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.Invalidate(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Invalidates the feedback from the mouse action.
                </summary>
      <param name="diagramClientView">
                    The client view for the diagram.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.IsActive">
      <summary>
                    Gets the mouse action and verifies whether it is active.
                </summary>
      <returns>true if the mouse action is active; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.LostFocus(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <summary>
                    Removes focus from the mouse action.
                </summary>
      <param name="diagramArgs">
                    The arguments for an event that occurs over the diagram.
                </param>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseActionActivated">
      <summary>
                    Occurs when a mouse action starts.
                </summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseActionDeactivated">
      <summary>
                    Occurs when a mouse action ends.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Performs actions for derived classes when a user clicks the mouse.
                </summary>
      <param name="mouseArgs">
                    The arguments for a mouse event that occurs over the diagram.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseDownHitShape">
      <summary>
                    Gets shape over which the mouse action occurred.
                </summary>
      <returns>
                    The shape over which the mouse action occurred.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseDownPoint">
      <summary>
                    Gets the position of the most recent mouse-down event.
                </summary>
      <returns>
                    The position of the most recent mouse-down event.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseEnter(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Performs actions for derived classes when the mouse points to a shape in the diagram.
                </summary>
      <param name="pointArgs">
                    The arguments for an event that occurs over a specific point on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseHover(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Performs actions for derived classes when the user points to an area or an element in the diagram.
                </summary>
      <param name="pointArgs">
                    The arguments for an event that occurs over a specific point on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseLeave(Microsoft.VisualStudio.Modeling.Diagrams.LeaveShapeEventArgs)">
      <summary>
                    Performs actions for derived classes when the mouse no longer points to the shape in the diagram.
                </summary>
      <param name="leaveArgs">
                    The arguments to use when the mouse leaves the perimeter of a shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Performs actions for derived classes when the user moves the mouse over the diagram.
                </summary>
      <param name="mouseArgs">
                    The arguments for a mouse event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Performs actions for derived classes when the user releases the mouse button.
                </summary>
      <param name="mouseArgs">
                    The arguments for a mouse event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseWheel(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Performs actions for derived classes when the user rotates the mouse wheel.
                </summary>
      <param name="mouseArgs">
                    The arguments for a mouse event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnClicked(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <summary>
                    Alerts listeners that the user has clicked the mouse.
                </summary>
      <param name="e">
                    The arguments for the mouse action in a diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnContextMenuRequested(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners that the user has requested the shortcut menu.
                </summary>
      <param name="e">
                    The arguments for a mouse event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnDiagramGotFocus(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <summary>
                    Alerts listeners that the diagram has the focus.
                </summary>
      <param name="e">
                    The arguments for an event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnDiagramLostFocus(Microsoft.VisualStudio.Modeling.Diagrams.LostFocusEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnDiagramScrolled(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <summary>
                    Alerts listeners that the user has scrolled the diagram.
                </summary>
      <param name="e">
                    The arguments for an event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnDoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Alerts listeners that the user has double-clicked the mouse.
                </summary>
      <param name="e">
                    The arguments for an event that occurs over a specific point on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnDragCanceled(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <summary>
                    Alerts listeners that the drag operation has been canceled.
                </summary>
      <param name="e">
                    The arguments for a mouse action.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnDragCompleted(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <summary>
                    Alerts listeners that the drag operation has been completed.
                </summary>
      <param name="e">
                    The arguments for a mouse action.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnDraggingBegun(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <summary>
                    Alerts listeners that the drag operation has begun.
                </summary>
      <param name="e">
                    The arguments for a mouse action.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnDraggingEnded(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <summary>
                    Alerts listeners that the drag operation has ended.
                </summary>
      <param name="e">
                    The arguments for a mouse action.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnDragPendingBegun(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <summary>
                    Alerts listeners that the drag operation is pending.
                </summary>
      <param name="e">
                    The arguments for a mouse action.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnDragPendingEnded(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <summary>
                    Alerts listeners that the drag operation is no longer pending.
                </summary>
      <param name="e">
                    The arguments for a mouse action.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnHoveringBegun(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <summary>
                    Alerts listeners that the mouse is hovering over the diagram.
                </summary>
      <param name="e">
                    The arguments for a mouse action.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnHoveringEnded(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <summary>
                    Alerts listeners that the mouse is no longer hovering over the diagram.
                </summary>
      <param name="e">
                    The arguments for a mouse action.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnMouseActionActivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <summary>
                    Alerts listeners that the mouse action has begun.
                </summary>
      <param name="e">
                    The arguments for an event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnMouseActionCanceled(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <summary>
                    Alters listeners that the mouse action has been canceled.
                </summary>
      <param name="e">
                    The arguments for an event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnMouseActionCompleted(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <summary>
                    Alerts listeners that the mouse action has completed.
                </summary>
      <param name="e">
                    The arguments for an event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnMouseActionDeactivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <summary>
                    Alerts listeners that the mouse action has been deactivated.
                </summary>
      <param name="e">
                    The arguments for an event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners that the mouse has been clicked. 
                </summary>
      <param name="e">
                    The arguments for a mouse event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnMouseEnter(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Alerts listeners that the mouse has moved over a shape in the diagram.
                </summary>
      <param name="e">
                    The arguments for an event that occurs over a specific point on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnMouseHover(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Alerts listeners that the mouse is pointing to an area or an element in the diagram.
                </summary>
      <param name="e">
                    The arguments for an event that occurs over a specific point on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnMouseLeave(Microsoft.VisualStudio.Modeling.Diagrams.LeaveShapeEventArgs)">
      <summary>
                    Alerts listeners that the mouse is no longer over the shape in the diagram.
                </summary>
      <param name="e">
                    The arguments that occur when the mouse leaves the perimeter of a shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners that the mouse has been moved over the diagram.
                </summary>
      <param name="e">
                    The arguments for a mouse event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners that the user has released the mouse button.
                </summary>
      <param name="e">
                    The arguments for a mouse event that occurs over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.OnMouseWheel(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners that the user has rotated the mouse wheel.
                </summary>
      <param name="e">
                    The arguments for a mouse event that occurs over the diagram.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.PreviousPoint">
      <summary>
                    Gets or sets the position of the previous mouse-down event.
                </summary>
      <returns>
                    The position of the previous mouse-down event.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.ReleaseMouse(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Alerts listeners that the user has released the mouse button.
                </summary>
      <param name="diagramClientView">
                    The client view for the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.Scrolled(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <summary>
                    Alerts listeners that the user has scrolled the diagram.
                </summary>
      <param name="diagramArgs">
                    The arguments for an event that occurs over the diagram.
                </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseActionActivatedEventHandler">
      <summary>
                    Handles the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionActivated" /> event of a <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction" />.
                </summary>
      <param name="sender">
                    The <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction" />.
                </param>
      <param name="e">
                    The <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs" />.
                </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction.MouseActionDeactivatedEventHandler">
      <summary>
                    Handles the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionDeactivated" /> event of a <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction" />.
                </summary>
      <param name="sender">
                    The <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseAction" />.
                </param>
      <param name="e">
                    The <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs" />.
                </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.Activate"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.MouseDown"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.MouseEnter"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.MouseLeave"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.MouseHover"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.MouseMove"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.MouseUp"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.MouseWheel"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.Click"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.DoubleClick"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.Complete"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.Cancel"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.Continue"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.ContextMenuRequested"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.LostFocus"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.GotFocus"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEvent.Scrolled"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.ActionRequest)">
      <param name="diagramClientView"></param>
      <param name="previousMousePosition"></param>
      <param name="currentMousePosition"></param>
      <param name="actionRequest"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs.ActionRequest"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs.CurrentMousePosition"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs.PreviousMousePosition"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionState"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionState.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.MouseActionState.Next(Microsoft.VisualStudio.Modeling.Diagrams.MouseAction)">
      <param name="mouseAction"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.NestedShapesParentRoleChangeRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NestedShapesParentRoleChangeRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NestedShapesParentRoleChangeRule.RolePlayerChanged(Microsoft.VisualStudio.Modeling.RolePlayerChangedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.NoBoundsRules"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NoBoundsRules.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NoBoundsRules.GetCompliantBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="shape"></param>
      <param name="proposedBounds"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NoBoundsRules.Instance"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape">
      <summary>
                    Represents a node shape in the Domain-Specific Language Designer.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape" /> class. 
                </summary>
      <param name="partition">
                    The partition for the shape.
                </param>
      <param name="propertyAssignments">
                    The list of domain property ID/value pairs for the shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.AbsoluteBoundingBox">
      <summary>
                    Gets the absolute bounding rectangle for the shape.
                </summary>
      <returns>
                    The absolute bounding rectangle for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.AbsoluteBounds">
      <summary>
                    Gets or sets the absolute bounds for the shape.
                </summary>
      <returns>
                    The absolute bounds for the shape.
                </returns>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.AbsoluteBoundsChanged">
      <summary>
                    Occurs when the absolute bounds for the shape change.
                </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.AbsoluteBoundsDomainPropertyId">
      <summary>
                    Represents the ID that is assigned to the shape's absolute bounds.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.AccessibleState">
      <summary>
                    Gets the state of the shape.
                </summary>
      <returns>
                    The state of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.Anchoring">
      <summary>
                    Gets the anchor for the shape.
                </summary>
      <returns>
                    The anchor for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.AutoLayoutChildShapes(System.Collections.IDictionary)">
      <summary>
                    Positions the collection of shapes in the diagram automatically.
                </summary>
      <param name="shapeElementMap">
                    The collection of shapes to automatically position.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.AutoResizeParentOnBoundsChange">
      <summary>
                    Gets the child shape and verifies whether its parent shape should be resized when the absolute bounds for the child shape change.
                </summary>
      <returns>true if the parent shape should be resized when the absolute bounds for the child shape change; otherwise, false.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.BackgroundGradientFieldName">
      <summary>
                    Represents the ID for the shape's area field that contains the background gradient.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.BackgroundGradientMode">
      <summary>
                    Gets the gradient for the background of the shape.
                </summary>
      <returns>
                    The gradient for the background of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.BoundingBox">
      <summary>
                    Gets the bounding rectangle for the shape.
                </summary>
      <returns>
                    The bounding rectangle for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.Bounds">
      <summary>
                    Gets the bounds for the shape.
                </summary>
      <returns>
                    The bounds for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.BoundsRules">
      <summary>
                    Gets the bounds rules for the shape.
                </summary>
      <returns>
                    The bounds rules for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.CalculateMinimumSizeBasedOnChildren">
      <summary>
                    Calculates the minimum size needed so that the shape can include its child shapes.
                </summary>
      <returns>
                    The minimum size needed so that the shape can include its child shapes.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.CanExpandAndCollapse">
      <summary>
                    Gets the shape and verifies whether a user can expand and collapse it.
                </summary>
      <returns>true if a user can expand and collapse the shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.CanResize">
      <summary>
                    Gets the shape and verifies whether a user can resize it.
                </summary>
      <returns>true if a user can resize the shape; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.ChooseRelationship(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the relationship to create between the child shape and its parent shape.
                </summary>
      <returns>
                    The relationship to create between the child shape and its parent shape.
                </returns>
      <param name="childShape">
                    The child shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.Collapse">
      <summary>
                    Collapses the shape so that its nested child shapes do not appear.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.ConfiguredChildPortShape(Microsoft.VisualStudio.Modeling.Diagrams.Port,System.Boolean)">
      <summary>
                    Configures a child port shape and positions it, if necessary.
                </summary>
      <param name="child">
                    The child port shape.
                </param>
      <param name="childWasPlaced">true to position the child port shape on the selected shape; otherwise, false.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.ConnectionPoints">
      <summary>
                    Gets the list of connection points on the shape.
                </summary>
      <returns>
                    The list of connection points on the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.CreateBackgroundGradientField(System.String)">
      <summary>
                    Creates the area field, which displays the gradient fill in the background of the shape.
                </summary>
      <returns>
                    The name of the area field.
                </returns>
      <param name="fieldName">
                    The name of the area field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.CreateConnectionPoint(Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <summary>
                    Creates a connection point and adds it to the collection of connection points that are assigned to the shape.
                </summary>
      <param name="center">
                    The center point of the shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.CreateDefaultBounds(System.Double,System.Double)">
      <summary>
                    Creates default bounding rectangle for the shape.
                </summary>
      <returns>
                    The default bounding rectangle for the shape.
                </returns>
      <param name="x">
                    The default x-coordinate for the bounding rectangle.
                </param>
      <param name="y">
                    The default y-coordinate for the bounding rectangle.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.DefaultContainerMargin">
      <summary>
                    Gets the margin between the parent shape and its nested child shapes.
                </summary>
      <returns>
                    The margin between the parent shape and its nested child shapes.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.DomainClassId">
      <summary>
                    Represents the ID for the element shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.EnsureConnectionPoints(Microsoft.VisualStudio.Modeling.Diagrams.LinkShape)">
      <summary>
                    Verifies whether at least one connection point exists for the link shape.
                </summary>
      <param name="link">
                    The link shape to check.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.EnsureGraphExists">
      <summary>
                    Verifies whether the grid exists for the shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.EnsureGraphLayoutObjectsExist(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Verifies whether the shape and its child shapes are in the graph wrapper.
                </summary>
      <param name="shapeElement">
                    The shape to check.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.Expand">
      <summary>
                    Expands the shape so that its nested child shapes fit in it.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.FindFreeArea(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Finds an empty area on the grid for the shape.
                </summary>
      <returns>
                    The center point in the empty area.
                </returns>
      <param name="freeArea">
                    The bounding rectangle that represents the empty area.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.FixedFlags">
      <summary>
                    Gets the flags that determine whether a shape is fixed to its position on the diagram. 
                </summary>
      <returns>
                    The flags that determine whether a shape is fixed to its position on the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.FromRoleLinkShapes">
      <summary>
                    Gets a collection of link shapes, in which the shape is the source role.
                </summary>
      <returns>
                    A collection of link shapes, in which the shape is the source role.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.GeometryCanResizeBottom">
      <summary>
                    Gets the shape and verifies whether the user can resize it vertically, starting at the bottom.
                </summary>
      <returns>true if the user can resize the shape vertically, starting at the bottom; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.GeometryCanResizeLeft">
      <summary>
                    Gets the shape and verifies whether the user can resize it horizontally, starting on the left.
                </summary>
      <returns>true if the user can resize the shape horizontally, starting on the left; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.GeometryCanResizeRight">
      <summary>
                    Gets the shape and verifies whether the user can resize it horizontally, starting on the right.
                </summary>
      <returns>true if the user can resize the shape horizontally, starting on the right; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.GeometryCanResizeTop">
      <summary>
                    Gets the shape and verifies whether the user can resize it vertically, starting at the top.
                </summary>
      <returns>true if the user can resize the shape vertically, starting at the top; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.GetAbsoluteBoundsValue">
      <summary>
                    Gets the absolute bounds for the shape.
                </summary>
      <returns>
                    The absolute bounds for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.GetCompliantAnchorPoint(Microsoft.VisualStudio.Modeling.Diagrams.AnchorPoint,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <summary>
                    Gets a new, valid anchor point for the shape.
                </summary>
      <returns>
                    The new, valid anchor point for the shape.
                </returns>
      <param name="anchorPoint">
                    The current anchor point for the shape.
                </param>
      <param name="proposedAnchorPoint">
                    The proposed anchor point for the shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.GetIsExpandedValue">
      <summary>
                    Gets the value for the <see cref="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.IsExpanded" /> property.
                </summary>
      <returns>true if the user can expand the shape; otherwise, false. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.HasAnchoring">
      <summary>
                    Gets the shape and verifies whether it can be anchored to the grid.
                </summary>
      <returns>true if the shape can be anchored to the grid; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.HasBackgroundGradient">
      <summary>
                    Gets the shape and verifies whether it has a gradient for its background.
                </summary>
      <returns>true if the shape has a gradient for its background; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.HasConnectionPoints">
      <summary>
                    Gets the shape and verifies whether it has connection points.
                </summary>
      <returns>true if the shape has connection points; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.InitializeShapeFields(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.ShapeField})">
      <summary>
                    Provides support for background gradients.
                </summary>
      <param name="shapeFields">
                    The fields on the shape that can have a background gradient.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.IsExpanded">
      <summary>
                    Gets the shape and verifies or sets whether it is expanded.
                </summary>
      <returns>true if the shape is expanded; otherwise, false.
                </returns>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.IsExpandedDomainPropertyId">
      <summary>
                    Represents the ID that is assigned to the <see cref="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.IsExpanded" /> property.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.IsPlaceRouteNode">
      <summary>
                    Gets the shape and verifies whether it is a link shape.
                </summary>
      <returns>true if the shape is a link shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.IsPort">
      <summary>
                    Gets the shape and verifies whether it is a port shape.
                </summary>
      <returns>true if the shape is a port shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.LayoutObjectFixedFlags">
      <summary>
                    Gets or sets the flags that determine whether a shape inside the graph is fixed to its position on the diagram. 
                </summary>
      <returns>
                    The flags that determine whether a shape inside the graph is fixed to its position on the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.Link">
      <summary>
                    Gets a list of link shapes.
                </summary>
      <returns>
                    A list of link shapes.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.Location">
      <summary>
                    Gets or sets the coordinates of the top-left corner of the shape's bounds.
                </summary>
      <returns>
                    The coordinates of the top-left corner of the shape's bounds.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.MinimumResizableSize">
      <summary>
                    Gets the minimum size to which the shape can be resized.
                </summary>
      <returns>
                    The minimum size to which the shape can be resized.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.MinimumSize">
      <summary>
                    Gets the minimum size for the shape.
                </summary>
      <returns>
                    The minimum size for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.NavigateAcrossLinks(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection,System.Boolean)">
      <summary>
                    Selects the shapes or sets the focus on the shapes that are connected to this shape.
                </summary>
      <param name="selection">
                    The shapes that are connected to this shape.
                </param>
      <param name="focusOnly">true to set the focus on the connected shapes; false to select the shapes that are connected to this shape. 
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.OnAbsoluteBoundsChanged(Microsoft.VisualStudio.Modeling.Diagrams.AbsoluteBoundsChangedEventArgs)">
      <summary>
                    Raises the <see cref="E:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.AbsoluteBoundsChanged" /> event.  
                </summary>
      <param name="e">
                    The arguments to use when the absolute bounds change.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.OnBoundsFixup(Microsoft.VisualStudio.Modeling.Diagrams.BoundsFixupState,System.Int32,System.Boolean)">
      <summary>
                    Alerts listeners that the bounds for the shape were applied.
                </summary>
      <param name="fixupState">
                    The state of the bounds.
                </param>
      <param name="iteration">
                    The iteration.
                </param>
      <param name="createdDuringViewFixup">true if a child shape was created when the view was fixed up; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.OnChildConfigured(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Boolean,System.Boolean)">
      <summary>
                    Configures the port on the shape after the shape is added to the diagram.
                </summary>
      <param name="child">
                    The port that is assigned to the shape.
                </param>
      <param name="childWasPlaced">true to indicate that the port was assigned to the shape; otherwise, false.
                </param>
      <param name="createdDuringViewFixup">true to indicate that the port was created when the view was fixed up; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.OnChildConfiguring(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Boolean)">
      <summary>
                    Configures the port on the shape when the shape is being added to the diagram.
                </summary>
      <param name="child">
                    The port that is assigned to the shape.
                </param>
      <param name="createdDuringViewFixup">true to indicate that the port was created when the view was fixed up; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.OnKeyDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <summary>
                    Alerts listeners that a key is being held down.
                </summary>
      <param name="e">
                    The arguments to use when a key on the diagram is being held down.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.OnKeyPress(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs)">
      <summary>
                    Alerts listeners that a key has been pressed.
                </summary>
      <param name="e">
                    The arguments to use when a key on the diagram has been pressed.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.PerformShapeAnchoringRule">
      <summary>
                    Anchors the shape to the diagram.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.PermitChildVisibility(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Verifies whether the child shape can appear. 
                </summary>
      <returns>true if the child shape can appear; otherwise, false.
                </returns>
      <param name="childShape">
                    The child shape to check.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.PortFixedFlags">
      <summary>
                    Gets the flags that determine whether a port shape is fixed to its position. 
                </summary>
      <returns>
                    The flags that determine whether a port shape is fixed to its position.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.PortPlacementHelper">
      <summary>
                    Gets the helper class that contains the port placement that a shape's parent shape requires.
                </summary>
      <returns>
                    The helper class that contains the port placement that a shape's parent shape requires.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.ProcessVisibilityChange(System.Boolean)">
      <summary>
                    Processes a shape's change in visibility.
                </summary>
      <param name="show">true to allow for the visibility change; otherwise, false.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.ResizableSides">
      <summary>
                    Gets the sides of the shape that the user can resize.
                </summary>
      <returns>
                    The sides of the shape that the user can resize.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.SetAbsoluteBoundsValue(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Sets the value for the <see cref="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.AbsoluteBounds" /> property.
                </summary>
      <param name="newValue">
                    The new value for the <see cref="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.AbsoluteBounds" /> property.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.SetIsExpandedValue(System.Boolean)">
      <summary>
                    Sets the value for the <see cref="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.IsExpanded" /> property.
                </summary>
      <param name="newValue">
                    The new value for the <see cref="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.IsExpanded" /> property.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.ShouldAutoPlaceChildShapes">
      <summary>
                    Gets a shape and verifies whether its nested child shapes should be automatically positioned on the diagram.
                </summary>
      <returns>true if the nested child shapes should be automatically positioned; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.Side(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Assigns a side of the shape to the port.
                </summary>
      <returns>
                    The side of the shape to which the port was assigned.
                </returns>
      <param name="rectangle">
                    The bounding rectangle for the shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.Size">
      <summary>
                    Gets or sets the size of the shape.
                </summary>
      <returns>
                    The size of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.ToRoleLinkShapes">
      <summary>
                    Gets a collection of link shapes, in which the shape is the target role.
                </summary>
      <returns>
                    A collection of link shapes, in which the shape is the target role.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.UpdateChildVisibility">
      <summary>
                    Updates the visibility status for the child shape.
                </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.ExpandCollapseNodeShapeWhenAddedToDiagramRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.ExpandCollapseNodeShapeWhenAddedToDiagramRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.ExpandCollapseNodeShapeWhenAddedToDiagramRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.NodeSides"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.NodeSides.None"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.NodeSides.Left"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.NodeSides.Top"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.NodeSides.Right"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.NodeSides.Bottom"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.NodeSides.Horizontal"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.NodeSides.Vertical"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.NodeShape.NodeSides.All"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.CanResize(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <param name="geometryHost"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.Contains(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="geometryHost"></param>
      <param name="point"></param>
      <param name="hitTestInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.DoFoldToShape(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="geometryHost"></param>
      <param name="potentialPoint"></param>
      <param name="vectorEndpoint"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo,System.Boolean)">
      <param name="geometryHost"></param>
      <param name="hitPoint"></param>
      <param name="hitTestInfo"></param>
      <param name="includeTolerance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.DoHitTestSelection(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="geometryHost"></param>
      <param name="hitPoint"></param>
      <param name="hitTestInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.DoPaintEmphasis(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <param name="e"></param>
      <param name="geometryHost"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.DoPaintGeometry(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <param name="e"></param>
      <param name="geometryHost"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.DoPaintResizeFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="e"></param>
      <param name="geometryHost"></param>
      <param name="bounds"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.DoPaintSelection(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,System.Boolean,System.Boolean,System.Boolean)">
      <param name="e"></param>
      <param name="geometryHost"></param>
      <param name="isSelected"></param>
      <param name="isFocused"></param>
      <param name="isPrimary"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.GetFocusIndicatorInsideMargin(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <param name="geometryHost"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeGeometry.IsGrabHandleSupported(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.GrabHandle)">
      <param name="geometryHost"></param>
      <param name="grabHandle"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeTypeDescriptor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor,Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,Microsoft.VisualStudio.Modeling.ModelElement)"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeTypeDescriptor.GetClassName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.NodeShapeTypeDescriptor.GetComponentName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs.CustomPaintArgs"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs.DisplaySourceAndTargetFeedback"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs.LineFeedbackBounds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs.PreviousTargetFeedbackBounds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs.SourceConnectionPoint"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs.SourceFeedbackBounds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs.SourceGraphicsPath"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs.TargetConnectionPoint"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs.TargetFeedbackBounds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs.TargetGraphicsPath"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.Dispose(System.Boolean)">
      <param name="disposing"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.DoPaintFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="currentCursor"></param>
      <param name="diagramClientView"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.Invalidate(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.OnClicked(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.OnContextMenuRequested(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.OnDiagramLostFocus(Microsoft.VisualStudio.Modeling.Diagrams.LostFocusEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.OnDoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.OnDragCompleted(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PanZoomAction.OnMouseWheel(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ParentRoleChangeRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentRoleChangeRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentRoleChangeRule.RolePlayerChanged(Microsoft.VisualStudio.Modeling.RolePlayerChangedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="source"></param>
      <param name="target"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
      <param name="partition"></param>
      <param name="roleAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="roleAssignments"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
      <param name="store"></param>
      <param name="roleAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="store"></param>
      <param name="roleAssignments"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.DomainClassId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.GetLink(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="source"></param>
      <param name="target"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.GetLinks(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="source"></param>
      <param name="target"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.GetLinksToNestedChildShapes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShapeInstance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.GetLinkToParentShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="nestedChildShapesInstance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.GetNestedChildShapes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.GetParentShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.NestedChildShapes"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.NestedChildShapesDomainRoleId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.ParentShape"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.ParentShapeDomainRoleId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapes.SetParentShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="element"></param>
      <param name="newParentShape"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesAddRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesAddRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesAddRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesDeleteRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesDeleteRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesDeleteRule.ElementDeleted(Microsoft.VisualStudio.Modeling.ElementDeletedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.SerializesId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.TryCreateDerivedInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.UsesFullForm"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeContainsNestedChildShapesSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="source"></param>
      <param name="target"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
      <param name="partition"></param>
      <param name="roleAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="roleAssignments"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
      <param name="store"></param>
      <param name="roleAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="store"></param>
      <param name="roleAssignments"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.DomainClassId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.GetLink(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="source"></param>
      <param name="target"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.GetLinks(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="source"></param>
      <param name="target"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.GetLinksToRelativeChildShapes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShapeInstance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.GetLinkToParentShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="relativeChildShapesInstance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.GetParentShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.GetRelativeChildShapes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.ParentShape"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.ParentShapeDomainRoleId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.RelativeChildShapes"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.RelativeChildShapesDomainRoleId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapes.SetParentShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="element"></param>
      <param name="newParentShape"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesAddRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesAddRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesAddRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesDeleteRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesDeleteRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesDeleteRule.ElementDeleted(Microsoft.VisualStudio.Modeling.ElementDeletedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.SerializesId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.TryCreateDerivedInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.UsesFullForm"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ParentShapeHasRelativeChildShapesSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PenDescriptor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PenDescriptor.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo)">
      <param name="penStyleSetInfo"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenDescriptor.Pen"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenDescriptor.PenStyleSetInfo"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.Alignment"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.Brush"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.Color"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.CompoundArray"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.CustomEndCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.CustomStartCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.DashCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.DashOffset"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.DashPattern"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.DashStyle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.EndCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableAlignment"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableBrush"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableColor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableCompoundArray"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableCustomEndCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableCustomStartCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableDashCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableDashOffset"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableDashPattern"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableDashStyle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableEndCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableLineJoin"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableMiterLimit"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableStartCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableTransform"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.ImmutableWidth"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.IsOverridden(Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags)">
      <param name="penSettings"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.LineJoin"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.MiterLimit"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.PenSettingsFlags"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.PenStyleSetInfo"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.StartCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.Transform"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenSettings.Width"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.Alignment"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.Brush"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.Color"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.CompoundArray"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.CustomStartCap"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.CustomEndCap"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.DashCap"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.DashOffset"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.DashPattern"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.DashStyle"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.EndCap"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.LineJoin"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.MiterLimit"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.PenType"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.StartCap"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.Transform"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PenSettingsFlags.Width"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.Alignment"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.Brush"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.Clone"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.Color"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.CompoundArray"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.CustomEndCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.CustomStartCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.DashCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.DashOffset"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.DashPattern"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.DashStyle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.EndCap"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.Equals(System.Object,System.Object)">
      <param name="objA"></param>
      <param name="objB"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.GetHashCode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.LineJoin"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.MiterLimit"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.StartCap"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.Transform"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PenStyleSetInfo.Width"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PlusMinusButtonField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PlusMinusButtonField.#ctor(System.String)">
      <param name="fieldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PlusMinusButtonField.#ctor(System.String,System.Drawing.Image,System.Drawing.Image)">
      <param name="fieldName"></param>
      <param name="minimizeImage"></param>
      <param name="expandImage"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PlusMinusButtonField.AccessibleDoDefaultAction(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PlusMinusButtonField.GetAccessibleDefaultActionDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PlusMinusButtonField.GetAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PlusMinusButtonField.GetAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PlusMinusButtonField.GetAccessibleRole(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PlusMinusButtonField.GetAccessibleState(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PlusMinusButtonField.GetButtonImage(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PlusMinusButtonField.GetPotentialMouseAction(System.Windows.Forms.MouseButtons,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="mouseButtons"></param>
      <param name="point"></param>
      <param name="hitTestInfo"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PointD"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.#ctor(System.Double,System.Double)">
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.#ctor(System.Drawing.PointF)">
      <param name="pointF"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.Add(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="point"></param>
      <param name="size"></param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PointD.Empty"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.GetHashCode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PointD.IsEmpty"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.Offset(System.Double,System.Double)">
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.op_Addition(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="point"></param>
      <param name="size"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.op_Equality(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="left"></param>
      <param name="right"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.op_Inequality(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="left"></param>
      <param name="right"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.op_Subtraction(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="point"></param>
      <param name="size"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.Subtract(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="point"></param>
      <param name="size"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.ToPointF(Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="pointD"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointD.ToString"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PointD.X"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PointD.Y"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PointDConverter"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointDConverter.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <param name="context"></param>
      <param name="sourceType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointDConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <param name="context"></param>
      <param name="destinationType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PointDConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <param name="destinationType"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PointRelativeTo"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PointRelativeTo.Screen"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PointRelativeTo.Client"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.Port"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Port.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Port.ActiveBoundsRules"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Port.BoundsRules"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Port.DefaultSize"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.Port.DomainClassId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Port.GetChildPortPlacement(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="parent"></param>
      <param name="portBounds"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Port.GetPotentialMouseAction(System.Windows.Forms.MouseButtons,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="mouseButtons"></param>
      <param name="point"></param>
      <param name="hitTestInfo"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Port.GridSize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Port.HasConnectionPoints"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Port.HasShadow"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Port.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
      <param name="classStyleSet"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Port.IsPort"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Port.MinimumSize"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Port.OnDragDrop(Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Port.OnInitialize"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.Port.OnShapeInserted"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Port.Placement"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.Port.ResizableSides"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PortGroupBoundsRules"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortGroupBoundsRules.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortGroupBoundsRules.GetCompliantGroupBounds(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.GhostShapeCollection,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="store"></param>
      <param name="targetShape"></param>
      <param name="ghostShapes"></param>
      <param name="proposedLocationDelta"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PortMovementRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortMovementRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortMovementRule.GetCompliantBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="shape"></param>
      <param name="proposedBounds"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PortMovementRule.Instance"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacement"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacement.None"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacement.Left"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacement.Right"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacement.Top"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacement.Bottom"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.FindEmptyPortPosition(Microsoft.VisualStudio.Modeling.Diagrams.Port,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="portShape"></param>
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.FindPerimeterRotation(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.PortPlacement,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.PortPlacement)">
      <param name="parentShape"></param>
      <param name="initialBounds"></param>
      <param name="initialPlacement"></param>
      <param name="finalBounds"></param>
      <param name="finalPlacement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.GetBottomPortChildren(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.GetBottomPortChildren(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="parentShape"></param>
      <param name="bounds"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.GetLeftPortChildren(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.GetNextEdgeChildren(Microsoft.VisualStudio.Modeling.Diagrams.PortPlacement,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,System.Collections.ArrayList@,Microsoft.VisualStudio.Modeling.Diagrams.PointD@)">
      <param name="currentEdge"></param>
      <param name="parentShape"></param>
      <param name="edgeList"></param>
      <param name="center"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.GetRightPortChildren(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.GetRightPortChildren(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="parentShape"></param>
      <param name="bounds"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.GetTopPortChildren(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.OnParentShapeResized(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="parentShape"></param>
      <param name="oldBounds"></param>
      <param name="newBounds"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.PositionChildPort(Microsoft.VisualStudio.Modeling.Diagrams.Port,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="portShape"></param>
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.ResizeParentShapeAsNeeded(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.Port,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
      <param name="location"></param>
      <param name="portShape"></param>
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortPlacementHelper.RotateOnPerimeter(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,System.Double,Microsoft.VisualStudio.Modeling.Diagrams.PortPlacement)">
      <param name="parentShape"></param>
      <param name="childBounds"></param>
      <param name="perimeterRotation"></param>
      <param name="portPlacement"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PortSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PortShape">
      <summary>
                    Represents the port shape in the Domain-Specific Language Designer.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.PortShape" /> class. 
                </summary>
      <param name="partition">
                    The partition for the port shape.
                </param>
      <param name="propertyAssignments">
                    The list of domain property IDs and values for the port shape.
                </param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PortShape.DomainClassId">
      <summary>
                    Represents the ID that is assigned to the port.
                </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PortShapeSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PresentationDomainNavigator">
      <summary>
                    Navigates from a <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement" /> to a <see cref="T:Microsoft.VisualStudio.Modeling.ModelElement" />.
                </summary>
      <param name="context">
                    The <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement" /> from which to start.
                </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement">
      <summary>
                    Represents the presentation element in the Domain-Specific Language Designer.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement" /> class. 
                </summary>
      <param name="partition">
                    The partition for the presentation element.
                </param>
      <param name="propertyAssignments">
                    The list of domain property ID/value pairs for the presentation element.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement.Associate(Microsoft.VisualStudio.Modeling.ModelElement)">
      <summary>
                    Assigns a model element to the presentation element.
                </summary>
      <param name="element">
                    The model element.
                </param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement.DomainClassId">
      <summary>
                    The ID that is assigned to the presentation element.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement.MergeConfigure(Microsoft.VisualStudio.Modeling.ElementGroup)">
      <summary>
                    Merges a group of elements together with the presentation element and configures them.
                </summary>
      <param name="elementGroup">
                    The top-level model elements that have been re-added to the store.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)">
      <summary>
                    Creates a relationship between a model element and a group of model elements.
                </summary>
      <param name="sourceElement">
                    The model element.
                </param>
      <param name="elementGroup">
                    The group of model elements.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement.ModelElement">
      <summary>
                    Gets or sets the model element that is associated with the presentation element. 
                </summary>
      <returns>
                    The model element that is associated with the presentation element.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement.Subject">
      <summary>
                    Gets or sets the subject for the presentation element.
                </summary>
      <returns>
                    The subject for the presentation element.
                </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.ReadElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.WriteElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementTypeDescriptionProvider"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementTypeDescriptionProvider.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementTypeDescriptionProvider.CreatePresentationElementTypeDescriptor(System.ComponentModel.ICustomTypeDescriptor,Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="parent"></param>
      <param name="presentationElement"></param>
      <param name="selectedElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementTypeDescriptionProvider.CreateTypeDescriptor(System.ComponentModel.ICustomTypeDescriptor,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="parent"></param>
      <param name="element"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementTypeDescriptor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor,Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="parent"></param>
      <param name="presentationElement"></param>
      <param name="selectedElement"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementTypeDescriptor.GetProperties(System.Attribute[])">
      <param name="attributes"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementTypeDescriptor.IncludeOppositeRolePlayerProperties(Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="requestor"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationElementTypeDescriptor.PresentationElement"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="source"></param>
      <param name="target"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
      <param name="partition"></param>
      <param name="roleAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="partition"></param>
      <param name="roleAssignments"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
      <param name="store"></param>
      <param name="roleAssignments"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <param name="store"></param>
      <param name="roleAssignments"></param>
      <param name="propertyAssignments"></param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.DomainClassId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.GetLink(Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="source"></param>
      <param name="target"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.GetLinks(Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="source"></param>
      <param name="target"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.GetLinksToPresentation(Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="subjectInstance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.GetLinkToSubject(Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement)">
      <param name="presentationInstance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.GetPresentation(Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.GetSubject(Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement)">
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.Presentation"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.PresentationDomainRoleId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.SetSubject(Microsoft.VisualStudio.Modeling.Diagrams.PresentationElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="element"></param>
      <param name="newSubject"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.Subject"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubject.SubjectDomainRoleId"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.MonikerAttributeName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.MonikerizeReference(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.String,Microsoft.VisualStudio.Modeling.Store)">
      <param name="serializationContext"></param>
      <param name="sourceElement"></param>
      <param name="domainClassId"></param>
      <param name="monikerString"></param>
      <param name="store"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.ReadElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.ReadPropertiesFromAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.ReadTargetRolePlayer(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.SerializeReference(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="serializationContext"></param>
      <param name="sourceElement"></param>
      <param name="targetElement"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.SerializesId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.TryCreateDerivedInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.UsesFullForm"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.WriteElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.WritePropertiesAsAttributes(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PresentationViewsSubjectSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PropertyChangedEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.PropertyChangedEventArgs.#ctor(System.String,System.Object,System.Object)">
      <param name="propertyName"></param>
      <param name="oldValue"></param>
      <param name="newValue"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PropertyChangedEventArgs.NewValue"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.PropertyChangedEventArgs.OldValue"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.PropertyElementGetter">
      <summary>
                    Gets the element on which the property being displayed for the given element is hosted.
                </summary>
      <param name="element">
                    The <see cref="T:Microsoft.VisualStudio.Modeling.ModelElement" /> on which the property is displayed.
                </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="location"></param>
      <param name="size"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <param name="x"></param>
      <param name="y"></param>
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Bottom"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Center"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Contains(Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="pt"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Contains(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="rectangle"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Contains(System.Double,System.Double)">
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.ContainsX(System.Double)">
      <param name="x"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.ContainsY(System.Double)">
      <param name="y"></param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Empty"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.GetHashCode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Height"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Inflate(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,System.Double,System.Double)">
      <param name="rectangle"></param>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Inflate(Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="size"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Inflate(System.Double,System.Double)">
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Intersect(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="rectangle"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Intersect(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="first"></param>
      <param name="second"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.IntersectsWith(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="rectangle"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.IsEmpty"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Left"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Location"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Offset(Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="pos"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Offset(System.Double,System.Double)">
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.op_Equality(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="left"></param>
      <param name="right"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.op_Implicit(System.Drawing.Rectangle)~Microsoft.VisualStudio.Modeling.Diagrams.RectangleD">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.op_Implicit(System.Drawing.RectangleF)~Microsoft.VisualStudio.Modeling.Diagrams.RectangleD">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.op_Inequality(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="left"></param>
      <param name="right"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.PerimeterTranslation(Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="pt"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.PerimeterTranslation(System.Double,System.Double)">
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Right"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Size"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Top"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.ToRectangleF(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="rectangleD"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.ToString"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Union(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="first"></param>
      <param name="second"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Width"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.X"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RectangleD.Y"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.RectangleDConverter"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleDConverter.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <param name="context"></param>
      <param name="sourceType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleDConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <param name="context"></param>
      <param name="destinationType"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleDConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <param name="destinationType"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.RectangleShapeGeometry"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleShapeGeometry.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleShapeGeometry.DoFoldToShape(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="geometryHost"></param>
      <param name="potentialPoint"></param>
      <param name="vectorEndpoint"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RectangleShapeGeometry.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo,System.Boolean)">
      <param name="geometryHost"></param>
      <param name="hitPoint"></param>
      <param name="hitTestInfo"></param>
      <param name="includeTolerance"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.DoPaintFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="currentCursor"></param>
      <param name="diagramClientView"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.GrabHandle"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.Invalidate(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.OnDiagramLostFocus(Microsoft.VisualStudio.Modeling.Diagrams.LostFocusEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.OnDragCompleted(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.OnMouseActionCanceled(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ResizeAction.SelectedShape"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ResizeDirection"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ResizeDirection.None"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ResizeDirection.Width"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ResizeDirection.Height"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ResizeDirection.Both"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.RoundedRectangleShapeGeometry"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RoundedRectangleShapeGeometry.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RoundedRectangleShapeGeometry.#ctor(System.Double)">
      <param name="radius"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RoundedRectangleShapeGeometry.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo,System.Boolean)">
      <param name="geometryHost"></param>
      <param name="hitPoint"></param>
      <param name="hitTestInfo"></param>
      <param name="includeTolerance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.RoundedRectangleShapeGeometry.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="boundingBox"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.RoundedRectangleShapeGeometry.Radius"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.RoutingStyle"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.RoutingStyle.Rectilinear"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.RoutingStyle.Straight"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ScrollPositionChangedEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ScrollRangeChangedEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SelectAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectAction.DeferredFocusableItem"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectAction.DeferredSelectableItem"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectAction.IsDiagramSelectedOnly(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <param name="selection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectAction.OnClicked(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectAction.OnContextMenuRequested(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectAction.OnDiagramLostFocus(Microsoft.VisualStudio.Modeling.Diagrams.LostFocusEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectAction.OnMouseActionDeactivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectAction.Select(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="mouseArgs"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Add(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="diagramItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Add(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection)">
      <param name="diagramItems"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.AnchorItem"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.BoundingBox"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.CanEditValue(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Clear"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.CommitPendingEdit(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Contains(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="diagramItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.CopyTo(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem[],System.Int32)">
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.CopyTo(System.Array,System.Int32)">
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Count"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.DeferredAdd(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="diagramItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.DeferredClearBeforeAdditions"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.DeferredPrimaryItem(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="diagramItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.DeferredRemove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="diagramItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Dispose">
      <summary>
                    Releases all resources used by the current instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection" /> class.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Dispose(System.Boolean)">
      <param name="disposing"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.EditItem"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.EnsureVisible"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.EnsureVisible(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnsureVisiblePreferences)">
      <param name="preferences"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.FindFirstFocusableDiagramItem(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="startFromItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.FindFirstSelectableDiagramItem(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="startFromItem"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.FocusedItem"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.GetDiagramItemsContainingShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="shape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.GetEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.HasPendingEdit(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="view"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.IsDeferredSelectionPending"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.IsSynchronized"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.OnSelectionChangedByDeletion(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.OnShapeSelectionChanged(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.OnShapeSelectionChanging(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.PrimaryItem"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Remove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="diagramItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Remove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection)">
      <param name="diagramItems"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.RepresentedElements"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.SelectFocusedItemOrAncestor"></member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.SelectionChangedByDeletion"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.SelectionRules"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Set(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="diagramItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Set(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection)">
      <param name="diagramItems"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.SetDeferredSelection"></member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.ShapeSelectionChanged"></member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.ShapeSelectionChanging"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.SyncRoot"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Toggle(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="diagramItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.Toggle(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection)">
      <param name="diagramItems"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection.TopLevelItems"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SelectionChangedByDeletionEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SelectionContext"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionContext.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionContext.GetSelectionState(System.Collections.ICollection)">
      <param name="actualSelection"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionContext.KnownSelectionStates"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionContext.Reset"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.ActualSelection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.CacheCoercedSelection(System.Collections.ICollection)">
      <param name="coercedSelection"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.CoercedSelection"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.CoercedSelectionCache"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.CoercedSelectionModelElements"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.CoercedSelectionPresentationElements"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.CoercionCompliantSelection"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.HasCoercion"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.IdentifyCommandsToBeFilteredOutForMultipleSelection(Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection)">
      <param name="invalidCommands"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.IdentifyCommandsToBeFilteredOutForSingleSelection(Microsoft.VisualStudio.Modeling.Diagrams.CommandIdCollection)">
      <param name="invalidCommands"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.Initialize(System.Collections.ICollection)">
      <param name="actualSelection"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.IsActualSelectionMixed"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.IsApplicable(System.Collections.ICollection)">
      <param name="actualSelection"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.IsCoercedSelectionMixed"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.IsCoercible"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.IsCoercionFailure"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.IsCommandToBeFilteredOut(System.ComponentModel.Design.CommandID)">
      <param name="command"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.IsCommandToBeFilteredOutForMultipleSelection(System.ComponentModel.Design.CommandID)">
      <param name="command"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionState.IsCommandToBeFilteredOutForSingleSelection(System.ComponentModel.Design.CommandID)">
      <param name="command"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.Add(Microsoft.VisualStudio.Modeling.Diagrams.SelectionState)">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.Contains(Microsoft.VisualStudio.Modeling.Diagrams.SelectionState)">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.CopyTo(Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection,System.Int32)">
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.IndexOf(Microsoft.VisualStudio.Modeling.Diagrams.SelectionState)">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.Insert(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.SelectionState)">
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.Item(System.Int32)">
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.OnInsert(System.Int32,System.Object)">
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.OnRemove(System.Int32,System.Object)">
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.OnSet(System.Int32,System.Object,System.Object)">
      <param name="index"></param>
      <param name="oldValue"></param>
      <param name="newValue"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.OnValidate(System.Object)">
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SelectionStateCollection.Remove(Microsoft.VisualStudio.Modeling.Diagrams.SelectionState)">
      <param name="value"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="shape"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.Bounds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.DefaultAction"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.Description"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.DoDefaultAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.GetChild(System.Int32)">
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.GetChildCount"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.GetHelpTopic(System.String@)">
      <param name="fileName"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.Help"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.HitTest(System.Int32,System.Int32)">
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.KeyboardShortcut"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.Name"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <param name="navdir"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.Parent"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.Role"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
      <param name="flags"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.State"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAccessibleObject.Value"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAutoInvalidator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAutoInvalidator.#ctor(System.String)">
      <param name="fieldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAutoInvalidator.#ctor(System.String,Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo)">
      <param name="fieldName"></param>
      <param name="store"></param>
      <param name="propertyInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAutoInvalidator.#ctor(System.String,Microsoft.VisualStudio.Modeling.Store,System.Guid)">
      <param name="fieldName"></param>
      <param name="store"></param>
      <param name="domainPropertyId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAutoInvalidator.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="point"></param>
      <param name="parentShape"></param>
      <param name="diagramHitTestInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAutoInvalidator.DoPaint(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="e"></param>
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeAutoInvalidator.GetVisible(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecorator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecorator.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition)">
      <param name="field"></param>
      <param name="position"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecorator.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="field"></param>
      <param name="position"></param>
      <param name="offset"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecorator.ConfigureHostShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parent"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecorator.OnAfterOffsetChanged"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecorator.Position"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecorator.RepositionHostShape(Microsoft.VisualStudio.Modeling.Diagrams.DecoratorHostShape)">
      <param name="host"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecorator.RequiresHost"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.InnerTopLeft"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.InnerTopCenter"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.InnerTopRight"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.InnerMiddleLeft"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.Center"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.InnerMiddleRight"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.InnerBottomLeft"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.InnerBottomCenter"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.InnerBottomRight"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.OuterTopLeft"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.OuterTopCenter"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.OuterTopRight"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.OuterMiddleLeft"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.OuterMiddleRight"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.OuterBottomLeft"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.OuterBottomCenter"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeDecoratorPosition.OuterBottomRight"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement">
      <summary>
                    Represents a shape in a diagram.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement" /> class. 
                </summary>
      <param name="partition">
                    The partition for the shape.
                </param>
      <param name="propertyAssignments">
                    The list of domain property ID/value pairs for the shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AbsoluteBoundingBox">
      <summary>
                    Gets the absolute bounding rectangle for the shape.
                </summary>
      <returns>
                    The absolute bounding rectangle for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AbsoluteBoundingBoxToEnsureVisible">
      <summary>
                    Gets the absolute bounding rectangle for <see cref="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnsureVisible(System.Collections.ICollection)" />.
                </summary>
      <returns>
                    The absolute bounding rectangle for <see cref="M:Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView.EnsureVisible(System.Collections.ICollection)" />.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AbsoluteCenter">
      <summary>
                    Gets the point in the center of the shape. 
                </summary>
      <returns>
                    The point in the center of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AccessibilityObject">
      <summary>
                    Gets the accessibility object for the shape. 
                </summary>
      <returns>
                    The accessibility object for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AccessibleDefaultActionDescription">
      <summary>
                    Gets the default action description for the shape.
                </summary>
      <returns>
                    The default action description for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AccessibleDescription">
      <summary>
                    Gets the description for the shape.
                </summary>
      <returns>
                    The description for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AccessibleDoDefaultAction">
      <summary>
                    Performs the default action for the accessible object.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AccessibleHelp">
      <summary>
                    Gets the Help for the shape.
                </summary>
      <returns>
                    The Help for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AccessibleHelpTopicFileName">
      <summary>
                    Gets the Help topic for the shape.
                </summary>
      <returns>
                    The Help topic for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AccessibleHelpTopicId">
      <summary>
                    Gets the ID of the Help topic for the shape.
                </summary>
      <returns>
                    The ID of the Help topic for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AccessibleName">
      <summary>
                    Gets the name of the shape.
                </summary>
      <returns>
                    The name of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AccessibleRole">
      <summary>
                    Gets the role of the shape.
                </summary>
      <returns>
                    The role of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AccessibleState">
      <summary>
                    Gets the state of the shape.
                </summary>
      <returns>
                    The state of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AccessibleValue">
      <summary>
                    Gets the value of the shape.
                </summary>
      <returns>
                    The value of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AllowsChildrenInSelection">
      <summary>
                    Gets the parent shape and verifies whether its children can be included in the current selection group.
                </summary>
      <returns>true if the parent shape's children can be included in the current selection group; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AllowsChildrenToResizeParent">
      <summary>
                    Gets the child shape and verifies whether its parent shape can be resized when the child shape is resized.
                </summary>
      <returns>true if the parent of a child shape can be resized when the child shape is resized; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AllowsChildrenToShrinkParent">
      <summary>
                    Gets the value that determines whether the size of a parent of a child shape can be decreased when the size of the child shape decreases. 
                </summary>
      <returns>
                    The direction in which the parent shape can be decreased.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AssociateValueWith(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo)">
      <summary>
                    Associates the resource for the shape with an in-memory store property that is assigned to the shape.
                </summary>
      <param name="store">
                    The in-memory store.
                </param>
      <param name="propertyInfo">
                    The properties for the shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.AssociateValueWith(Microsoft.VisualStudio.Modeling.Store,System.Guid)">
      <summary>
                    Associates the resource for the shape with an in-memory store property that is assigned to the shape.
                </summary>
      <param name="store">
                    The in-memory store.
                </param>
      <param name="domainPropertyId">
                    The GUID for the in-memory store that is stored in the shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.BackgroundBrushId">
      <summary>
                    Gets the ID for the brush that is used to paint the background of the shape.
                </summary>
      <returns>
                    The ID for the brush that is used to paint the background of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.BoundingBox">
      <summary>
                    Gets the bounding rectangle for the shape.
                </summary>
      <returns>
                    The bounding rectangle for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.CalculateDerivedVisible(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Verifies whether the child shape appears.
                </summary>
      <returns>true if the child shape appears; otherwise, false.
                </returns>
      <param name="source">
                    The parent shape for the child shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.CanFocus">
      <summary>
                    Gets the shape and verifies whether it can receive the focus.
                </summary>
      <returns>true if the shape can receive the focus; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.CanMove">
      <summary>
                    Gets the shape and verifies whether a user can move it.
                </summary>
      <returns>true if a user can move the shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.CanSelect">
      <summary>
                    Gets the shape and verifies whether a user can select it.
                </summary>
      <returns>true if a user can select the shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Center">
      <summary>
                    Gets the point in the center of the shape.
                </summary>
      <returns>
                    The point in the center of the bounds for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ChooseParentShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Selects a parent shape for the child shape.
                </summary>
      <returns>
                    The parent shape for the child shape.
                </returns>
      <param name="childShape">
                    The child shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ChooseRelationship(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Selects the type of relationship that the child shape has with its parent shape.
                </summary>
      <returns>
                    The type of relationship that the child shape has with its parent shape.
                </returns>
      <param name="childShape">
                    The child shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ClassStyleSet">
      <summary>
                    Gets the style set for the shape.
                </summary>
      <returns>
                    The style set for the shape.
                </returns>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Click">
      <summary>
                    Occurs when the user clicks the mouse.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ClipWhenDrawingFields">
      <summary>
                    Gets the child shape and verifies whether its clipping region should be set to the bounding box for the parent shape when the child shape is drawn.
                </summary>
      <returns>true if the clipping region should be set to the bounding box for the parent shape when the child shapes are drawn; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.CoerceSelection(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.Boolean)">
      <summary>
                    Allows a shape to determine which other shapes are selected.
                </summary>
      <param name="item">
                    The diagram.
                </param>
      <param name="view">
                    The diagram view.
                </param>
      <param name="isAddition">true to select a shape; false to remove selection from a shape. 
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.CreateChildShape(Microsoft.VisualStudio.Modeling.ModelElement)">
      <summary>
                    Creates a child shape.
                </summary>
      <returns>
                    The child shape.
                </returns>
      <param name="element">
                    The type of element shape to create.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.CreateClassStyleSet">
      <summary>
                    Creates a class style set for the shape type.
                </summary>
      <returns>
                    The class style set for the shape type.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.CreateDecorators">
      <summary>
                    Creates a collection of decorators for the shape type.
                </summary>
      <returns>
                    A collection of decorators for the shape type.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.CreateInstanceStyleSet">
      <summary>
                    Creates a style set for the shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.CreateShapeFields">
      <summary>
                    Creates a collection of shape fields for the shape type.
                </summary>
      <returns>
                    A collection of shape fields for the shape type.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Decorators">
      <summary>
                    Gets the collection of decorators for the shape.
                </summary>
      <returns>
                    The collection of decorators for the shape; otherwise, null if the shape has no decorators.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.DefaultShapeField">
      <summary>
                    Gets the default shape, which is the first shape that can receive focus.
                </summary>
      <returns>
                    The default shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.DefaultSize">
      <summary>
                    Gets the default size of the shape.
                </summary>
      <returns>
                    The default size of the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.DetermineHighlightShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Finds the highlighted shape in a chain of shapes.
                </summary>
      <returns>
                    The highlighted shape or null if no shape is highlighted.
                </returns>
      <param name="shape">
                    The shape at which to start the search.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Diagram">
      <summary>
                    Gets the diagram to which the shape belongs.
                </summary>
      <returns>
                    The diagram to which the shape belongs; otherwise, null if the shape does not belong to a diagram.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.DoFoldToShape(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <summary>
                    Calculates the point on the perimeter of the shape where a vector will intersect.
                </summary>
      <returns>
                    The point of the perimeter of the shape where a vector will intersect.
                </returns>
      <param name="potentialPoint">
                    The point along the bounding rectangle to add to the perimeter of the shape.
                </param>
      <param name="vectorEndpoint">
                    The endpoint for the vector.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <summary>
                    Performs a hit test on the shape.
                </summary>
      <returns>true if the shape was hit; otherwise, false.
                </returns>
      <param name="point">
                    A point that is at the top-left corner of the bounding box for the parent shape.
                </param>
      <param name="hitTestInfo">
                    The object that will receive the results of the hit test.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo,System.Boolean)">
      <summary>
                    Performs a hit test on the shape.
                </summary>
      <returns>true if the shape was hit; otherwise, false.
                </returns>
      <param name="point">
                    A point that is at the top-left corner of the bounding box for the parent shape.
                </param>
      <param name="hitTestInfo">
                    The object that will receive the results of the hit test.
                </param>
      <param name="includeTolerance">true to include tolerance around the shape when the hit test is performed; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.DoHitTestSelection(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <summary>
                    Performs a hit test on the selection around the shape.
                </summary>
      <returns>true if the selection around the shape was hit; otherwise, false.
                </returns>
      <param name="point">
                    A point that is at the top-left corner of the bounding box for the diagram.
                </param>
      <param name="hitTestInfo">
                    The object that will receive the results of the hit test.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.DoKeyboardNavigation(System.Windows.Forms.Keys,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Navigates the from shape to shape, using the keyboard.
                </summary>
      <returns>true if navigation occurred with the keyboard; otherwise, false.
                </returns>
      <param name="keyData">
                    The key on the keyboard.
                </param>
      <param name="diagramClientView">
                    The client view that contains the diagram.
                </param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.DomainClassId">
      <summary>
                    Represents the ID that is assigned to the shape.
                </summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.DoubleClick">
      <summary>
                    Occurs when the user double-clicks the mouse.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.DrawResizeFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Draws the resizing feedback for the shape.
                </summary>
      <param name="e">
                    The paint event arguments.
                </param>
      <param name="bounds">
                    The absolute bounds for the shape, relative to the top-left point of the diagram.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Events">
      <summary>
                    Gets the list of event handlers for the shape.
                </summary>
      <returns>
                    The list of event handlers for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ExcludeFromClipRegion(System.Drawing.Graphics,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
                    Excludes the shape and its child shapes from the clipping region.
                </summary>
      <param name="graphics">
                    The graphics object that contains the clipping region.
                </param>
      <param name="matrix">
                    The matrix that is used to translate the graphic path for the shape so that the matrix can locate the shape in the clipping region.
                </param>
      <param name="perimeter">
                    The perimeter of the shape, or null to recalculate the perimeter of the shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ExcludeGeometryFromClipRegion(System.Drawing.Graphics,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
                    Excludes the geometry of a shape and its child shapes from the clipping region.
                </summary>
      <param name="graphics">
                    The graphics object that contains the clipping region.
                </param>
      <param name="matrix">
                    The matrix that is used to translate the graphic path for the geometry so that the matrix can locate the geometry in the clipping region.
                </param>
      <param name="perimeter">
                    The perimeter of the geometry, or null to recalculate the perimeter of the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FindDecorator(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.Decorator},System.String)">
      <summary>
                    Finds the shape decorator.
                </summary>
      <returns>
                    The shape decorator.
                </returns>
      <param name="decorators">
                    The list of decorators to search.
                </param>
      <param name="decoratorName">
                    The name of the decorator.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FindDecorator(System.String)">
      <summary>
                    Finds the shape decorator.
                </summary>
      <returns>
                    The shape decorator.
                </returns>
      <param name="decoratorName">
                    The name of the decorator.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FindFirstChild(System.Boolean)">
      <summary>
                    Searches for the first child in the navigation sequence for the shape.
                </summary>
      <returns>
                    The first child in the navigation sequence for the shape.
                </returns>
      <param name="focusableRequired">true if the child must be able to have focus to be considered; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FindFreeArea(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
                    Finds an empty area on the grid for the shape.
                </summary>
      <returns>
                    The center point in the empty area.
                </returns>
      <param name="aimForX">
                    The x-coordinate where the search should start.
                </param>
      <param name="aimForY">
                    The y-coordinate where the search should start.
                </param>
      <param name="averageConnectivityX">
                    The x-coordinate for the connection point.
                </param>
      <param name="averageConnectivityY">
                    The y-coordinate for the connection point.
                </param>
      <param name="spacingX">
                    The x-coordinate to increment on the grid.
                </param>
      <param name="spacingY">
                    The y-coordinate to increment on the grid.
                </param>
      <param name="areaDeltaX">
                    The x-coordinate for the delta of the area to find.
                </param>
      <param name="areaDeltaY">
                    The y-coordinate for the delta of the area to find.
                </param>
      <param name="boundsX0">
                    The left bound to search within.
                </param>
      <param name="boundsY0">
                    The bottom bound to search within.
                </param>
      <param name="boundsX1">
                    The right bound to search within.
                </param>
      <param name="boundsY1">
                    The top bound to search within.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FindLastChild(System.Boolean)">
      <summary>
                    Searches for the last child in the navigation sequence for the shape.
                </summary>
      <returns>
                    The last child in the navigation sequence for the shape.
                </returns>
      <param name="focusableRequired">true if the child must be able to have focus to be considered; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FindNextChild(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,System.Boolean)">
      <summary>
                    Searches for the next child in the navigation sequence for the shape.
                </summary>
      <returns>
                    The next child in the navigation sequence for the shape.
                </returns>
      <param name="startFromChildItem">
                    The child shape from which to start the search.
                </param>
      <param name="focusableRequired">true to consider the child shape only if it can have focus; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FindNextInChildFields(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,System.Boolean)">
      <summary>
                    Searches for the next shape field in the navigation sequence.
                </summary>
      <returns>
                    The next shape field in the navigation sequence.
                </returns>
      <param name="startFromField">
                    The shape field from which to start the search.
                </param>
      <param name="focusableRequired">true to consider the shape field only if it can have focus; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FindPreviousChild(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,System.Boolean)">
      <summary>
                    Searches for the previous child in the navigation sequence for the shape.
                </summary>
      <returns>
                    The previous child in the navigation sequence for the shape.
                </returns>
      <param name="startFromChildItem">
                    The child shape from which to start the search.
                </param>
      <param name="focusableRequired">true to consider the child shape only if it can have focus; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FindPreviousInChildFields(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,System.Boolean)">
      <summary>
                    Searches for the previous shape field in the navigation sequence.
                </summary>
      <returns>
                    The previous shape field in the navigation sequence.
                </returns>
      <param name="startFromField">
                    The shape field from which to start the search.
                </param>
      <param name="focusableRequired">true to consider the shape field only if it can have focus; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FindShapeField(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.ShapeField},System.String)">
      <summary>
                    Searches for a shape field in a shape.
                </summary>
      <returns>
                    The first shape field that has the specified name; otherwise, null, if no shape field is found.
                </returns>
      <param name="shapeFields">
                    The shape fields in which to search.
                </param>
      <param name="fieldName">
                    The name of the shape field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FindShapeField(System.String)">
      <summary>
                    Searches for a shape field in a shape.
                </summary>
      <returns>
                    The first shape field that has the specified name; otherwise, null, if no shape field is found.
                </returns>
      <param name="fieldName">
                    The name of the shape field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.FixUpChildShapes(Microsoft.VisualStudio.Modeling.ModelElement)">
      <summary>
                    Reconfigures child shapes when a child shape is added to a parent shape.
                </summary>
      <returns>
                    The parent shape of the new child shape; otherwise, null, if no child shape was configured.
                </returns>
      <param name="childElement">
                    The new child shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Focused(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Verifies whether the shape has the focus.
                </summary>
      <returns>true if the shape has the focus; otherwise, false.
                </returns>
      <param name="view">
                    The diagram view.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GeometryBackgroundBrushId">
      <summary>
                    Gets the ID of the brush that is used to paint the background of the geometry.
                </summary>
      <returns>
                    The ID of the brush that is used to paint the background of the geometry.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GeometryBoundingBox">
      <summary>
                    Gets the bounding box of the shape.
                </summary>
      <returns>
                    The bounding box of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GeometryHasFilledBackground">
      <summary>
                    Gets the shape and verifies whether its background is painted.
                </summary>
      <returns>true if the background of the shape is painted; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GeometryHasOutline">
      <summary>
                    Gets the shape and verifies whether it has an outline.
                </summary>
      <returns>true if the shape has an outline; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GeometryHasShadow">
      <summary>
                    Gets the shape and verifies whether it has a shadow.
                </summary>
      <returns>true if the shape has a shadow; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GeometryOutlinePenId">
      <summary>
                    Gets the ID of the pen that draws the outline for the shape.
                </summary>
      <returns>
                    The ID of the pen that draws the outline for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GeometryStyleSet">
      <summary>
                    Gets the style set for the shape.
                </summary>
      <returns>
                    The style set for the shape. 
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetAccessibilityObject(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the accessible object that is assigned to the shape.
                </summary>
      <returns>
                    The accessible object that is assigned to the shape.
                </returns>
      <param name="diagramClientView">
                    The client view for the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetChildElements(Microsoft.VisualStudio.Modeling.ModelElement)">
      <summary>
                    Gets a collection of child shapes that belong to the parent shape.
                </summary>
      <returns>
                    A collection of child shapes that belong to the parent shape.
                </returns>
      <param name="parentElement">
                    The parent shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <summary>
                    Gets the pointer that appears when the mouse is over the shape.
                </summary>
      <returns>
                    The pointer that appears when the mouse is over the shape.
                </returns>
      <param name="currentCursor">
                    The pointer to display over the shape.
                </param>
      <param name="diagramClientView">
                    The client view for the diagram.
                </param>
      <param name="mousePosition">
                    The position of the pointer, relative to the top-left point of the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetDragOverToolTipText(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <summary>
                    Gets the tooltip text that appears when the mouse is over the shape.
                </summary>
      <returns>
                    The tooltip text that appears when the mouse is over the shape.
                </returns>
      <param name="item">
                    The shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetFieldAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <summary>
                    Gets the description for a field in the shape.
                </summary>
      <returns>
                    The description for a field in the shape.
                </returns>
      <param name="field">
                    The field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetFieldAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <summary>
                    Gets the name of a field in the shape.
                </summary>
      <returns>
                    The name of a field in the shape.
                </returns>
      <param name="field">
                    The field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetFieldAccessibleValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <summary>
                    Gets the value for a field in the shape.
                </summary>
      <returns>
                    The value for a field in the shape.
                </returns>
      <param name="field">
                    The field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetFieldRepresentedElement(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <summary>
                    Gets the primary element that the child shape represents. 
                </summary>
      <returns>
                    The primary element that the child shape represents.
                </returns>
      <param name="field">
                    A child field in the element.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetFieldRepresentedProperty(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <summary>
                    Gets the property information for a field in the shape.
                </summary>
      <returns>
                    The property information for a field in the shape.
                </returns>
      <param name="field">
                    The field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetPotentialMouseAction(System.Windows.Forms.MouseButtons,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <summary>
                    Gets the mouse action to perform for a mouse down event over a specific point in the diagram.
                </summary>
      <returns>
                    The mouse action to perform for a mouse down event over a specific point in the diagram.
                </returns>
      <param name="mouseButtons">
                    The mouse buttons that can cause the mouse down event.
                </param>
      <param name="point">
                    The point on the diagram, relative to the top-left point of the diagram.
                </param>
      <param name="hitTestInfo">
                    The hit test information.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetShapeLuminosity(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.Drawing.Color)">
      <summary>
                    Calculates the luminosity of the shape.
                </summary>
      <param name="view">
                    The diagram view.
                </param>
      <param name="color">
                    The color of the shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetSubFieldAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <summary>
                    Gets the description for a child field in the shape.
                </summary>
      <returns>
                    The description for a child field in the shape.
                </returns>
      <param name="field">
                    The parent field for the child field.
                </param>
      <param name="subfield">
                    The child field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetSubFieldAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <summary>
                    Gets the name of a child field in the shape.
                </summary>
      <returns>
                    The name of a child field in the shape.
                </returns>
      <param name="field">
                    The parent field for the child field.
                </param>
      <param name="subfield">
                    The child field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetSubFieldAccessibleValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <summary>
                    Gets the value for a child field in the shape.
                </summary>
      <returns>
                    The value for a child field in the shape.
                </returns>
      <param name="field">
                    The parent field for the child field.
                </param>
      <param name="subfield">
                    The child field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetSubFieldRepresentedElements(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <summary>
                    Gets a collection of elements that the shape for the child field represents.
                </summary>
      <returns>
                    A collection of elements that the shape for the child field represents.
                </returns>
      <param name="field">
                    The parent field for the child field.
                </param>
      <param name="subfield">
                    The child field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetSubFieldRepresentedProperty(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <summary>
                    Gets the property for the child field.
                </summary>
      <returns>
                    The property for the child field.
                </returns>
      <param name="field">
                    The parent field for the child field.
                </param>
      <param name="subfield">
                    The child field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetSubFieldRepresentedPropertyElements(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
      <summary>
                    Gets the element that contains the property for the child field.
                </summary>
      <returns>
                    The element that contains the property for the child field.
                </returns>
      <param name="field">
                    The parent field for the child field.
                </param>
      <param name="subfield">
                    The child field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GetToolTipText(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <summary>
                    Gets the tooltip text for the shape to which the mouse is pointing.
                </summary>
      <returns>
                    The tooltip text for the shape.
                </returns>
      <param name="item">
                    The shape, field, and child field to which the mouse is pointing.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.GridSize">
      <summary>
                    Gets the size of the grid for the shape. 
                </summary>
      <returns>
                    The size of the grid for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.HasCachedDragOverResult(Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs)">
      <summary>
                    Verifies whether the results are cached for the drag-over mouse event.
                </summary>
      <returns>true if the results are cached for the drag-over mouse event; otherwise, false.
                </returns>
      <param name="e">
                    The arguments for the drag-over mouse event.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.HasChildren">
      <summary>
                    Gets the shape and verifies whether it has child shapes.
                </summary>
      <returns>true if the shape has child shapes; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.HasCustomToolTip">
      <summary>
                    Gets the shape and verifies whether it has a custom tooltip.
                </summary>
      <returns>true if the shape has a custom tooltip; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.HasDragOverToolTip">
      <summary>
                    Gets the shape and verifies whether it has a tooltip.
                </summary>
      <returns>true if the shape has a tooltip; otherwise, false. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.HasFilledBackground">
      <summary>
                    Gets the shape and verifies whether it has a background.
                </summary>
      <returns>true if the shape has a background; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.HasHighlighting">
      <summary>
                    Gets the shape and verifies whether it is highlighted.
                </summary>
      <returns>true if the shape is highlighted; otherwise, false. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.HasOutline">
      <summary>
                    Gets the shape and verifies whether it has an outline.
                </summary>
      <returns>true if the shape has an outline; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.HasShadow">
      <summary>
                    Gets the shape and verifies whether it has a shadow.
                </summary>
      <returns>true if the shape has a shadow; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.HasToolTip">
      <summary>
                    Gets the shape and verifies whether it has a tooltip.
                </summary>
      <returns>true if the shape has a tooltip; otherwise, false. 
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Hide">
      <summary>
                    Hides the shape and all its children.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.HideCustomToolTip(System.Windows.Forms.IWin32Window)">
      <summary>
                    Hides the custom tooltip for the shape.
                </summary>
      <param name="window">
                    The interface that exposes the handle for the tooltip window.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.InitializeDecorators(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.ShapeField},System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.Decorator})">
      <summary>
                    Initializes and adds fields to the shape type.
                </summary>
      <param name="shapeFields">
                    The list of fields to add to the shape type.
                </param>
      <param name="decorators">
                    The list of decorators for the shape type.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.InitializeInstanceResources">
      <summary>
                    Initializes the resources for an instance of the shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
      <summary>
                    Initializes the resources for the shape.
                </summary>
      <param name="classStyleSet">
                    The class style set for the shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.InitializeShapeFields(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.ShapeField})">
      <summary>
                    Initializes the fields that are assigned to the shape.
                </summary>
      <param name="shapeFields">
                    The fields that are assigned to the shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Invalidate">
      <summary>
                    Invalidates the shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Invalidate(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Invalidates the shape.
                </summary>
      <param name="absoluteShapeBounds">
                    The absolute bounds for the shape, relative to the top-left point on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Invalidate(System.Boolean)">
      <summary>
                    Invalidates the shape.
                </summary>
      <param name="refreshBitmap">true to refresh the shape's bitmap when the shape is invalidated; otherwise, false. 
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.IsDescendantOf(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Verifies whether the shape is a descendent of another shape. 
                </summary>
      <returns>true if the shape is the descendent of another shape; otherwise, false.
                </returns>
      <param name="potentialAncestor">
                    The shape to check.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.IsNavigationKey(System.Char)">
      <summary>
                    Verifies whether the key is used as a navigational command.
                </summary>
      <returns>true if the key is a navigational command; otherwise, false.
                </returns>
      <param name="keyCharacter">
                    The key.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.IsNavigationKey(System.Windows.Forms.Keys)">
      <summary>
                    Verifies whether the key data is used as a navigational command.
                </summary>
      <returns>true if the key data is a navigational command; otherwise, false.
                </returns>
      <param name="keyData">
                    The key data.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.IsNestedChild">
      <summary>
                    Gets the shape and verifies whether it is a child shape that is assigned to a parent shape.
                </summary>
      <returns>true if the shape is a child shape that is assigned to a parent shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.IsRelativeChild">
      <summary>
                    Gets the shape and verifies whether it is a child shape that is assigned to a parent shape but that is not nested under the parent shape.
                </summary>
      <returns>true if the child shape is a relative; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.IsVisible">
      <summary>
                    Gets the shape and verifies whether it appears.
                </summary>
      <returns>true if the shape appears; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.IterateShapes(Microsoft.VisualStudio.Modeling.Diagrams.IShapeIterator)">
      <summary>
                    Iterates through a shape and its child shapes.
                </summary>
      <param name="iterator">
                    The iterator to use with the shape.
                </param>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.KeyDown">
      <summary>
                    Occurs when the user holds down a key.
                </summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.KeyPress">
      <summary>
                    Occurs when the user presses a key.
                </summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.KeyUp">
      <summary>
                    Occurs when the user releases a key.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.LineAdjustAwayDefault">
      <summary>
                    Gets the shape and verifies whether child link shapes should try to align when they are connected to same shape or sets this value. 
                </summary>
      <returns>true if the child link shapes should try to align when they are connected to the same shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.LineAffinityDefault">
      <summary>
                    Gets or sets the target location where the link shape should try to position the shape.
                </summary>
      <returns>
                    The target location where the link shape should try to position the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.LineToLineClearance">
      <summary>
                    Gets or sets the distance between child link shapes for this shape.
                </summary>
      <returns>
                    The distance between child link shapes for this shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.LineToNodeClearance">
      <summary>
                    Gets or sets the distance between child link shapes and child node shapes.
                </summary>
      <returns>
                    The distance between child link shapes and child node shapes.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.MaximumShadowOffset">
      <summary>
                    Gets the maximum offset for the shadow of the shape.
                </summary>
      <returns>
                    The maximum offset for the shadow of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.MaximumSize">
      <summary>
                    Gets the maximum size for the shape.
                </summary>
      <returns>
                    The maximum size for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.MinimumSize">
      <summary>
                    Gets the minimum size for the shape.
                </summary>
      <returns>
                    The minimum size for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ModifyLuminosity(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Calculates the luminosity of the highlight for the shape.
                </summary>
      <param name="currentLuminosity">
                    The current luminosity for the shape.
                </param>
      <param name="view">
                    The diagram view.
                </param>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.MouseDown">
      <summary>
                    Occurs when the user holds down the mouse button.
                </summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.MouseMove">
      <summary>
                    Occurs when the user moves the mouse.
                </summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.MouseUp">
      <summary>
                    Occurs when the user releases the mouse button.
                </summary>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.MouseWheel">
      <summary>
                    Occurs when the user rotates the mouse wheel.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.MoveByRepositioning(Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs)">
      <summary>
                    Repositions the shapes in the group by the amount that the position of the mouse determines.
                </summary>
      <param name="diagramDragArgs">
                    The drag-event argument that contains the event data.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.MoveByRepositioning(Microsoft.VisualStudio.Modeling.ElementGroupPrototype,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemCollection,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <summary>
                    Repositions the shapes in the group by the amount that the position of the mouse determines.
                </summary>
      <param name="elementGroupPrototype">
                    The group that contains the shapes to move.
                </param>
      <param name="topLevelItems">
                    The collection of top-level shapes in the group.
                </param>
      <param name="moveDelta">
                    The new placement of the shapes.
                </param>
      <param name="hitDiagramItem">
                    The shape upon which to perform the hit test.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.NavigateAscend(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Navigates to the next ancestor in the navigation sequence and updates the focus.
                </summary>
      <returns>true if navigation occurred; otherwise, false.
                </returns>
      <param name="selection">
                    The shape that has the focus.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.NavigateDescend(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Navigates to the next descendent in the navigation sequence and updates the focus.
                </summary>
      <returns>true if navigation occurred; otherwise, false.
                </returns>
      <param name="selection">
                    The shape that has the focus.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.NavigateTo(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Navigates to a specific shape in the navigation sequence and updates the focus.
                </summary>
      <returns>true if navigation occurred; otherwise, false.
                </returns>
      <param name="newFocusItem">
                    The shape to navigate to.
                </param>
      <param name="selection">
                    The shape that has the focus.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.NavigateToFirst(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Navigates to the first shape in the navigation sequence.
                </summary>
      <returns>true if navigation occurred; otherwise, false.
                </returns>
      <param name="selection">
                    The shape that has the focus.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.NavigateToLast(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Navigates to the last shape in the navigation sequence.
                </summary>
      <returns>true if navigation occurred; otherwise, false.
                </returns>
      <param name="selection">
                    The shape that has the focus.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.NavigateToNext(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Navigates to the next shape in the navigation sequence.
                </summary>
      <returns>true if navigation occurred; otherwise, false.
                </returns>
      <param name="selection">
                    The shape that has the focus.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.NavigateToPrevious(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Navigates to the previously selected shape in the navigation sequence.
                </summary>
      <returns>true if navigation occurred; otherwise, false.
                </returns>
      <param name="selection">
                    The shape that has the focus.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.NestedChildShapes">
      <summary>
                    Gets the list of nested child shapes that are assigned to the shape.
                </summary>
      <returns>
                    The list of nested child shapes that are assigned to the shape. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.NestedShapesMargin">
      <summary>
                    Gets the margin between the shape's bounding box and its nested node shapes.
                </summary>
      <returns>
                    The margin between the shape's bounding box and its nested node shapes.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.NodeToNodeClearance">
      <summary>
                    Gets or sets the margin between child node shapes.
                </summary>
      <returns>
                    The margin between child node shapes.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnAssociatedPropertyChanged(Microsoft.VisualStudio.Modeling.Diagrams.PropertyChangedEventArgs)">
      <summary>
                    Updates the shape when the value of an in-memory store property changes for a field in the shape.  
                </summary>
      <param name="e">
                    The arguments to use when a property changes.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnBeforePaint">
      <summary>
                    Updates resources, such as pens and brushes, before they are used to paint the shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnBeginEdit(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventArgs)">
      <summary>
                    Alerts listeners when a shape has changed.
                </summary>
      <param name="e">
                    The arguments to use when a shape has changed.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnBoundsFixup(Microsoft.VisualStudio.Modeling.Diagrams.BoundsFixupState,System.Int32,System.Boolean)">
      <summary>
                    Alerts listeners that the bounds for the shape were applied.
                </summary>
      <param name="fixupState">
                    The state of the bounds.
                </param>
      <param name="iteration">
                    The iteration.
                </param>
      <param name="createdDuringViewFixup">true to indicate that a child shape was created when the elements in the view were adjusted; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnChildConfigured(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Boolean,System.Boolean)">
      <summary>
                    Alerts listeners that the child shape was configured.
                </summary>
      <param name="child">
                    The child shape.
                </param>
      <param name="childWasPlaced">true to indicate that the child shape was positioned; otherwise, false.
                </param>
      <param name="createdDuringViewFixup">true to indicate that a child shape was created when the elements in the view were adjusted; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnChildConfiguring(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Boolean)">
      <summary>
                    Alerts listeners that the child shape is being configured.
                </summary>
      <param name="child">
                    The child shape.
                </param>
      <param name="createdDuringViewFixup">true to indicate that a child shape was created when the elements in the view were adjusted; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Alters listeners when the user clicks the shape.
                </summary>
      <param name="e">
                    The arguments to use when the user clicks on a point on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnDoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Alerts listeners when the user double-clicks the shape.
                </summary>
      <param name="e">
                    The arguments to use when the user clicks on a point on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnDragDrop(Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs)">
      <summary>
                    Alerts listeners when the user drags the shape.
                </summary>
      <param name="e">
                    The arguments to use when the user drags the mouse across the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnDragEnter(Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs)">
      <summary>
                    Alerts listeners when the user drags the shape.
                </summary>
      <param name="e">
                    The arguments to use when the user drags the mouse across the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnDragLeave(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Alerts listeners when the shape is dropped.
                </summary>
      <param name="e">
                    The diagram point event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnDragOver(Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs)">
      <summary>
                    Alerts listeners when the user drags the shape over its bounds.
                </summary>
      <param name="e">
                    The diagram drag event arguments.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnEndEdit(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventArgs)">
      <summary>
                    Alerts listeners after the shape has been edited.
                </summary>
      <param name="e">
                    The arguments to use when the shape is edited on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnInitialize">
      <summary>
                    Alerts listeners that the shape has been initialized.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnKeyDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <summary>
                    Alerts listeners that the user is holding down a key.
                </summary>
      <param name="e">
                    The arguments to use when the user is holding down a key.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnKeyPress(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs)">
      <summary>
                    Alerts listeners that the user has pressed a key.
                </summary>
      <param name="e">
                    The arguments to use when the user presses a key.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnKeyUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <summary>
                    Alerts listeners that the user has released a key.
                </summary>
      <param name="e">
                    The arguments to use when the user releases a key.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners that the user is holding down the mouse button.
                </summary>
      <param name="e">
                    The arguments to use when the user is holding down the mouse button.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnMouseEnter(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Alerts listeners that the user is dragging the mouse over the shape.
                </summary>
      <param name="e">
                    The arguments to use when the user drags the mouse over a point on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnMouseHover(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Alerts listeners that the user is pointing to the shape.
                </summary>
      <param name="e">
                    The arguments to use when the user hovers the mouse over a point on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnMouseLeave(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Alerts listeners that the user is no longer pointing to the shape.
                </summary>
      <param name="e">
                    The arguments to use when the user drags the mouse away from a point on the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners that the user has moved the mouse.
                </summary>
      <param name="e">
                    The arguments to use when the user moves the mouse.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners that the user has released the mouse button.
                </summary>
      <param name="e">
                    The arguments to use when the user releases the mouse.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnMouseWheel(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners that the user has rotated the mouse wheel.
                </summary>
      <param name="e">
                    The arguments to use when the user rotates the mouse wheel.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnOrphaned(Microsoft.VisualStudio.Modeling.SerializationResult)">
      <summary>
                    Alerts listeners that a shape is an orphan.
                </summary>
      <param name="serializationResult">
                    The serialization warning or error to display if an orphan is found.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnPaintEmphasis(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <summary>
                    Alerts listeners that emphasis has been applied to the selected shape.
                </summary>
      <param name="e">
                    The arguments to use when emphasis is applied to the selected shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnPaintFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <summary>
                    Alerts listeners that drag-and-drop feedback has been provided.
                </summary>
      <param name="e">
                    The arguments to use when drag-and-drop feed back has been provided.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnPaintSelection(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <summary>
                    Alerts listeners that the shape with the selection has been drawn.
                </summary>
      <param name="e">
                    The arguments to use when the shape is drawn.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnPaintShape(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <summary>
                    Alerts listeners that the shape has been drawn.
                </summary>
      <param name="e">
                    The arguments to use when the shape is drawn.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnShapeInserted">
      <summary>
                    Alerts listeners that the shape has been assigned as a child shape to a parent shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OnShapeRemoved">
      <summary>
                    Alerts listeners that the shape has been removed as a child shape from a parent shape.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OutlinePenId">
      <summary>
                    Gets the ID of the pen that is used to draw the outline of the shape.
                </summary>
      <returns>
                    The ID of the pen that is used to draw the outline of the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.OutlinePenWidth">
      <summary>
                    Gets the width of the outline for the shape.
                </summary>
      <returns>
                    The width of the outline for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ParentLink">
      <summary>
                    Gets the relationship of the shape to the parent shape.
                </summary>
      <returns>
                    The relationship of the shape to the parent shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ParentShape">
      <summary>
                    Gets the parent shape for the shape.
                </summary>
      <returns>
                    The parent shape for the shape; otherwise, null.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.PerformResizeParentRule">
      <summary>
                    Alerts the Domain-Specific Language Designer that a parent shape must be resized to match its child shapes. 
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.PerformResizeParentRule(System.Boolean,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Alerts the Domain-Specific Language Designer that a parent shape must be resized to match its child shapes. 
                </summary>
      <param name="shapeDeleting">true to delete the parent shape; otherwise, false.
                </param>
      <param name="parent">
                    The parent shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Perimeter">
      <summary>
                    Gets the perimeter (path) around the shape.
                </summary>
      <returns>
                    The perimeter around the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.PermitChildVisibility(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Verifies whether the child shape should appear in the diagram.
                </summary>
      <param name="childShape">
                    The child shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ProcessVisibilityChange(System.Boolean)">
      <summary>
                    Updates the visibility of the child shape when a change to visibility is made.
                </summary>
      <param name="show">true to show the child shape; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.PurgeLayoutObjects">
      <summary>
                    Removes the objects that are used to position the shape on the diagram grid.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.PurgePoints">
      <summary>
                    Removes points for the shape on the diagram grid.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.RebuildShape">
      <summary>
                    Rebuilds the shape.
                </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.RelatedShapeToEmphasize">
      <summary>
                    Gets the related shape to visually emphasize to the user when this shape is selected.
                </summary>
      <returns>
                    The related shape to visually emphasize; otherwise, null, if there is no related shape to emphasize.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.RelativeChildShapes">
      <summary>
                    Gets the list of child shapes that are relatives of the shape.
                </summary>
      <returns>
                    The list of child shapes that are relatives of the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.RemoveLayoutObject">
      <summary>
                    Removes the shape, including any relative and nested child shapes, from the diagram grid.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Selected(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Verifies whether the shape is selected in a specified view.
                </summary>
      <returns>true if the shape is selected; otherwise, false.
                </returns>
      <param name="view">
                    The diagram view.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.SetInitialGraphLayoutVisibility">
      <summary>
                    Sets the visibility of the graph.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.SetShowHideState(System.Boolean)">
      <summary>
                    Sets the visibility of the shape and all its children.
                </summary>
      <param name="show">true to show the shape and its children; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.SetShowHideStateImplementation(System.Boolean)">
      <summary>
                    Sets the visibility of the shape.
                </summary>
      <param name="show">true to show the shape; otherwise, false.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ShapeFields">
      <summary>
                    Gets the collection of shape fields for the shape.
                </summary>
      <returns>
                    The collection of shape fields for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ShapeGeometry">
      <summary>
                    Gets the geometry for the shape.
                </summary>
      <returns>
                    The geometry for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ShouldAddShapeForElement(Microsoft.VisualStudio.Modeling.ModelElement)">
      <summary>
                    Verifies whether a child shape should be added to a parent shape.
                </summary>
      <returns>true if the child shape should be added to a parent shape; otherwise, false.
                </returns>
      <param name="element">
                    The parent shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ShouldReparentOnMove">
      <summary>
                    Verifies whether a child shape should be added to a new parent when the child shape is moved.
                </summary>
      <returns>true if the child shape should be added to a new parent when the child shape is moved; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ShouldTryParentShapeForMergeOnToolboxDoubleClick">
      <summary>
                    Gets the shape and verifies whether the double-click action should exit when the user clicks the shape and then double-clicks an item in the Toolbox.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.Show">
      <summary>
                    Makes a shape and all its children visible.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ShowCustomToolTip(System.String,System.Windows.Forms.IWin32Window,System.Drawing.Point)">
      <summary>
                    Makes a shape's custom tooltip visible.
                </summary>
      <param name="text">
                    The text for the tooltip.
                </param>
      <param name="window">
                    The window for the tooltip.
                </param>
      <param name="point">
                    The x- and y-coordinates where the tooltip should appear.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.StyleSet">
      <summary>
                    Gets an instance of the style set for the shape.
                </summary>
      <returns>
                    An instance of the style set for the shape; otherwise, if there is no style set for the shape, the style set for the class. 
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.TargetToolboxItemFilterAttributes">
      <summary>
                    Gets a collection of attributes that determine which items are enabled or disabled in the Toolbox.
                </summary>
      <returns>
                    A collection of attributes that determine which items are enabled or disabled in the Toolbox.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ToString">
      <summary>
                    Gets the name of the shape and its type.
                </summary>
      <returns>
                    The name of the shape and its type.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.TranslateGeometryToAbsoluteBounds(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Converts the relative bounds to absolute bounds for the shape's geometry.
                </summary>
      <returns>
                    The absolute bounds for the shape's geometry.
                </returns>
      <param name="relativeBounds">
                    The relative bounds for the shape's geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.TranslateGeometryToRelativeBounds(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Converts the absolute bounds to relative bounds for the shape's geometry.
                </summary>
      <returns>
                    The relative bounds for the shape's geometry.
                </returns>
      <param name="absoluteBounds">
                    The absolute bounds for the shape's geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.TranslateToAbsoluteBounds(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Converts the relative bounds to absolute bounds for the shape.
                </summary>
      <returns>
                    The absolute bounds for the shape.
                </returns>
      <param name="relativeBounds">
                    The relative bounds for the shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.TranslateToRelativeBounds(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Converts the absolute bounds to relative bounds for the shape.
                </summary>
      <returns>
                    The relative bounds for the shape.
                </returns>
      <param name="absoluteBounds">
                    The absolute bounds for the shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.UpdateDerivedVisible(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Updates the visible state of the derived shape.
                </summary>
      <param name="source">
                    The shape that changes the visibility of this shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.UpdateGeometryLuminosity(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.Drawing.Brush)">
      <summary>
                    Updates the luminosity for the brush.
                </summary>
      <returns>
                    The color of the brush before the luminosity was updated.
                </returns>
      <param name="view">
                    The client view for the diagram.
                </param>
      <param name="brush">
                    The brush.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.UpdateGeometryLuminosity(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.Drawing.Pen)">
      <summary>
                    Updates the luminosity for the pen.
                </summary>
      <returns>
                    The color of the pen before the luminosity was updated.
                </returns>
      <param name="view">
                    The client view for the diagram.
                </param>
      <param name="pen">
                    The pen.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.ZOrder">
      <summary>
                    Gets the relative Z-Order for the shape.
                </summary>
      <returns>
                    The relative Z-Order for the shape.
                </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.RelationshipType"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.RelationshipType.Nested"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement.RelationshipType.Relative"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementAddRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementAddRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementAddRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.ReadElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.ReadShapeElementChildElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="shapeElement"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.WriteElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.WriteShapeElementChildElements(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Xml.XmlWriter)">
      <param name="serializationContext"></param>
      <param name="shapeElement"></param>
      <param name="writer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeEnumerator.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection)">
      <param name="shapeCollection"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeEnumerator.Current"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeEnumerator.MoveNext"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeEnumerator.Reset"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeEnumerator.System#Collections#IEnumerator#Current"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField">
      <summary>
                    Represents a shape field in a diagram.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.#ctor(System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField" /> class. 
                </summary>
      <param name="fieldName">
                    The ID for the shape field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.AccessibleDoDefaultAction(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Performs the default action for the accessible object.
                </summary>
      <param name="parentShape">
                    The parent shape.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.AllowInPlaceEditorAutoSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Enables the in-place editor to be automatically sized in the shape field. 
                </summary>
      <returns>true if the in-place editor should be automatically sized in the shape field; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape field.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.AnchoringBehavior">
      <summary>
                    Gets the anchoring behavior for the shape field.
                </summary>
      <returns>
                    The anchoring behavior for the shape field.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.AssociateValueWith(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo)">
      <summary>
                    Associates the shape field with a domain property that is assigned to a shape element.
                </summary>
      <param name="store">
                    The store to which the shape element is assigned.
                </param>
      <param name="propertyInfo">
                    The domain property.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.AssociateValueWith(Microsoft.VisualStudio.Modeling.Store,System.Guid)">
      <summary>
                    Associates the shape field with a domain property that is assigned to a shape element.
                </summary>
      <param name="store">
                    The store to which the shape element is assigned.
                </param>
      <param name="propertyId">
                    The ID of the domain property.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.AssociateValueWith(Microsoft.VisualStudio.Modeling.Store,System.Guid,Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo)">
      <summary>
                    Associates the shape field with a domain property that is assigned to a shape element.
                </summary>
      <param name="store">
                    The store to which the shape element is assigned.
                </param>
      <param name="domainClassId">
                    The ID that is assigned to the shape element.
                </param>
      <param name="propertyInfo">
                    The domain property.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.AssociateVisibilityWith(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo)">
      <summary>
                    Associates the visibility of the shape field with a domain property that is assigned to a shape element.
                </summary>
      <param name="store">
                    The store to which the shape element is assigned.
                </param>
      <param name="propertyInfo">
                    The domain property.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.AssociateVisibilityWith(Microsoft.VisualStudio.Modeling.Store,System.Guid)">
      <summary>
                    Associates the visibility of the shape field with a domain property that is assigned to a shape element.
                </summary>
      <param name="store">
                    The store to which the shape element is assigned.
                </param>
      <param name="propertyId">
                    The ID that is assigned to the domain property.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.AssociateVisibilityWith(Microsoft.VisualStudio.Modeling.Store,System.Guid,Microsoft.VisualStudio.Modeling.Diagrams.AssociatedPropertyInfo)">
      <summary>
                    Associates the visibility of the shape field with a domain property that is assigned to a shape element.
                </summary>
      <param name="store">
                    The store to which the shape element is assigned.
                </param>
      <param name="domainClassId">
                    The ID that is assigned to the shape element.
                </param>
      <param name="propertyInfo">
                    The domain property.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.CanEditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the shape field and verifies whether it can be edited.
                </summary>
      <returns>true if the shape field can be edited; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element instance that contains the shape field.
                </param>
      <param name="view">
                    The client view for the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.CommitPendingEdit(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Commits the pending edit.
                </summary>
      <returns>true if the pending edit was committed; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element that contains the shape field.
                </param>
      <param name="view">
                    The diagram client view.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultAccessibleDescription"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultAccessibleName">
      <summary>
                    Gets or sets the default name of the shape field for the accessible object.
                </summary>
      <returns>
                    The default name of the shape field for the accessible object.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultAccessibleState">
      <summary>
                    Gets the default state of the shape field for the accessible object.
                </summary>
      <returns>
                    The default state of the shape field.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultBackgroundBrushId">
      <summary>
                    Gets or sets the ID of the default brush to paint the background of the shape field.
                </summary>
      <returns>
                    The ID of the default brush to paint the background of the shape field.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultFocusable">
      <summary>
                    Gets the shape field and verifies whether it can receive focus, or gives the shape field the ability to receive focus.
                </summary>
      <returns>true if the shape field can receive focus by default; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultInactiveSelectedBackgroundBrushId">
      <summary>
                    Gets or sets the ID of the default background brush for the shape field.
                </summary>
      <returns>
                    The ID of the default background brush for the shape field.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultPenId">
      <summary>
                    Gets or sets the ID of the default pen to use for the shape field.
                </summary>
      <returns>
                    The ID of the default pen to use for the shape field.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultReflectParentFocusedState">
      <summary>
                    Gets the child shape field and verifies whether it should receive focus when its parent shape receives focus or sets the ability to reflect the focus state of its parent shape.
                </summary>
      <returns>true if the child shape can receive focus when its parent shape receives focus by default; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultReflectParentSelectedState">
      <summary>
                    Gets the child shape field and verifies whether it should be selected when its parent shape is selected or sets the ability to reflect the selection state of its parent shape.  
                </summary>
      <returns>true if the child shape field should be selected when its parent shape is selected by default; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultSelectable">
      <summary>
                    Gets the shape field and verifies whether it can be selected by default or sets the default selection state of the shape field.
                </summary>
      <returns>true if the shape field can be selected by default; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultSelectedBackgroundBrushId">
      <summary>
                    Gets or sets the ID of the default background brush for the shape field.
                </summary>
      <returns>
                    The ID of the default background brush for the shape field.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DefaultVisibility">
      <summary>
                    Gets the shape field and verifies whether it appears by default or sets the default visibility of the shape field.
                </summary>
      <returns>true if the shape field appears by default; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <summary>
                    Performs a hit test on a specified point in the diagram to determine whether the point is in the bounds of the shape field.
                </summary>
      <param name="point">
                    The point.
                </param>
      <param name="parentShape">
                    The shape field.
                </param>
      <param name="diagramHitTestInfo">
                    The hit test information that will be updated with the hit test results.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DoKeyboardNavigation(System.Windows.Forms.Keys,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <summary>
                    Navigates in the shape field by using the keyboard.
                </summary>
      <returns>true if navigation occurred; otherwise, false.
                </returns>
      <param name="keyData">
                    The key or combination of keys that the user is pressing.
                </param>
      <param name="diagramClientView">
                    The diagram client view.
                </param>
      <param name="focusedItem">
                    The shape on the diagram that has focus.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.DoPaint(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Draws the shape field.
                </summary>
      <param name="e">
                    The arguments to use when the diagram is painted.
                </param>
      <param name="parentShape">
                    The parent shape to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Opens the in-place editor for the shape field. 
                </summary>
      <param name="parentShape">
                    The parent shape to which the shape field is assigned.
                </param>
      <param name="view">
                    The diagram client view.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <summary>
                    Opens the in-place editor for the shape field. 
                </summary>
      <param name="parentShape">
                    The parent shape to which the shape field is assigned.
                </param>
      <param name="view">
                    The diagram client view.
                </param>
      <param name="mousePosition">
                    The current position of the mouse.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.FindFirstChild(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Boolean)">
      <summary>
                    Locates the first child shape field in the parent shape field.
                </summary>
      <returns>
                    The first child shape field in the parent shape field.
                </returns>
      <param name="parentShape">
                    The parent shape field.
                </param>
      <param name="focusableRequired">true to consider only child shape fields that can receive focus; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.FindLastChild(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Boolean)">
      <summary>
                    Locates the last child shape field in the parent shape field.
                </summary>
      <returns>
                    The last child shape field in the parent shape field.
                </returns>
      <param name="parentShape">
                    The parent shape field.
                </param>
      <param name="focusableRequired">true to consider only child shape fields that can receive focus; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.FindNextChild(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,System.Boolean)">
      <summary>
                    Locates the next child shape field in the parent shape field.
                </summary>
      <returns>
                    The next child shape field in the parent shape field.
                </returns>
      <param name="startFromChildItem">
                    The child shape field from which to begin the search.
                </param>
      <param name="focusableRequired">true to consider only child shape fields that can receive focus; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.FindNextInChildSubFields(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,System.Boolean)">
      <summary>
                    Locates the next child shape field in the navigation sequence.
                </summary>
      <returns>
                    The next child shape field in the navigation sequence.
                </returns>
      <param name="parentShape">
                    The parent shape field.
                </param>
      <param name="startFromChildItem">
                    The child shape field from which to begin the navigation sequence. If this is null, the search starts with the first child subfield in the shape field.
                </param>
      <param name="focusableRequired">true to consider only child shape fields that can receive focus; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.FindPreviousChild(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,System.Boolean)">
      <summary>
                    Locates the previous child shape field in the parent shape field.
                </summary>
      <returns>
                    The previous child in the parent shape field.
                </returns>
      <param name="startFromChildItem">
                    The child shape field from which the navigation sequence began. If the object is null, the search starts with the first child subfield in the shape field.
                </param>
      <param name="focusableRequired">true to consider only child shape fields that can receive focus; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.FindPreviousInChildSubFields(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,System.Boolean)">
      <summary>
                    Locates the previous child shape field in the navigation sequence.
                </summary>
      <returns>
                    The previous child shape field in the navigation sequence.
                </returns>
      <param name="parentShape">
                    The parent shape field.
                </param>
      <param name="startFromChildItem">
                    The child shape field from which to begin the navigation sequence. If this value is null, the search starts with the first child subfield in the shape field.
                </param>
      <param name="focusableRequired">true to consider only child shape fields that can receive focus; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.Focused(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the shape field and verifies whether it has focus.
                </summary>
      <returns>true if the shape field has focus; otherwise, false.
                </returns>
      <param name="parentShape">
                    The parent shape of the shape field.
                </param>
      <param name="view">
                    The diagram client view.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibilityObject(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the accessibility object that is assigned to the shape field.
                </summary>
      <returns>
                    The accessibility object that is assigned to the field.
                </returns>
      <param name="parentShape">
                    The parent shape of the shape field.
                </param>
      <param name="diagramClientView">
                    The diagram client view.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibleChild(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Int32)">
      <summary>
                    Gets the Accessibility object for the child shape field.
                </summary>
      <returns>
                    The Accessibility object for the child shape field.
                </returns>
      <param name="parentShape">
                    The parent shape field of the child shape field.
                </param>
      <param name="index">
                    The index that is assigned to the child shape field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibleChildCount(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the number of Accessibility objects that are assigned to the parent shape field and its child shape fields.
                </summary>
      <returns>
                    The number of Accessibility objects that are assigned to the parent shape field and its child shape fields.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibleDefaultActionDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the default purpose of the shape field for the accessible object. 
                </summary>
      <returns>
                    The description for the shape field for the accessible object.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the description of the shape field for the accessible object.
                </summary>
      <returns>
                    The description of the shape field for the accessible object.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibleHelp(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the shape field Help for the accessible object.
                </summary>
      <returns>
                    The shape field Help for the accessible object.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibleHelpTopicFileName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets a topic in the Help for the accessible object.
                </summary>
      <returns>
                    A topic in the Help for the accessible object.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibleHelpTopicId(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the ID that is assigned to the Help topic for the accessible object.
                </summary>
      <returns>
                    The ID that is assigned to the Help topic for the accessible object.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the name of the shape field for the accessible object.
                </summary>
      <returns>
                    The name of the shape field for the accessible object.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibleRole(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the role of the shape field for the accessible object.
                </summary>
      <returns>
                    The role of the shape field for the accessible object.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibleState(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the state of the shape field for the accessible object.
                </summary>
      <returns>
                    The state of the shape field for the accessible object.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetAccessibleValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the value in the shape field for the accessible object.
                </summary>
      <returns>
                    The value in the shape field for the accessible object.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetActiveInPlaceEditor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the in-place editor that is active.
                </summary>
      <returns>
                    The in-place editor that is active or null if no in-place editor is active.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="view">
                    The client view for the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetBackgroundBrush(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Drawing.Color@)">
      <summary>
                    Gets the brush that draws the background for the shape element to which this shape field is assigned.
                </summary>
      <returns>
                    The brush that draws the background for the shape element to which this shape field is assigned.
                </returns>
      <param name="view">
                    The diagram client view.
                </param>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="oldColor">
                    The current color of the shape field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetBackgroundBrushId(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the ID of the brush that draws the background for the shape element to which this shape field is assigned.
                </summary>
      <returns>
                    The ID of the brush that draws the background for the shape element to which the shape field is assigned.
                </returns>
      <param name="view">
                    The view.
                </param>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the bounds for the shape field.
                </summary>
      <returns>
                    The bounds for the shape.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <summary>
                    Gets the pointer that appears when the mouse is pointing to the shape field.
                </summary>
      <returns>
                    The pointer that appears when the mouse is pointing to the shape field.
                </returns>
      <param name="currentCursor">
                    The pointer that is appearing.
                </param>
      <param name="diagramClientView">
                    The diagram client view.
                </param>
      <param name="mousePosition">
                    The current position of the pointer over the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetFocusable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the shape field and verifies whether it can receive focus.
                </summary>
      <returns>true if the shape field can receive focus; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetInPlaceEditorBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the bounds for the in-place editor.
                </summary>
      <returns>
                    The bounds for the in-place editor.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetMaximumInPlaceEditorSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the maximum bounds for the in-place editor.
                </summary>
      <returns>
                    The maximum bounds for the in-place editor.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetMinimumInPlaceEditorSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the minimum bounds for the in-place editor.
                </summary>
      <returns>
                    The minimum bounds for the in-place editor.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetMinimumSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the minimum width and height for the shape field.
                </summary>
      <returns>
                    The minimum width and height for the shape field.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetPen(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Drawing.Color@)">
      <summary>
                    Gets the pen that draws the shape element to which the shape field is assigned.
                </summary>
      <returns>
                    The pen that draws the shape element to which the shape field is assigned.
                </returns>
      <param name="view">
                    The diagram client view.
                </param>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="oldColor">
                    The color of the pen that is being used for the shape field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetPenId(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the ID of the pen that draws the shape element to which the shape field is assigned.
                </summary>
      <returns>
                    The ID of the pen that draws the shape element to which the shape field is assigned.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetPotentialMouseAction(System.Windows.Forms.MouseButtons,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <summary>
                    Gets the mouse action to activate when the user next clicks a specific point on the diagram. 
                </summary>
      <returns>
                    The mouse action to activate when the user next clicks a specific point on the diagram.
                </returns>
      <param name="mouseButtons">
                    The mouse buttons that can activate the potential mouse action.
                </param>
      <param name="point">
                    The point on the diagram that can activate the mouse action.
                </param>
      <param name="hitTestInfo">
                    The information to gather if the potential mouse action occurs.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetSelectable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the shape field and verifies whether it can be selected.
                </summary>
      <returns>true if the shape field can be selected; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the value in the shape field.
                </summary>
      <returns>
                    The value in the shape field.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetValueDomainPropertyInfo(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the domain property that is assigned to the value in the shape field.
                </summary>
      <returns>
                    The domain property that is assigned to the value in the shape field.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.GetVisible(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <summary>
                    Gets the shape field and verifies whether it appears.
                </summary>
      <returns>true if the shape field appears; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.HasFocusedAppearance(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the shape field and verifies whether it should appear to have the focus.
                </summary>
      <returns>true if the shape field should appear to have the focus; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="view">
                    The client view for the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.HasPendingEdit(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the shape field and verifies whether its in-place editor is active and a change is pending.
                </summary>
      <returns>true if the in-place editor is active and a change is pending; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="view">
                    The diagram client view.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.HasSelectedAppearance(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the shape field and verifies whether it appears to be selected.
                </summary>
      <returns>true if the shape field appears to be selected; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="view">
                    The diagram client view.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.IsNavigationKey(System.Char)">
      <summary>
                    Gets the key that the user pressed and verifies whether it can be used to navigate between shape fields.
                </summary>
      <returns>true if the key can be used to navigate between shape fields; otherwise, false.
                </returns>
      <param name="keyCharacter">
                    The key that the user pressed.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.IsNavigationKey(System.Windows.Forms.Keys)">
      <summary>
                    Gets the keys that the user pressed and verifies whether they can be used to navigate between shape fields.
                </summary>
      <returns>true if the pressed keys can be used to navigate between shape fields; otherwise, false.
                </returns>
      <param name="keyData">
                    The keys that the user pressed.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.Name">
      <summary>
                    Gets the name of the shape field.
                </summary>
      <returns>
                    The name of the shape field.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.NavigateAscend(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Moves the focus to the previous shape field in the navigation sequence for the selected shapes.
                </summary>
      <returns>true if the focus moves to the previous shape in the navigation sequence; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="selection">
                    The group of shapes that are selected and can be navigated.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.NavigateDescend(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Moves the focus to the next shape field in the navigation sequence for the selected shapes.
                </summary>
      <returns>true if the focus moves to the next shape in the navigation sequence; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="selection">
                    The group of shapes that are selected and can be navigated.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.NavigateToFirst(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Moves the focus to the first shape field in the navigation sequence for the selected shapes.
                </summary>
      <returns>true if the focus moves to the first shape in the navigation sequence; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="selection">
                    The group of shapes that are selected and can be navigated.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.NavigateToLast(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Moves the focus to the last shape field in the navigation sequence for the selected shapes.
                </summary>
      <returns>true if the focus moves to the last shape in the navigation sequence; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="selection">
                    The group of shapes that are selected and can be navigated.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.NavigateToNext(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Moves the focus to the next shape field in the navigation sequence for the selected shapes.
                </summary>
      <returns>true if the focus moves to the next shape in the navigation sequence; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="selection">
                    The group of shapes that are selected and can be navigated.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.NavigateToPrevious(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <summary>
                    Moves the focus to the previous shape field in the navigation sequence for the selected shapes.
                </summary>
      <returns>true if the focus moves to the previous shape in the navigation sequence; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="selection">
                    The group of shapes that are selected and can be navigated.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.OnBeginEdit(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventArgs)">
      <summary>
                    Alerts listeners when in-place editing has begun.
                </summary>
      <param name="e">
                    The arguments to use when in-place editing has begun.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.OnClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Alerts listeners when the user has clicked a shape field.
                </summary>
      <param name="e">
                    The arguments to use when an event over a point on the diagram has occurred.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.OnDoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <summary>
                    Alerts listeners when the user has double-clicked a shape field.
                </summary>
      <param name="e">
                    The arguments to use when an event over a point on the diagram has occurred.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.OnEndEdit(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventArgs)">
      <summary>
                    Alerts listeners when in-place editing has completed.
                </summary>
      <param name="e">
                    The arguments to use when an event over a point on the diagram has occurred.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.OnKeyDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <summary>
                    Alerts listeners when the user has held down a key when pointing to a shape field.
                </summary>
      <param name="e">
                    The arguments to use when a key is held down.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.OnKeyPress(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs)">
      <summary>
                    Alerts listeners when the user has pressed a key when pointing to a shape field. 
                </summary>
      <param name="e">
                    The arguments to use when a key is pressed.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.OnKeyUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <summary>
                    Alerts listeners when the user has released a key when pointing to a shape field.
                </summary>
      <param name="e">
                    The arguments to use when a key is released.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners when the user is holding down the mouse over a shape field.
                </summary>
      <param name="e">
                    The arguments to use when the mouse is held down over a shape field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners when the mouse has been moved over a shape field.
                </summary>
      <param name="e">
                    The arguments to use when the mouse is moved over a shape field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners when the user has released the mouse button over a shape field.
                </summary>
      <param name="e">
                    The arguments to use when the mouse is released over a shape field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.OnMouseWheel(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <summary>
                    Alerts listeners when the mouse has been rotated over a shape field.
                </summary>
      <param name="e">
                    The arguments to use when the mouse wheel is rotated over a shape field.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.Selected(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the shape field and verifies whether it is selected.
                </summary>
      <returns>true if the shape field is selected; otherwise, false.
                </returns>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="view">
                    The client view for the diagram.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.SetSelectionRange(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <summary>
                    Sets the selection to a range of child shape fields.
                </summary>
      <param name="selection">
                    The selected shapes.
                </param>
      <param name="anchorItem">
                    The shape field at the start of the range.
                </param>
      <param name="toItem">
                    The shape field at the end of the range.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.SetValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Object)">
      <summary>
                    Assigns the specified value to a shape field.
                </summary>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="value">
                    The value.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeField.SetVisible(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.Object)">
      <summary>
                    Sets the visibility of the shape field.
                </summary>
      <param name="parentShape">
                    The shape element to which the shape field is assigned.
                </param>
      <param name="value">
                    The visibility of the shape field.
                </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometries"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometries.BinaryLink"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometries.Circle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometries.Ellipse"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometries.Rectangle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometries.RoundedRectangle"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometries.Swimlane"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry">
      <summary>
                    Represents the geometry for a shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.CreateDiagramItem(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Creates a shape geometry host.
                </summary>
      <returns>
                    The shape geometry that represents the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost" />.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.Dispose">
      <summary>
                    Releases all resources used by the current instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry" /> class.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.Dispose(System.Boolean)">
      <param name="disposing"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.DoFoldToShape(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <summary>
                    Calculates the point along the vector which crosses over the outline of the shape geometry.
                </summary>
      <returns>
                    The point along the vector which crosses over the outline of the shape geometry.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
      <param name="potentialPoint">
                    The point along the bounding rectangle to include in the perimeter of the shape geometry.
                </param>
      <param name="vectorEndpoint">
                    The endpoint along the bounding rectangle to include in the perimeter of the shape geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <summary>
                    Performs a hit test on the shape geometry. 
                </summary>
      <returns>true if the shape geometry was hit; otherwise, false.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
      <param name="hitPoint">
                    A point that is at the top-left corner of the bounding box for the shape geometry.
                </param>
      <param name="hitTestInfo">
                    The object that will receive the results of the hit test.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo,System.Boolean)">
      <summary>
                    Checks to see whether a hit test should be performed on a shape geometry.
                </summary>
      <returns>true if the shape geometry was hit; otherwise, false.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
      <param name="hitPoint">
                    A point that is at the top-left corner of the bounding box for the shape geometry.
                </param>
      <param name="hitTestInfo">
                    The object that will receive the results of the hit test.
                </param>
      <param name="includeTolerance">true to include tolerance around the shape geometry when the hit test is performed; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.DoHitTestSelection(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <summary>
                    Checks to see whether a hit test should be performed on a shape geometry.
                </summary>
      <returns>true if the shape geometry was hit; otherwise, false.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
      <param name="hitPoint">
                    A point that is at the top-left corner of the bounding box for the shape geometry.
                </param>
      <param name="hitTestInfo">
                    The object that will receive the results of the hit test.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.DoPaint(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Draws the shape geometry and, if available, the shadow for the shape geometry.
                </summary>
      <param name="e">
                    The diagram paint event arguments.
                </param>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.DoPaintEmphasis(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Draws emphasis on the shape.
                </summary>
      <param name="e">
                    The diagram paint event arguments.
                </param>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.DoPaintGeometry(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Draws the geometry shape.
                </summary>
      <param name="e">
                    The diagram paint event arguments.
                </param>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.DoPaintResizeFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Draws the resize feedback for the shape geometry.
                </summary>
      <param name="e">
                    The diagram paint event arguments.
                </param>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
      <param name="bounds">
                    The bounds for the shape geometry. 
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.DoPaintSelection(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
                    Draws the selection around the shape geometry.
                </summary>
      <param name="e">
                    The diagram paint event arguments.
                </param>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
      <param name="isSelected">true if the shape geometry is selected; otherwise, false.
                </param>
      <param name="isFocused">true if the shape geometry has the focus; otherwise, false.
                </param>
      <param name="isPrimary">true if the shape geometry is the primary (first) shape geometry in the selection; otherwise, false.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.DoPaintShadow(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Draws the shadow for the shape geometry.
                </summary>
      <param name="e">
                    The diagram paint event arguments.
                </param>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetBackgroundBrushId(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Gets the ID that is assigned to the brush that paints the background of the shape geometry.
                </summary>
      <returns>
                    The ID that is assigned to the brush that paints the background of the shape geometry.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetExtraPenWidth(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Gets the width of the pen that is drawn outside of the border of the geometry shape.
                </summary>
      <returns>
                    The width of the pen that is drawn outside of the border of the geometry shape.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetHitTestTolerance(Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <summary>
                    Gets the tolerance around the shape geometry to use when a hit test is performed.
                </summary>
      <returns>
                    The tolerance around the shape geometry to use when a hit test is performed.
                </returns>
      <param name="hitTestInfo">
                    The object that will receive the results of the hit test.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetOutlinePenId(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Gets the ID that is assigned to the brush that paints the outline of the shape geometry.
                </summary>
      <returns>
                    The ID that is assigned to the brush that paints the outline of the shape geometry.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Gets the path around the shape geometry.
                </summary>
      <returns>
                    The path around the shape geometry.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <summary>
                    Gets the path around the shape geometry.
                </summary>
      <returns>
                    The path around the shape geometry.
                </returns>
      <param name="boundingBox">
                    The bounding box for the shape geometry, relative to the top-left corner of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost" /> parent.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetPathCopy(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Gets a copy of the path around the shape geometry.
                </summary>
      <returns>
                    A copy of the path around the shape geometry.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetPerimeter(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Gets the perimeter around the shape geometry.
                </summary>
      <returns>
                    The perimeter around the shape geometry.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetPerimeterBoundingBox(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Gets the bounding box around the perimeter of the shape geometry.
                </summary>
      <returns>
                    The bounding box around the perimeter of the shape geometry.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetSelectionBorderThickness(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the width of the border for a selection in the specified view.
                </summary>
      <returns>
                    The width of the border for a selection in the specified view.
                </returns>
      <param name="view">
                    The view.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetSelectionBorderThickness(System.Drawing.Graphics)">
      <summary>
                    Gets the width of the border for a selection in the current view.
                </summary>
      <returns>
                    The width of the border for a selection in the current view.
                </returns>
      <param name="graphics">
                    The graphics which are in the selection.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetSelectionLineOffset(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the distance between the selection and the outside of the shape geometry.
                </summary>
      <returns>
                    The distance between the selection border and the outside of the shape geometry.
                </returns>
      <param name="view">
                    The view.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.GetSelectionLineWidth(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <summary>
                    Gets the width of the selection.
                </summary>
      <returns>
                    The width of the selection.
                </returns>
      <param name="view">
                    The view.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.HasFilledBackground(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Checks to see whether the shape geometry has a background fill.
                </summary>
      <returns>true if the shape geometry has a background fill; otherwise, false.
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.HasOutline(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Checks to see whether the shape geometry has a border.
                </summary>
      <returns>true of the shape geometry has a border; otherwise, false. 
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.HasShadow(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <summary>
                    Checks to see if the shape geometry has a shadow.
                </summary>
      <returns>true of the shape geometry has a shadow; otherwise, false. 
                </returns>
      <param name="geometryHost">
                    The instance of host data for the geometry.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.MaximumShadowOffset">
      <summary>
                    Gets the maximum offset allowed between the shape geometry and the shadow.
                </summary>
      <returns>
                    The maximum offset allowed between the shape geometry and the shadow.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.Rotate(Microsoft.VisualStudio.Modeling.Diagrams.PointD,System.Double,Microsoft.VisualStudio.Modeling.Diagrams.PointD[])">
      <summary>
                    Rotate the shape geometry.
                </summary>
      <param name="center">
                    The center point for the shape geometry.
                </param>
      <param name="angleRadians">
                    The angle to rotate in radians.
                </param>
      <param name="points">
                    The points on the path around the geometry.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.ShadowOffset">
      <summary>
                    Gets the offset between the shape geometry and the shadow.
                </summary>
      <returns>
                    The offset between the shape geometry and the shadow.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.SnapToCircle(Microsoft.VisualStudio.Modeling.Diagrams.PointD,System.Double,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <summary>
                    Snaps a potential point from the bounding box around the shape geometry to the perimeter of the circle.
                </summary>
      <returns>
                    The potential point that was snapped to the perimeter of the circle.
                </returns>
      <param name="center">
                    The center point of the circle.
                </param>
      <param name="radius">
                    The radius of the circle.
                </param>
      <param name="vectorEndpoint">
                    The endpoint for the vector.
                </param>
      <param name="potentialPoint">
                    A point on the bounding rectangle to include in the circle.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.Translate(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD[])">
      <summary>
                    Moves an array of points.
                </summary>
      <param name="delta">
                    The distance to move the points.
                </param>
      <param name="points">
                    The points.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeGeometry.UninitializedPath">
      <summary>
                    Gets the path around the shape geometry.
                </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeIdCollection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeIdCollection.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeIdCollection.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <param name="selection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeIdCollection.CopyTo(System.Array,System.Int32)">
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeIdCollection.CopyTo(System.Guid[],System.Int32)">
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeIdCollection.Count"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeIdCollection.GetEnumerator"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeIdCollection.GuidList"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeIdCollection.IsSynchronized"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeIdCollection.SyncRoot"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection.Add(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="shape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection.Add(System.Collections.ICollection)">
      <param name="shapesToAdd"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection.Contains(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="shape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection.CopyTo(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement[],System.Int32)">
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection.GetEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection.IndexOf(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="shape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection.Insert(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="index"></param>
      <param name="shape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection.Item(System.Int32)">
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection.Remove(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="shape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeModelingCollection.Remove(System.Collections.ICollection)">
      <param name="shapesToRemove"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSelectionChangedEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSelectionChangingEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.AccessibleDoDefaultAction(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.CanEditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.CommitPendingEdit(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.DoKeyboardNavigation(System.Windows.Forms.Keys,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem)">
      <param name="keyData"></param>
      <param name="diagramClientView"></param>
      <param name="focusedItem"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetAccessibilityObject(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetAccessibleDefaultActionDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetAccessibleHelp(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetAccessibleHelpTopicFileName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetAccessibleHelpTopicId(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetAccessibleRole(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetAccessibleValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetActiveInPlaceEditor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="currentCursor"></param>
      <param name="diagramClientView"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetFocusable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetHashCode"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetInPlaceEditorBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetPotentialMouseAction(System.Windows.Forms.MouseButtons,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="mouseButtons"></param>
      <param name="point"></param>
      <param name="hitTestInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.GetSelectable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.HasPendingEdit(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.IsNavigationKey(System.Char)">
      <param name="keyCharacter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.IsNavigationKey(System.Windows.Forms.Keys)">
      <param name="keyData"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.NavigateAscend(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="selection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.NavigateTo(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <param name="newFocusItem"></param>
      <param name="selection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.NavigateToFirst(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="selection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.NavigateToLast(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="selection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.NavigateToNext(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="selection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.NavigateToPrevious(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.SelectedShapesCollection)">
      <param name="parentShape"></param>
      <param name="parentField"></param>
      <param name="selection"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.OnBeginEdit(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.OnClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.OnDoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.OnEndEdit(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItemEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.OnKeyDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.OnKeyPress(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.OnKeyUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.OnMouseWheel(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.SubFieldEquals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField.SubFieldHashCode"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SizeD"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="pt"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="size"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.#ctor(System.Double,System.Double)">
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.Empty"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.GetHashCode"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.Height"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.IsEmpty"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.op_Equality(Microsoft.VisualStudio.Modeling.Diagrams.SizeD,Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="size1"></param>
      <param name="size2"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.op_Explicit(Microsoft.VisualStudio.Modeling.Diagrams.SizeD)~Microsoft.VisualStudio.Modeling.Diagrams.PointD">
      <param name="size"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.op_Inequality(Microsoft.VisualStudio.Modeling.Diagrams.SizeD,Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="size1"></param>
      <param name="size2"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.ToSizeF(Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="sizeD"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.ToString"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SizeD.Width"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SnakingInfo"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SnakingInfo.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SnakingInfo.MaxItemWidth"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SnakingInfo.VisibleColumns"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SnakingInfo.VisibleRows"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SnapToGridRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SnapToGridRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SnapToGridRule.GetCompliantBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="shape"></param>
      <param name="proposedBounds"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SnapToGridRule.Instance"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SnapToGridRule.RoundToGrid(System.Double,System.Double)">
      <param name="position"></param>
      <param name="gridSize"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SnapToPerimeterFollowingRotationRule"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SnapToPerimeterFollowingRotationRule.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SnapToPerimeterFollowingRotationRule.GetCompliantBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
      <param name="shape"></param>
      <param name="proposedBounds"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SnapToPerimeterFollowingRotationRule.Instance"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
      <param name="parent"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.AddBrush(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings)">
      <param name="newBrushId"></param>
      <param name="baseBrushId"></param>
      <param name="brushSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.AddFont(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.FontSettings)">
      <param name="newFontId"></param>
      <param name="baseFontId"></param>
      <param name="fontSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.AddPen(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.PenSettings)">
      <param name="newPenId"></param>
      <param name="basePenId"></param>
      <param name="penSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.ClearBrushOverride(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="brushId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.ClearFontOverride(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="fontId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.ClearPenOverride(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="penId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.GetBrush(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="brushId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.GetBrushCopy(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="brushId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.GetFont(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="fontId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.GetFontHeight(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="fontId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.GetFontSize(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="fontId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.GetOverriddenBrushSettings(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="brushId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.GetOverriddenFontSettings(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="fontId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.GetOverriddenPenSettings(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="penId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.GetPen(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="penId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.GetPenCopy(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="penId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.OverrideBrush(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings)">
      <param name="brushId"></param>
      <param name="brushSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.OverrideBrushWorker(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.BrushSettings)">
      <param name="brushId"></param>
      <param name="baseBrushId"></param>
      <param name="brushSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.OverrideFont(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.FontSettings)">
      <param name="fontId"></param>
      <param name="fontSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.OverrideFontWorker(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.FontSettings)">
      <param name="fontId"></param>
      <param name="baseFontId"></param>
      <param name="fontSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.OverridePen(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.PenSettings)">
      <param name="penId"></param>
      <param name="penSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.OverridePenWorker(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId,Microsoft.VisualStudio.Modeling.Diagrams.PenSettings)">
      <param name="penId"></param>
      <param name="basePenId"></param>
      <param name="penSettings"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.Parent"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.RefreshResources(System.Boolean)">
      <param name="useHighContrastColors"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.RemoveBrush(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="brushId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.RemoveFont(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="fontId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.RemovePen(Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId)">
      <param name="penId"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.StyleSet.UseHighContrastColors"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId.#ctor(System.String,System.String)">
      <param name="companyName"></param>
      <param name="resourceName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId.Equals(System.Object)">
      <param name="obj"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.StyleSetResourceId.GetHashCode"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="shapeElement"></param>
      <param name="shapeField"></param>
      <param name="shapeSubfield"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.Bounds"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.DefaultAction"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.Description"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.DoDefaultAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.GetChild(System.Int32)">
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.GetChildCount"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.GetHelpTopic(System.String@)">
      <param name="fileName"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.Help"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.KeyboardShortcut"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.Name"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <param name="navdir"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.Parent"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.Role"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
      <param name="flags"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.State"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SubfieldAccessibleObject.Value"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneAlignment"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneAlignment.Horizontal"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneAlignment.Vertical"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneDecoratorPosition"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneDecoratorPosition.Near"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneDecoratorPosition.Center"></member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneDecoratorPosition.Far"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SwimLaneFixUpContext"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimLaneFixUpContext.GetContext(Microsoft.VisualStudio.Modeling.Transaction,Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape@,System.Boolean@)">
      <param name="transaction"></param>
      <param name="relativeSwimlane"></param>
      <param name="insertAfter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimLaneFixUpContext.SetContext(Microsoft.VisualStudio.Modeling.Transaction,Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape,System.Boolean)">
      <param name="transaction"></param>
      <param name="relativeSwimlane"></param>
      <param name="insertAfter"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneHelper"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneHelper.AddSwimlane(Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape,Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape,Microsoft.VisualStudio.Modeling.Diagrams.Diagram,System.Boolean)">
      <param name="currentLane"></param>
      <param name="newLane"></param>
      <param name="diagram"></param>
      <param name="addAfter"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneHelper.AnchorAllSwimLanes(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape">
      <summary>
                    Represents a swimlane shape in a diagram.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.#ctor(Microsoft.VisualStudio.Modeling.Partition,Microsoft.VisualStudio.Modeling.PropertyAssignment[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape" /> class. 
                </summary>
      <param name="partition">
                    The partition for the shape.
                </param>
      <param name="propertyAssignments">
                    The list of domain property ID/value pairs for the shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.Alignment">
      <summary>
                    Gets or sets the horizontal or vertical alignment of the swimlane shape in the diagram.
                </summary>
      <returns>
                    The horizontal or vertical alignment of the swimlane shape in the diagram.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.AllowsChildrenInSelection">
      <summary>
                    Gets the parent shape and verifies whether a user can select a child shape after selecting the parent shape.
                </summary>
      <returns>true if a user can select a child shape after selecting the parent shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.AllowsChildrenToResizeParent">
      <summary>
                    Gets the parent shape and verifies whether a user can resize a parent shape by resizing a child shape.
                </summary>
      <returns>true if a user can resize a parent shape by resizing a child shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.BoundsRules">
      <summary>
                    Gets the bound rules for the shape.
                </summary>
      <returns>
                    The bound rules for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.CanExpandAndCollapse">
      <summary>
                    Gets the shape and verifies whether a user can expand or collapse it.
                </summary>
      <returns>true if a user can expand or collapse the shape; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.CanMove">
      <summary>
                    Gets the shape and verifies whether a user can move it across the diagram.
                </summary>
      <returns>true if a user can move the shape across the diagram; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.CoerceSelection(Microsoft.VisualStudio.Modeling.Diagrams.DiagramItem,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.Boolean)">
      <summary>
                    Selects another shape when this shape is selected.
                </summary>
      <param name="item">
                    The other shape to select on the diagram.
                </param>
      <param name="view">
                    The view for the diagram.
                </param>
      <param name="isAddition">true if the selection is being added; false if the selection if being removed.
                </param>
    </member>
    <member name="F:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.DomainClassId">
      <summary>
                    The ID that is assigned to the swimlane shape.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.FindHeaderBackgroundField(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.ShapeField})">
      <summary>
                    Searches for the area field that contains the background for the shape's header.
                </summary>
      <returns>
                    The area field that contains the background for the shape's header.
                </returns>
      <param name="shapeFields">
                    The area fields to search.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.ForwardDragDropToParent">
      <summary>
                    Gets the child shape and verifies whether the parent shape can be alerted when a user drags a child shape.
                </summary>
      <returns>true if the parent shape can be alerted when a user drags a child shape; otherwise, false.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.GetPotentialMouseAction(System.Windows.Forms.MouseButtons,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <summary>
                    Gets the mouse action to call when the MouseDown event occurs over the specified point.
                </summary>
      <returns>
                    The mouse action to call when the MouseDown event occurs over the specified point.
                </returns>
      <param name="mouseButtons">
                    The mouse buttons that can call the mouse action.
                </param>
      <param name="point">
                    The point on the diagram.
                </param>
      <param name="hitTestInfo">
                    The x-coordinate and y-coordinate of the mouse when a user clicks the diagram. 
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.HasConnectionPoints">
      <summary>
                    Gets the shape and verifies whether it requires connection points.
                </summary>
      <returns>true if the shape requires connection points; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.HasHighlighting">
      <summary>
                    Gets the shape and verifies whether is highlighted.
                </summary>
      <returns>true if the shape is highlighted; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.HasOutline">
      <summary>
                    Gets the shape and verifies whether it has an outline.
                </summary>
      <returns>true if the shape has an outline; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.HasShadow">
      <summary>
                    Gets the shape and verifies whether it has a shadow.
                </summary>
      <returns>true if the shape has a shadow; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.HeaderSize">
      <summary>
                    Gets the size of the header for the shape.
                </summary>
      <returns>
                    The size of the header for the shape.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.InitializeShapeFields(System.Collections.Generic.IList{Microsoft.VisualStudio.Modeling.Diagrams.ShapeField})">
      <summary>
                    Initializes the fields in the shape.
                </summary>
      <param name="shapeFields">
                    The fields in the shape.
                </param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.MinimumSize">
      <summary>
                    Gets the minimum size for the shape.
                </summary>
      <returns>
                    The minimum size for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.NestedShapesMargin">
      <summary>
                    Gets the margin between the shape's bounding box and its nested node shapes.
                </summary>
      <returns>
                    The margin between the shape's bounding box and its nested node shapes.
                </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.OnDragDrop(Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs)">
      <summary>
                    Alerts the parent shape that a user has dragged and dropped its child shape.
                </summary>
      <param name="e">
                    The arguments for the drag-and-drop event.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.OnDragOver(Microsoft.VisualStudio.Modeling.Diagrams.DiagramDragEventArgs)">
      <summary>
                    Alerts the parent shape that a user has dragged its child shape over another shape.
                </summary>
      <param name="e">
                    The arguments for the drag-and-drop event.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.OnInitialize">
      <summary>
                    Alerts listeners that the shape has been initialized.
                </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.OnPaintSelection(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
      <summary>
                    Alerts listeners that the current selection has been painted on the screen.
                </summary>
      <param name="e">
                    The arguments for the paint event.
                </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.OnShapeInserted"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.ResizableSides">
      <summary>
                    Gets the sides of the shape that a user can resize.
                </summary>
      <returns>
                    The sides of the shape that a user can resize.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.ShapeGeometry">
      <summary>
                    Gets the geometry for the shape.
                </summary>
      <returns>
                    The geometry for the shape.
                </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShape.ShouldTryParentShapeForMergeOnToolboxDoubleClick">
      <summary>
                    Gets the shape and verifies whether an action can occur when the user clicks this shape and then double-clicks a Toolbox item.
                </summary>
      <returns>
                    The subject for the shape is set as null.
                </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeGeometry"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeGeometry.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeGeometry.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo,System.Boolean)">
      <param name="geometryHost"></param>
      <param name="hitPoint"></param>
      <param name="hitTestInfo"></param>
      <param name="includeTolerance"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeGeometry.DoHitTestSelection(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="geometryHost"></param>
      <param name="hitPoint"></param>
      <param name="hitTestInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeGeometry.DoPaintGeometry(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost)">
      <param name="e"></param>
      <param name="geometryHost"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.CalculateQualifiedName(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.CreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.CreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.GetMonikerQualifier(Microsoft.VisualStudio.Modeling.DomainXmlSerializerDirectory,Microsoft.VisualStudio.Modeling.ModelElement)">
      <param name="directory"></param>
      <param name="element"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.MonikerAttributeName"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.MonikerTagName"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.Read(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlReader)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="reader"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.TryCreateInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.TryCreateMonikerInstance(Microsoft.VisualStudio.Modeling.SerializationContext,System.Xml.XmlReader,Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,Microsoft.VisualStudio.Modeling.Partition)">
      <param name="serializationContext"></param>
      <param name="reader"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relDomainClassId"></param>
      <param name="partition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.Write(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.RootElementSettings)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="rootElementSettings"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.WriteMoniker(Microsoft.VisualStudio.Modeling.SerializationContext,Microsoft.VisualStudio.Modeling.ModelElement,System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.DomainRelationshipXmlSerializer)">
      <param name="serializationContext"></param>
      <param name="element"></param>
      <param name="writer"></param>
      <param name="sourceRolePlayer"></param>
      <param name="relSerializer"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.SwimlaneShapeSerializer.XmlTagName"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.TextField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.#ctor(System.String)">
      <param name="fieldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.AllowInPlaceEditorAutoSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.CanEditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.CommitPendingEdit(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="view"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DefaultAutoSize"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DefaultCommitOnEscape"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DefaultFontId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DefaultInactiveSelectedTextBrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DefaultIsHorizontal"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DefaultMultipleLine"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DefaultSelectedTextBrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DefaultStringFormat"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DefaultText"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DefaultTextBrushId"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DisplayMember"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DoPaint(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="e"></param>
      <param name="parentShape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.DrawBorder"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="parentShape"></param>
      <param name="view"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.EditValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.String)">
      <param name="parentShape"></param>
      <param name="view"></param>
      <param name="replacementText"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.TextField.FillBackground"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetAccessibleDescription(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetAccessibleName(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetAccessibleRole(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetAccessibleState(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="diagramClientView"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetAccessibleValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetActiveInPlaceEditor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetAutoSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetDisplayText(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetFont(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetFontHeight(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetFontId(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetMaximumInPlaceEditorSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetMinimumInPlaceEditorSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetMinimumSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetMultipleLine(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetStringFormat(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetTextBrush(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="view"></param>
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetTextBrushId(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="view"></param>
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.GetValue(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.HasPendingEdit(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
      <param name="parentShape"></param>
      <param name="view"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.MeasureDisplayText(System.String,System.Drawing.Font,System.Drawing.StringFormat,Microsoft.VisualStudio.Modeling.Diagrams.SizeD)">
      <param name="displayText"></param>
      <param name="font"></param>
      <param name="format"></param>
      <param name="maximumSize"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.OnDoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.TextField.OnKeyPress(Microsoft.VisualStudio.Modeling.Diagrams.DiagramKeyPressEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonEventArgs"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonEventArgs.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonEventArgs.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonEventArgs.#ctor(System.Object,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="state"></param>
      <param name="parentShape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonEventArgs.Handled"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonEventArgs.ParentShape"></member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonEventArgs.State"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonEventHandler"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.#ctor(System.String)">
      <param name="fieldName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.ChangeState(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.CreateToggleButtonEventArgs(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.DefaultUnscaled"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.DoPaint(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="e"></param>
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.GetBitmap(System.String)">
      <param name="resourceName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.GetButtonImage(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.GetMetafile(System.String)">
      <param name="resourceName"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.GetMinimumSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.GetPotentialMouseAction(System.Windows.Forms.MouseButtons,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
      <param name="mouseButtons"></param>
      <param name="point"></param>
      <param name="hitTestInfo"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.GetUnscaled(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
      <param name="parentShape"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="E:Microsoft.VisualStudio.Modeling.Diagrams.ToggleButtonField.ToggleButtonStateChanging"></member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ToolboxAction"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToolboxAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
      <param name="diagram"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToolboxAction.GetCursor(System.Windows.Forms.Cursor,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
      <param name="currentCursor"></param>
      <param name="diagramClientView"></param>
      <param name="mousePosition"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToolboxAction.OnClicked(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToolboxAction.OnMouseActionDeactivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.ToolboxAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.UnplacedShapesContext"></member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.UnplacedShapesContext.GetUnplacedShapesMap(Microsoft.VisualStudio.Modeling.Transaction,System.Guid)">
      <param name="transaction"></param>
      <param name="targetDiagramId"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.UnplacedShapesContext.HasUnplacedShapesContext(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.UnplacedShapesContext.Remove(Microsoft.VisualStudio.Modeling.Transaction)">
      <param name="transaction"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.Modeling.Diagrams.UnplacedShapesContext.SetUnplacedShapesContext(Microsoft.VisualStudio.Modeling.Transaction,Microsoft.VisualStudio.Modeling.Diagrams.Diagram,System.Collections.IDictionary)">
      <param name="transaction"></param>
      <param name="targetDiagram"></param>
      <param name="unplacedShapeMap"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Modeling.Diagrams.ZoomChangedEventHandler"></member>
  </members>
</doc>