(require '@vector)
(require 'ert)
(defalias 'deftest 'ert-deftest)

(deftest @vector-tests ()
  (let ((v (@! @vector :new)))
    (@! v :push 'a)
    (@! v :push 'b 'c)
    (should (equal '(a b c) (@! v :to-list)))
    (should (eq 'c (@! v :pop)))
    (should (eq 'a (@! v :get 0)))
    (should (eq 'b (@! v :get 1)))
    (should (eq 'a (@! v :shift)))
    (@! v :unshift 'x 'y 'z)
    (setf (@ v 1) 'Y)
    (should (equal '(x Y z b) (@! v :to-list))))
  (let ((v (@! @vector :new)))
    (setf (@ v :vector-default) :foo)
    (should (eq :foo (@ v 100)))
    (setf (@ v 3) t)
    (should (= 4 (@! v :size)))))
