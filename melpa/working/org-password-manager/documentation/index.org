#+TITLE: =org-password-manager=
#+SUBTITLE: Minimal password manager for Emacs Org Mode.

# IMPORTANT: The documentation here is mirrored in =org-password-manager.el=
# comments. Any changes should be exported as UTF-8 and applied there.

-----

| *Version*         | [[https://www.leafac.com/projects/org-password-manager/CHANGELOG][0.0.1]]                                                                        |
| *[[https://www.leafac.com/projects/org-password-manager][Documentation]]*   |                                                                              |
| *License*         | [[https://gnu.org/licenses/gpl-3.0.txt][GNU General Public License Version 3]]                                         |
| *Code of conduct* | [[http://contributor-covenant.org/version/1/4/][Contributor Covenant v1.4.0]]                                                  |
| *Distribution*    | [[http://melpa.org/#/org-password-manager][MELPA]]                                                                        |
| *[[https://git.leafac.com/leafac/org-password-manager][Source]]*          |                                                                              |
| *Bug reports*     | Write an email to [[mailto:org-password-manager@leafac.com][=org-password-manager@leafac.com=]]                          |
| *Contributions*   | Send [[https://git-scm.com/docs/git-format-patch][patches]] or [[https://git-scm.com/docs/git-request-pull][pull requests]] via email to [[mailto:org-password-manager@leafac.com][=org-password-manager@leafac.com=]] |
| *Author*          | [[https://www.leafac.com][Leandro Facchinetti]]                                                          |

-----

#+TOC: headlines

* Philosophy

  - Simple :: To learn and use.

  - Concise :: Don't recreate features that already exist elsewhere (e.g. secure password
       generation).

  - Secure :: Don't do fancy security measures, they should be handled by
       specialized tools (e.g. [[https://gnupg.org/][GnuPG]]).

  - Flexible :: Restrict the users the least possible.

* Features

  1. Use [[http://orgmode.org/][Org Mode]] as password manager.

  2. Retrieve passwords in a practical and secure manner.

  3. Generate secure passwords.

  4. No configuration required.

* Installation

  Available in [[http://melpa.org/#/org-password-manager][MELPA]]. Install with =M-x package-install=.

  Password generation depends on [[http://pwgen.sourceforge.net/][=pwgen=]]. If you want to use this feature, install
  it.

  If you want to use the default keybindings described below on the [[#usage][Usage]]
  section, add the following line to your Emacs configuration:

  #+BEGIN_SRC emacs-lisp
    (add-hook 'org-mode-hook 'org-password-manager-key-bindings)
  #+END_SRC

  If you want some other keybindings, refer to the body of the function
  =org-password-manager-key-bindings= for an example on how to do it.

  If you want [[https://www.gnu.org/software/emacs/manual/ido.html][=ido=]] completion, enable the =org-completion-use-ido= variable by
  adding the following line to your Emacs configuration:

  #+BEGIN_SRC emacs-lisp
    (setq org-completion-use-ido t)
  #+END_SRC

* Usage
  :PROPERTIES:
  :CUSTOM_ID: usage
  :END:

** Store passwords in Org Mode files

   Follow the example:

   #+BEGIN_EXAMPLE
     ,* [[http://example.com][My favorite website]]
       :PROPERTIES:
       :USERNAME: leandro
       :PASSWORD: chunky-tempeh
       :END:

     ,* SSH key
       :PROPERTIES:
       :PASSWORD: tofu
       :END:
   #+END_EXAMPLE

** Get username

   Type =C-c C-p u= (=org-password-manager-get-username=) and search for the
   title of the entry containing the =USERNAME= property (e.g. "My favorite
   website"). The username is copied to the clipboard.

   If the point is at an entry that contains the =USERNAME= property, it is
   copied without querying for the heading. If you still want to be queried
   (because you want the username for a different entry) use the =C-u= argument
   typing =C-u C-c C-p u=.

** Get password

   Type =C-c C-p p= (=org-password-manager-get-password=) and search for the
   title of the entry containing the =PASSWORD= property (e.g. "My favorite
   website"). The password is copied to the clipboard. It tries to increase the
   security by skipping the kill ring and copying the password directly to the
   system's clipboard and by erasing it after 30 seconds. This period is
   customizable, refer to the [[#configuration][Configuration]] section for more.

   If the point is at an entry that contains the =PASSWORD= property, it is
   copied without querying for the heading. If you still want to be queried
   (because you want the password for a different entry) use the =C-u= argument
   typing =C-u C-c C-p u=.

** Generate password

   Type =C-c C-p g= (=org-password-manager-generate-password=) and the generated
   password is inserted under the point on the buffer. It is also copied to your
   clipboard. It tries to increase the security by skipping the kill ring and
   copying the password directly to the system's clipboard and by erasing it
   after 30 seconds. This period is customizable, refer to the [[#configuration][Configuration]]
   section for more.

   If you want to customize the =pwgen= command before running it (e.g. you want
   a shorter password), use the =C-u= argument by typing =C-u C-c C-p g=.

* Configuration
  :PROPERTIES:
  :CUSTOM_ID: configuration
  :END:

  Refer to =M-x customize-group org-password-manager=.

* Comparison to similar tools

  This work was first inspired by [[https://www.gnu.org/software/emacs/][Emacs]] and [[http://orgmode.org/][Org mode]], obviously.

  But I also want to cite two other projects that are similar in spirit to
  =org-password-manager=. They aim to accomplish the same goal---i.e. using
  [[https://www.gnu.org/software/emacs/][Emacs]] [[http://orgmode.org/][Org mode]] as a password manager. Though they differ on design from each
  other and from =org-password-manager=. Thus, the effort to create
  =org-password-manager= is still justified.

  Those related projects are both called =org-passwords=. One is by [[https://bitbucket.org/alfaromurillo/org-passwords.el][Jorge
  Alfaro-Murillo]] and the other by [[https://github.com/AndreaCrotti/org-passwords/][Andrea Crotti]].

  [[https://bitbucket.org/alfaromurillo/org-passwords.el][Jorge Alfaro-Murillo's =org-passwords=]] has lots of features, way more than
  =org-password-manager= plans to have. For example, it implements its own
  password generator, requires configuration for pointing to a password file
  that should only contain passwords and opens that file in read-only mode with
  a timeout. It is so complete that it is in the official distribution of [[http://orgmode.org/][Org
  mode]] under [[http://orgmode.org/cgit.cgi/org-mode.git/tree/contrib/lisp/org-passwords.el][org-contrib]].

  =org-password-manager=, on the other hand, uses [[http://pwgen.sourceforge.net/][pwgen]] to generate passwords,
  handles passwords stored on the middle of any [[http://orgmode.org/][Org mode]] file with other
  contents and doesn't open those files in any special way.

  [[https://github.com/AndreaCrotti/org-passwords/][Andrea Crotti's =org-passwords=]] is more minimal than =org-password-manager=
  aims to be. It only retrieves passwords for the entry under the point,
  generates passwords by calling [[http://pwgen.sourceforge.net/][pwgen]] and has almost no documentation,
  requiring the user to read the source.

  I appreciate the mentioned works and thank its authors.
