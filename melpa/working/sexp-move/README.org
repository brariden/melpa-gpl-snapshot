* sexp-move

*sexp-move* is a package for [[https://www.gnu.org/software/emacs/][GNU Emacs]] that adds two interactive functions that make it easy to move forward and back through most [[https://en.wikipedia.org/wiki/Lisp_%28programming_language%29][lisp]] programming languages.

** Raison d'Ãªtre

I wrote *sexp-move* to make it easier to tab-through my code. I use [[http://emacswiki.org/emacs/ParEdit][ParEdit]] to automatically add matching parentheses, brackets, and quotation marks to my code, and I want to press /TAB/ to get out of them. However, I found inadequate the [[http://pub.gajendra.net/src/paredit-refcard.pdf][default movement commands of ParEdit]]. The command =paredit-forward= skips over the nested S-Expression /(bar baz)/. 

*Example:*

(*NOTE:* the vertical bar (|) represents the current position of the cursor [i.e. /point/, in Emacs terminology]).

#+begin_src elisp
(foo| (bar baz) quux)
(foo (bar baz)| quux)
#+end_src

ParEdit has two "undocumented" commands, =paredit-forward-down= and =paredit-forward-up= that move into and out of nested expressions, but it does not have any command to [[https://en.wikipedia.org/wiki/DWIM][do what I mean]] when traversing the code. This critique also applies to =paredit-backward=.

To fill this need, I wrote *sexp-move*.

** Install

*** MELPA

*sexp-move* is not currently available through [[https://melpa.org/#/][MELPA]]. I will add it soon!

*** Manual

Since *sexp-move* is a single-file project, you simply have to download it and load it into Emacs. Type the following commands into a Unix shell.

#+begin_src sh
mkdir -p ~/.emacs.d/scripts
curl -L https://gitlab.com/elzair/sexp-move/raw/master/sexp-move.el > ~/.emacs.d/scripts/sexp-move.el
echo "(load \"~/Development/.emacs.d/scripts/sexp-move.el\")" >> ~/.emacs.d/init.el
#+end_src
    
** Use

Both functions, *sexp-move-forward* and *sexp-move-backward*, traverse the [[https://en.wikipedia.org/wiki/Lexeme][lexemes]] (i.e. the basic syntactical units) of lisp programming languages: parentheses, square brackets, curly brackets, double quote, single quote, grave (i.e. *`*), comma, white-space characters, and symbols (i.e. letters, numbers and other things that do not fit into the previous categories).

*** sexp-move-forward

This function moves the cursor (i.e. /point/) forward one /lexeme/.

**** Example

*NOTE:* The vertical bar *|* indicates the current position of the cursor in the buffer

#+begin_src elisp
|(puthash (intern "{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

=M-x sexp-move-forward RET=

#+begin_src elisp
(|puthash (intern "{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

=M-x sexp-move-forward RET=

#+begin_src elisp
(puthash| (intern "{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

=M-x sexp-move-backward RET=

#+begin_src elisp
(|puthash (intern "{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

=M-x sexp-move-forward RET=

#+begin_src elisp
(puthash| (intern "{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

=M-x sexp-move-forward RET=

#+begin_src elisp
(puthash |(intern "{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

=M-x sexp-move-forward RET=

#+begin_src elisp
(puthash (|intern "{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

=M-x sexp-move-forward RET=

#+begin_src elisp
(puthash (intern| "{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

=M-x sexp-move-forward RET=

#+begin_src elisp
(puthash (intern |"{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

=M-x sexp-move-forward RET=

#+begin_src elisp
(puthash (intern "|{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

*** sexp-move-backward
    
    This function moves the cursor backward one /lexeme/.

**** Example

#+begin_src elisp
(puthash| (intern "{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

=M-x sexp-move-backward RET=

#+begin_src elisp
(|puthash (intern "{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

=M-x sexp-move-backward RET=

#+begin_src elisp
|(puthash (intern "{")  #'sexp-move-single  *sexp-move-read-table*)
#+end_src

** Configure
   
Use the following code to replace the functions =forward-sexp= and =backward-sexp= with =sexp-mode-forward= and =sexp-move-backward=.

#+begin_src elisp
(global-set-key (kbd "C-M-f") 'sexp-move-forward)  ; Ctrl+Alt+f
(global-set-key (kbd "C-M-b") 'sexp-move-backward) ; Ctrl+Alt+b
#+end_src
