;; The contents of this file are subject to the LGPL License, Version 3.0.
;;
;; Copyright (C) 2013, 2014, Phillip Lord, Newcastle University
;;
;; This program is free software: you can redistribute it and/or modify it
;; under the terms of the GNU Lesser General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or (at your
;; option) any later version.
;;
;; This program is distributed in the hope that it will be useful, but WITHOUT
;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
;; FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
;; for more details.
;;
;; You should have received a copy of the GNU Lesser General Public License
;; along with this program. If not, see http://www.gnu.org/licenses/.

(ns leiningen.sync
  (:require [clojure.pprint])
  (:refer-clojure :exclude [sync]))
(defn deps [project]
  (get project :dependencies))

(defn repo [project]
  (get project :repositories))

(defn sync
  "Generate a .sync.clj file for this project"
  [project & args]
  (with-open [r (java.io.FileWriter. ".sync.clj")]
    (.write r ";; This file is auto-generated by lein sync\n")
    (clojure.pprint/pprint
     '(require 'cemerick.pomegranate) r)
    (clojure.pprint/pprint
     `(cemerick.pomegranate/add-dependencies
       :coordinates '[~@(deps project)]
       :repositories '~(repo project))
     r)
    (doseq [p
            (concat
             (get project :source-paths)
             (get project :resource-paths)
             )]
      (clojure.pprint/pprint
       `(cemerick.pomegranate/add-classpath ~p)
       r))
    ;; provide a non nil return value when loading
    (.write r "\".sync.clj has loaded correctly\"")))
