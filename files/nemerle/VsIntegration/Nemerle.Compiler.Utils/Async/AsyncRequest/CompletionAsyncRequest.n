using System;
using System.Linq;
using System.Threading;

using Nemerle.Collections;
using Nemerle.Completion2;
using Nemerle.Utility;

namespace Nemerle.Compiler.Utils.Async
{
  /// <summary>
  /// Description of WorkRequest.
  /// </summary>
  public class CompletionAsyncRequest : AsyncRequest
  {
    public this(
      engine      : IIdeEngine,
      source      : IIdeSource,
      line        : int,
      column      : int)
    {
      base(AsyncRequestType.Completion, engine, source, (engine :> Engine).Completion);
      Line            = line;
      Column          = column;
      CompletionElems = array(0);
    }

    public Line               : int                   { get; private set; }
    public Column             : int                   { get; private set; }
    public CompletionElems    : array[CompletionElem] { get; internal set; }
    public ComlitionLocation  : Location              { get; internal set; }

    public override IsForceOutBy(other : AsyncRequest) : bool
    {
      if (other.Engine : object != this.Engine)
        false
      else match (other.Type)
      {
        | AsyncRequestType.CloseProject
        | AsyncRequestType.UpdateCompileUnit
        | AsyncRequestType.BuildTypesTree    => true
        | _ => false
      }
    }
  }
}
