using System;
using System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Compiler;
using Nemerle.Utility;

namespace Nemerle.Completion2
{
  public abstract class MethodTipInfo
  {
    [Accessor] protected mutable _startName       : Location;
    [Accessor] protected mutable _startParameters : Location;
    [Accessor] protected mutable _nextParameters  : List[Location] = List();
    [Accessor] protected mutable _endParameters   : Location;
    [Accessor] protected mutable _defaultMethod   : int;
               public            ParameterIndex   : int { get; protected set; }
               public            SourceVersion    : int { get; protected set; }

    public abstract GetCount() : int;
    public abstract GetDescription(index : int) : string;
    public abstract GetType(index : int) : string;
    public abstract GetParameterCount(index : int) : int;
    public abstract GetParameterInfo(index : int, mutable parameter : int) : string * string * string;
    public abstract GetName(index : int) : string;

    public HasTip : bool
    {
      get { _startName.EndLine > 0 }
    }

    protected Init(
      [NotNull] nameToken        : Token.Identifier,
      [NotNull] paramsGroupToken : Token.RoundGroup
    ) : string
    {
      def makeParamsLocations(token : Token) 
      {
        | LooseGroup as lg =>
          def loc = lg.Location;
          _nextParameters.Add(Location(
            loc.FileIndex,
            loc.EndLine, loc.EndColumn,
            loc.EndLine, loc.EndColumn + 1));

          when (lg.Next != null)
            makeParamsLocations(lg.Next);

        | _ => ()
      }

      //Wrning! _startName should include full call location. It need for AuthoringSink.StartName().
      // For details see %VSSDK90Install%\VisualStudioIntegration\Common\Source\CSharp\LanguageService90\LanguageService.cs
      _startName       = nameToken.Location + paramsGroupToken.Location;
      _startParameters = paramsGroupToken.Location;

      makeParamsLocations(paramsGroupToken.Child);

      def loc = paramsGroupToken.Location;
      _endParameters = Location(
        loc.FileIndex,
        loc.EndLine,
        if (loc.EndColumn > 1) loc.EndColumn - 1 else loc.EndColumn);

      nameToken.name
    }
  }
}
