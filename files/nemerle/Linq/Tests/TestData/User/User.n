using System;
using System.Linq;

using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Extensions;

namespace Tests
{
  /// <summary>
  /// Description of User.
  /// </summary>
  [Record, StructuralHashCode] //StructuralEquality, 
  public class User
  {
    [Accessor] public _firstName : string;
    [Accessor] public _lastName  : string;
    [Accessor] public _age       : int;
    [Accessor] public _address   : IQueryable[Address];
    
    public this(firstName : string, lastName : string, age : int) 
    {
      this(firstName, lastName, age, [].AsQueryable())
    }

    public this(firstName : string, lastName : string, age : int, address : list[Address])
    {
      this(firstName, lastName, age, address.AsQueryable())
    }
    
    public GetFullName(prefix : string) : string { $"$prefix $FirstName $LastName" }
    
    public override ToString() : string
    {
      $"FirstName=$FirstName; LastName=$LastName; Age=$Age; Address=[..$(this.Address)]"
    }
    
    public override Equals(other : object) : bool
    {
      match (other)
      {
        | u is User => FirstName == u.FirstName && LastName == u.LastName && Age == u.Age
                       && this.Address.ForAll2(u.Address, (a1, a2) => a1.Equals(a2));
        | _ => false
      }
    }
  }
}
