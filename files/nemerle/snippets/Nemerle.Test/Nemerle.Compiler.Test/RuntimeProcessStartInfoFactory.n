using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Compiler.Test
{
  internal sealed class RuntimeProcessStartInfoFactory : ProcessStartInfoFactory
  {
    public this(runtimeFileName : string, [NotNull] runtimeArguments : list[string])
      requires !string.IsNullOrEmpty(runtimeFileName)
    {
      _runtimeFileName = runtimeFileName;
      _runtimeArguments = runtimeArguments;
    }

    public override CreateProcessStartInfo(fileName : string, [NotNull] arguments : IEnumerable[string]) : ProcessStartInfo
      requires !string.IsNullOrEmpty(fileName)
    {
      def actualArguments = List();
      actualArguments.AddRange(_runtimeArguments);
      actualArguments.Add(fileName);
      actualArguments.AddRange(arguments);

      def startInfo = ProcessStartInfo();
      startInfo.FileName = _runtimeFileName;
      startInfo.Arguments = JoinArguments(actualArguments);
      startInfo
    }

    private _runtimeFileName : string;
    private _runtimeArguments : list[string];
  }
}
