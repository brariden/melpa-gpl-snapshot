using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Statechart
{
    /// <summary>
  /// Description of HistoryPath.
  /// </summary>
  class HistoryPathBuilder
  {

    trav : ConfigTraverser;
    
    public this(trav : ConfigTraverser, from : HState, to : ActiveStateConfig, hist : PseudoState.History)
    {
      this.trav = trav;
      From = from;  
      To   = to;
      History = hist;
    }

    public From   : HState;
    public To     : ActiveStateConfig;

    public History : PseudoState.History;

    public CreatePath() : HistoryPath
    {
      def to = To.simple_states.First();
      def tran = HTransition(HTarget.State(From), StateEvent.Completion(), GuardNode.Empty(), [], HTarget.State(to), TransitionKind.History);
      def tran_path = TransitionPath(tran, trav.ActiveProc);
      def tran = tran_path.TraverseInitial();
      HistoryPath(tran, History, From)
    }

  }

}
