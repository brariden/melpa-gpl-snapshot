using System;
using System.Linq;
using System.Console;
using System.Collections.Generic;
using System.Threading;
using Nemerle.Collections;
using Nemerle.Utility;

using Nemerle.Statechart;
using System.Reflection;

namespace Nemerle.Statechart.Tests {

  module Program
  {
            
    public Run(machine : ITestStateMachine, name : string) : void
    {
      def tester = machine.GetTester();
      def interpreter = FsmInterpreter(tester);
      interpreter.StartConsole();
      def printer = FsmTestGen(machine.GetType().Name, interpreter.History);
      printer.GenerateTestMethods($"$name.n");
      printer.GenerateOutput($"$name.log");
    }
    
    Start(name : string, fsm : string, test : string) : void
    {
      def assembly = Assembly.LoadFrom(name);
      def type = assembly.GetType(fsm);
      def obj = Activator.CreateInstance(type);
      match (obj)
      {
        | ITestStateMachine as m => Run(m, test)
        | _                      => Console.WriteLine($<#Type $fsm must implement ITestStateMachine interface, use "testing" flag in statemachine#>);
      }      
    }
    
    public Main(pars : array[string]) : void
    {
      match (pars.NToList())
      {
        | name :: fsm :: test :: flags :: [] when flags == "-debug" => assert2(false);Start(name, fsm, test)
        | name :: fsm :: test :: []                                 => Start(name, fsm, test)
        | _                                                         => Console.WriteLine("Usage: fsmtest.exe [assembly] [fsm_type] [out_file_name] [flags]");
      }
    }
  }
}
