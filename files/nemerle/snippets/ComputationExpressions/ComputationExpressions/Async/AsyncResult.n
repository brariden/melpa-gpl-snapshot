using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.ComputationExpressions.Async
{
  public abstract variant AsyncResult[A]
  {
    public abstract GetValue() : A;

    | Value
      {
        value : A;
        public override GetValue() : A
        {
          value;
        }
      }

    | Exeption
      {
        ex : Exception;
        public override GetValue() : A
        {
          throw ex;
        }
      }

    | Canceled
      {
        public override GetValue() : A
        {
          throw AsyncCancelationException();
        }
      }

    public override ToString() : string
    {
      match (this)
      {
        | Value(value) => $"Value($value)"
        | Exeption(ex) => $"Exception($(ex.GetType().FullName))"
        | Canceled     =>  "Canceled"
      }
    }
  }
}
