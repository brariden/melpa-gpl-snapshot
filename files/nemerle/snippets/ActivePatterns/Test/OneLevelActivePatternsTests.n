using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Globalization;

using NUnit.Framework;

using Nemerle.ActivePatterns;

namespace Test
{
  [TestFixture]
  public class OneLevelActivePatternsTests
  {
    Integer(obj : string) : option[int]
    {
      mutable data = 0;
      if (int.TryParse(obj, NumberStyles.Float, CultureInfo.InvariantCulture, out data)) Some(data) else None()
    }
      
    Float(obj : string) : option[float]
    {
      mutable data = 0 :> float;
      if (float.TryParse(obj, NumberStyles.Float, CultureInfo.InvariantCulture, out data)) Some(data) else None()
    }
    
    public CaseA() : void 
    {
      active match("5") 
      {
        | Integer(i) => Assert.That(i, Is.EqualTo(5))
        | Float(_) => Assert.Fail()
      }
    }
    
    public CaseB() : void 
    {
      active match("5.5") 
      {
        | Integer(_) => Assert.Fail()
        | Float(f) => Assert.That(f, Is.EqualTo(5.5))
      }
    }
  }
}
