using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using Nemerle.Statechart;

namespace Nemerle.Statechart.Tests
{
  /// <summary>
  /// Description of CarFsm.
  /// </summary>
  [statechart(
  <#
  flags property_state_change log;
  flags : testing;

  //flags : debug;

  name Car;

  0 / initialize => EngineOff;

  state EngineOff
  {
    TURN_KEY [isBatteryOk()] / start() => MotorOn;
  }

  state MotorOn
  {
    0 / Oil-Display() => Stand;

    TURN_KEY / stop() => EngineOff;
    entry / RadioOn();
    exit  / RadioOff();
    do    / coolEngine();

    state Stand
    {
      GAS_PEDAL / accelerate() => Drive;
    }

    state Drive
    {
      BREAK_PEDAL [speed == 1] / Break() => Stand;
      BREAK_PEDAL [speed > 1]  / Break   => @;
      GAS_PEDAL / accelerate();
    }

  }

  #>
  )]
  public class CarFsm
  {
    battery_level : int    = 100;

    [NotifyPropertyChange]
    public speed         : double {get;set; default 0}

    Break() : void
    {
      speed--
    }

    accelerate() : void
    {
      speed++
    }

    initialize() : void
    {
    }

    isBatteryOk() : bool
    {
      battery_level != 0
    }

  }

}
