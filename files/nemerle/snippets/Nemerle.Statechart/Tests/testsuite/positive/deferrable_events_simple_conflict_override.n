using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Console;
using Nemerle.Statechart;
  /// <summary>
  /// Description of Hypothetical.
  /// </summary>
  [statechart(<#

  flags testing;
  //flags debug;

  name "deferable event simple conflict override";

  state A
  {
    a / defer;

    state B
    {
      a => C;
    }

    state C
    {
      b => B;
    }
  }

  #>)]
  public class example
  {
  }

  module Test
  {
    Main() : void
    {
      def fsm = example();
      def tester = fsm.GetTester();
      tester.ConsoleTestInit();
      tester.Initiate(["A", "B"]);
      tester.Test("a", ["B"], ["C"]);
      tester.Test("a", null);
      tester.TestWait("b", 500, "C", "ExitC", "EntryB", "ExitB", "EntryC");
      fsm.Terminate();
    }
  }
/*
BEGIN-OUTPUT
EntryA
EntryB
[B]
Ok
Processing a 'a' 
ExitB
EntryC
[C]
Ok
Processing a 'a' 
[C]
Ok
Processing a 'b' 
ExitC
EntryB
ExitB
EntryC
[C]
Ok
END-OUTPUT
*/
