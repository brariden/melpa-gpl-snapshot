using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

  [statechart(<#

  flags testing;
  //flags debug;
  
  name "transition to history from initial pseudo state";
  
  state A
  {
    a => B;
  }
    
  state B
  {
    0 => H;
    
    state C
    {
      a => A;
    }
    
    state D
    {
      a => C;
    }
    
    (H) => D;
  }
  
  #>)]
  public class example
  {
  }

  module Test
  {
     
    Main() : void
    {
      def fsm = example();
      def tester = fsm.GetTester();
      tester.ConsoleTestInit(true);
      tester.Initiate("A", "EntryA");
      tester.Test("a", "D", "ExitA", "EntryB", "EntryBInitial", "ExitBInitial", "EntryD");
      tester.Test("a", ["D"], ["C"]);
      tester.Test("a", ["C", "B"], ["A"]);
      tester.Test("a", "C", "ExitA", "EntryB", "EntryBInitial", "ExitBInitial", "EntryC");
      fsm.Terminate();
    }
  }

/*
BEGIN-OUTPUT
EntryA
[A]
Ok
Processing a 'a' 
ExitA
EntryB
EntryBInitial
ExitBInitial
EntryD
[D]
Ok
Processing a 'a' 
ExitD
EntryC
[C]
Ok
Processing a 'a' 
ExitC
ExitB
EntryA
[A]
Ok
Processing a 'a' 
ExitA
EntryB
EntryBInitial
ExitBInitial
EntryC
[C]
Ok
END-OUTPUT
*/
