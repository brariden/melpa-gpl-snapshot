using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

using System.Collections.Generic;
using System.Linq;
  /// <summary>
  /// Description of junction_example.
  /// </summary>
  [statechart(
  <#
  flags testing;

  // flags debug;

  event a(int);
  
  name "events with parameters";
  
   state A
   {
     a(b) [b >= 1] / Console.WriteLine($"b=$b") => B;
   }
   
   state B
   {
     a => A;
   }
  #>)]
  public class example
  {
  }



module Test
{
  Main() : void
  {
    def fsm = example();
    def tester = fsm.GetTester();
    tester.ConsoleTestInit();
    tester.Initiate("A", "EntryA");
    tester.Test(example.Event.A(0), null);
    tester.Test(example.Event.A(1), ["A"], ["B"]);
    tester.Test(example.Event.A(0), ["B"], ["A"]);
    tester.Test(example.Event.A(10), ["A"], ["B"]);
    fsm.Terminate();
  }
}

/*
BEGIN-OUTPUT
EntryA
[A]
Ok
Processing a 'a' 
[A]
Ok
Processing a 'a' 
ExitA
b=1
EntryB
[B]
Ok
Processing a 'a' 
ExitB
EntryA
[A]
Ok
Processing a 'a' 
ExitA
b=10
EntryB
[B]
Ok
END-OUTPUT
*/
