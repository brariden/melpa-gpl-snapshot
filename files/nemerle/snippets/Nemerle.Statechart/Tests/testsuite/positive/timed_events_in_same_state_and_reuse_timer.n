using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

using System.Collections.Generic;
using System.Linq;
  /// <summary>
  /// Description of junction_example.
  /// </summary>
  [statechart(
  <#
  flags auto_initial testing;
  
  name "timed event in same state and reuse timer";
  
  state A
  {
    a => B;
  }
  
  state B
  {
    after (300 ms) / act1;
    
    state D
    {
      after (500 ms) => C;
    }
  }
   
  state C
  {
    after (500 ms) => A;
  }
  #>)]
  public class example
  {
  }

  module Test
  {
    Main() : void
    {
      def fsm = example();
      def tester = fsm.GetTester();
      tester.ConsoleTestInit();
      tester.Initiate("A", "EntryA");
      tester.TestWait("a", 1500, "A", "ExitA", "EntryB", "EntryD", "act1", "ExitD", "ExitB", "EntryC", "ExitC", "EntryA");
      fsm.Terminate();
    }
  }

/*
BEGIN-OUTPUT
EntryA
[A]
Ok
Processing a 'a' 
ExitA
EntryB
EntryD
act1
ExitD
ExitB
EntryC
ExitC
EntryA
[A]
Ok
END-OUTPUT
*/
