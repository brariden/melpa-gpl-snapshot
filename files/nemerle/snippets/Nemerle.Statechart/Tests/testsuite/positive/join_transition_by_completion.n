using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

  [statechart(<#

  flags testing auto_initial;
  //flags debug;
  
  name "join transition with completion event";
  
  state A
  {
    a => B;
  }

  region B
  {
    @(F, C): _ => A;
    
    state E
    {
      a => F;
    }
    
    state F
    {
    }
    
  } and
  {
    
    state D
    {
      a => C;
    }
    
    state C
    {
    }
    
  }
  
  #>)]
  public class example
  {
  }

  
 module Test
 {
   Main() : void
   {
    def fsm = example();
    def tester = fsm.GetTester();
    tester.ConsoleTestInit();
    tester.Initiate("A", "EntryA");
    tester.Test("a", "E|D", ["A"], ["B", "E", "D"]);
    tester.Test("a", "A", "ExitE", "ExitD", "EntryF", "EntryC", "ExitC", "ExitF", "ExitB", "EntryA");
    fsm.Terminate();
   }
 }
 
/*
BEGIN-OUTPUT
EntryA
[A]
Ok
Processing a 'a' 
ExitA
EntryB
EntryE
EntryD
[E|D]
Ok
Processing a 'a' 
ExitE
ExitD
EntryF
EntryC
ExitC
ExitF
ExitB
EntryA
[A]
Ok
END-OUTPUT
*/
 
