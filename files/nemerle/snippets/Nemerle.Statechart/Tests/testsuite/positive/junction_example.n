using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

using System.Collections.Generic;
using System.Linq;

  /// <summary>
  /// Description of junction_example.
  /// </summary>
  [statechart(
  <#
  flags testing;

  //flags debug;

  junction junc
  {
    a < 0  => state2;
    a == 5 => state3;
    a > 7  => state4;
  }

  e1 => state1;
  e2 => state0;

  state state0
  {
    e2 [b < 0] => junc;
  }

  state state1
  {
    e1 [b < 0] => junc;
  }

  state state2
  {
  }

  state state3
  {
  }

  state state4
  {
  }

  #>)]
  public class junction_example
  {
    public a : int {get;set;default 0}
    public b : int {get;set;default 0}
  }



module Test
{
  Main() : void
  {
    def fsm = junction_example();
    def tester = fsm.GetTester();
    tester.ConsoleTestInit();
    tester.Initiate(["State0"]);
    tester.Test("e2", "State0", "ExitState0", "ExitTop", "EntryTop", "EntryState0");
    fsm.a = -1;
    fsm.b = -1;
    tester.Test("e2", "State2", "ExitState0", "EntryState2");
    tester.Test("e1", "State1", "ExitState2", "ExitTop", "EntryTop", "EntryState1");
    fsm.a = 5;
    tester.Test("e1", "State3", "ExitState1", "EntryState3");
    tester.Test("e2", "State0", "ExitState3", "ExitTop", "EntryTop", "EntryState0");
    fsm.a = 0;
    tester.Test("e2", "State0", "ExitState0", "ExitTop", "EntryTop", "EntryState0");
    fsm.a = 10;
    tester.Test("e2", "State4", "ExitState0", "EntryState4");
    fsm.Terminate();

  }
}

/*
BEGIN-OUTPUT
EntryState0
[State0]
Ok
Processing a 'e2'
ExitState0
ExitTop
EntryTop
EntryState0
[State0]
Ok
Processing a 'e2'
ExitState0
EntryState2
[State2]
Ok
Processing a 'e1'
ExitState2
ExitTop
EntryTop
EntryState1
[State1]
Ok
Processing a 'e1'
ExitState1
EntryState3
[State3]
Ok
Processing a 'e2'
ExitState3
ExitTop
EntryTop
EntryState0
[State0]
Ok
Processing a 'e2'
ExitState0
ExitTop
EntryTop
EntryState0
[State0]
Ok
Processing a 'e2'
ExitState0
EntryState4
[State4]
Ok
END-OUTPUT
*/
