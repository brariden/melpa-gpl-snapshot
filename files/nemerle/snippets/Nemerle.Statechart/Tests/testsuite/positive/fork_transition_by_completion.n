using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using Nemerle.Statechart;

  [statechart(<#

  flags testing auto_initial;
  //flags debug;
  
  name "fork transition with completion";
  
  state A
  {
    _ => (F, C);
  }

  region B
  {
    a => A;
    
    state F
    {
    }
    
  } and
  {
    
    state C
    {
    }
    
  }
  
  #>)]
  public class example
  {
  }

  
  module Test
  {
    Main() : void
    {
      def fsm = example();
      def tester = fsm.GetTester();
      tester.ConsoleTestInit();
      tester.Initiate("F|C", "EntryA", "ExitA", "EntryB", "EntryF", "EntryC");
      tester.Test("a", "F|C", "ExitC", "ExitF", "ExitB", "EntryA", "ExitA", "EntryB", "EntryF", "EntryC");
      fsm.Terminate();
    }
  }
 
/*
BEGIN-OUTPUT
EntryA
ExitA
EntryB
EntryF
EntryC
[F|C]
Ok
Processing a 'a' 
ExitC
ExitF
ExitB
EntryA
ExitA
EntryB
EntryF
EntryC
[F|C]
Ok
END-OUTPUT
*/
