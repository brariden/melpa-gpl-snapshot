#pragma indent
using Nemerle.Compiler

namespace Nemerle.Aop.Helper
 public class RootPointcut : Pointcut
   pointcut : Pointcut
   mutable additional_constraints : list[Pointcut] = []

   public this(p : Pointcut)
       pointcut = p

   public Add(p : Pointcut) : void
       additional_constraints ::= p

   public override Matches(jp : Joinpoint) : MatchResult
       def state = TypePattern.PushState()
       def match_result = pointcut.Matches(jp) 
       def to_return = if (additional_constraints.ForAll(p=>p.Matches(jp).Matched))
         match_result
       else
         MatchResult(false, [])
       TypePattern.PopState(state)
       to_return

