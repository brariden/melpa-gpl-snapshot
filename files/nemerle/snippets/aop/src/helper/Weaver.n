#pragma indent

using Nemerle.Compiler

namespace Nemerle.Aop.Helper
  module Weaver
    public Weave(types_manager : TypesManager) : void
      def weave_if_matches(jp)
          Advices.Instance.WeaveIfMatches(jp)

      types_manager.Iter( fun(tb) {
          when (!tb.IsInterface) {
              tb.GetMethods().Iter( fun(meth) {
                  when (meth is MethodBuilder) {
                      weave_if_matches(Joinpoint(meth :> MethodBuilder))
                  }
              });
              tb.GetConstructors().Iter( fun(meth) {
                  when (meth is MethodBuilder)
                      weave_if_matches(Joinpoint(meth :> MethodBuilder))
              });
              tb.GetProperties().Iter( fun(prop : IProperty) {
                  when(prop.GetGetter() != null && prop.GetGetter() is MethodBuilder) 
                      weave_if_matches(Joinpoint.MakePropertyGetJoinpoint(prop.GetGetter()  :> MethodBuilder, prop.Name));
                  when(prop.GetSetter() != null && prop.GetSetter() is MethodBuilder) 
                      weave_if_matches(Joinpoint.MakePropertySetJoinpoint(prop.GetSetter()  :> MethodBuilder, prop.Name));
              });
          }
      }); 
