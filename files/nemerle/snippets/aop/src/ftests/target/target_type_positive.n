/* This tests the target primitive pointcut which puts constraint on type */

using Nemerle.Aop;
using Nemerle.IO;

public class C {
    public Method(): void {print("method\n")}
}

[aspect()] public class Aspecto {

    after() returning: execution(C.Method(): void) && target(C) {
        print("advice\n");
    }
}

public class Main {
    public static Main(): void {
        def o = C();
        o.Method();
    }
}

/*
BEGIN-OUTPUT
method
advice
END-OUTPUT
*/
