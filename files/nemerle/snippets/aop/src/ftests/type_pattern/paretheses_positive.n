using Nemerle.Aop;
using Nemerle.IO;

public class C {


    public Method( _: float*(int*int) -> int): void {
        print("M\n");
    }
    public Method( _: float*int*int -> int): void {
        print("M.overloaded\n");
    }

}

[aspect()] public class Aspecto {


    after() returning: execution( C.?( ?*(?*?) -> ? ): ?) {
        print("advice\n");
    }
}

public class Main {
    public static Main(): void {
        C().Method(fun (_,(y,_)) { y});
        C().Method((_,y,_) => y);
    }
}

/*
BEGIN-OUTPUT
M
advice
M.overloaded
END-OUTPUT
*/
