using Nemerle.Compiler;
using System.Collections;
using Nemerle.Aop.Helper;
using Nemerle.IO;

module Helper {

    public ConvertToTokens(elems: list[string]): Token {
        | head::tail =>
            def tok = match(head) {
                | "*" => Token.Operator("*")
                | "?" => Token.Operator("?")
                | "." => Token.Operator(".")
                | "||" => Token.Operator("||")
                | "&&" => Token.Operator("&&")
                | ".." => Token.Operator("..")
                | _ => Token.Identifier(head)
            }
            tok.Next =  ConvertToTokens(tail);
            tok
        | [] => null
    }

    public ConvertToTokenLooseGroup(elems: list[string]): Token {
        Token.LooseGroup(ConvertToTokens(elems))
    }

    public MakeLexerFrom(elems: list[string]): Lexer {
        Lexer(ConvertToTokenLooseGroup(elems))
    }

    public TokenList(elems: list[string]): PInput {
        def toks = MakeLexerFrom(elems).Map(x=>x);
        PInput(toks, null, null)
    }
}
