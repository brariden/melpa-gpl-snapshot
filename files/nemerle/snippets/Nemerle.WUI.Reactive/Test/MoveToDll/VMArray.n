using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.WUI.Reactive
{
  public class VMArray[T] : Seq[T], IJsonSupport
  {
    public static Empty : VMArray[T] = VMArray();
    _data : List[T];
    
    public this(data : Seq[T]) { _data = List(data); }
    public this()              { _data = List(); }
    
    [JsName("push")]
    public Add(item : T) : void { _data.Add(item) }
    
    public Remove(item : T) : void { _ = _data.Remove(item) }
    
    [JsName("length")]
    public Length : int { get { _data.Count } }
    
    [JsName("indexOf")]
    public IndexOf(item : T) : int { _data.IndexOf(item) }
    
    [JsName("removeAll")]
    public RemoveAll(items : VMArray[T]) : void { _ = _data.RemoveAll(i => items.Contains(i)) }
    
    //[Js("indexOf($item) >= 0")]
    public Contains(item : T) : bool { _data.Contains(item) }
    
    public GetEnumerator() : IEnumerator[T]
    {
      foreach (item in _data)
        yield item;
    }

    public ToJson() : string { $<#[..$(_data; ", "; Utils.ToJson)]#> }
  }
}
