// OPTIONS: -debug+
using System;
using System.Console;

using Nemerle.Extensions;

[Record]
class Foo
{
  public X : string { get; }
  public event Something1 : EventHandler;
  public event Something2 : EventHandler;
  public DoSomething1() : void { Something1?.Invoke(this, EventArgs.Empty); }
  public DoSomething2() : void { Something2?.Invoke(this, EventArgs.Empty); }
}

public class Baz 
{ 
  public X : int { get; set } 
}

public class Bar 
{ 
  public Baz : Baz { get; set } 
}
  
module Program
{
  Main() : void
  {
    def c1 = Foo("Button") <-
    {
      Something1 += (_) =>
      {
        WriteLine("handler 1");
      };
      Something2 =>
      {
        WriteLine("handler 2");
      };
      DoSomething1();
      DoSomething2();
    };
    WriteLine(c1.X);
    
    WriteLine(Bug13279().Baz.X) //Bug13279
  }
  
  public entity[T]() : T where T : new()
  {
    T()
  }
  
  public Bug13279() : Bar
  {
    entity() <- { Baz = entity() <- { X = 42 } }
  }
  
}
/*
BEGIN-OUTPUT
handler 1
handler 2
Button
42
END-OUTPUT
*/