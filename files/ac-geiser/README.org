#+TITLE: ac-geiser
#+OPTIONS: toc:2 num:nil ^:nil

* Introduction

This project is inspired by [[https://github.com/purcell/ac-slime][ac-slime]] and [[https://github.com/clojure-emacs/ac-nrepl][ac-nrepl]], which makes Scheme
programming in Emacs more enjoyable by providing a completion source for the
popular Emacs interactive auto-completion framework [[http://cx4a.org/software/auto-complete/][auto-complete]].

Where [[http://www.nongnu.org/geiser/][geiser]] provides it, pop-up documentation for completed symbols will be
displayed.

* Installation

First, ensure =auto-complete= and =geiser= are installed.

You'll need both =auto-complete= and =geiser= to be enabled and working, I
recommend using a Emacs package manager, either the builtin =package.el= or the
more flexible =el-get=. For =package.el=, [[http://marmalade-repo.org/][Marmalade]] and [[http://melpa.milkbox.net/][Mepla]] is your good
friends. Please consult the corresponding documentation if you have any trouble
with this.

Next, install =ac-geiser=. Again, you can install it by =package.el= or
=el-get=. After installation, put necessary code to your =.emacs= file:

#+BEGIN_SRC emacs-lisp
  (require 'ac-geiser)
  (add-hook 'geiser-mode-hook 'ac-geiser-setup)
  (add-hook 'geiser-repl-mode-hook 'ac-geiser-setup)
  (eval-after-load "auto-complete"
    '(add-to-list 'ac-modes 'geiser-repl-mode))
#+END_SRC

* Usage

=ac-geiser= should now automatically be enabled when you visit a buffer in
which =geiser-mode= is active and =auto-complete= is enabled.

Simply trigger auto-completion, and completion candidates supplied by geiser
should be displayed, with the symbol =g= on the right hand side of the
completion pop-up. After a short delay, popup documentation for the completed
symbol should also be displayed.

Screenshots:

[[http://img3.douban.com/view/photo/large/public/p2151078655.jpg]]
